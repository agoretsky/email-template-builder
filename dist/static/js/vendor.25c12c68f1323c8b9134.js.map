{"version":3,"sources":["webpack:///static/js/vendor.25c12c68f1323c8b9134.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/interactjs/interact.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./~/core-js/library/fn/json/stringify.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js"],"names":["webpackJsonp","2","module","exports","__webpack_require__","Object","defineProperty","get","a","3","core","version","__e","4","it","5","realWindow","blank","isElement","o","_window","getWindow","window","test","Element","nodeType","nodeName","isWindow","thing","Window","isDocFrag","DocumentFragment","isArray","isObject","undefined","length","isFunction","splice","isNumber","isBool","isString","trySelector","value","document","querySelector","extend","dest","source","prop","pointerExtend","deprecated","vendor","prefixedPropREs","indexOf","copyCoords","src","page","x","y","client","timeStamp","setEventXY","targetObj","pointers","interaction","pointer","pointerAverage","getPageXY","tmpXY","getClientXY","Date","getTime","setEventDeltas","prev","cur","dt","Math","max","speed","hypot","vx","vy","isNativePointer","Event","supportsTouch","Touch","getXY","type","xy","isOperaMobile","scrollX","scrollY","getScrollXY","win","documentElement","scrollLeft","scrollTop","getPointerId","pointerId","identifier","getActualElement","element","SVGElementInstance","correspondingUseElement","node","rootNode","ownerDocument","defaultView","parentWindow","getElementClientRect","clientRect","SVGElement","getBoundingClientRect","getClientRects","left","right","top","bottom","width","height","getElementRect","isIOS7","scroll","getTouchPair","event","touches","changedTouches","average","pageX","pageY","clientX","clientY","screenX","screenY","i","touchBBox","minX","min","minY","maxX","maxY","touchDistance","deltaSource","defaultOptions","sourceX","sourceY","dx","dy","touchAngle","prevAngle","angle","atan","PI","dr","drClamped","getOriginXY","interactable","origin","options","parentElement","getRect","closest","_getQBezierValue","t","p1","p2","p3","iT","getQuadraticCurvePoint","startX","startY","cpX","cpY","endX","endY","position","easeOutQuad","b","c","d","nodeContains","parent","child","parentNode","selector","matchesSelector","host","inContext","_context","testIgnore","interactableElement","ignoreFrom","matchesUpTo","testAllow","allowFrom","checkAxis","axis","thisAxis","drag","checkSnap","action","snap","enabled","checkRestrict","restrict","checkAutoScroll","autoScroll","withinInteractionLimit","maxActions","name","maxPerElement","activeInteractions","targetCount","targetElementCount","len","interactions","otherAction","prepared","active","interacting","maxInteractions","target","indexOfDeepestElement","elements","dropzone","n","deepestZone","index","deepestZoneParents","dropzoneParents","unshift","HTMLElement","SVGSVGElement","ownerSVGElement","parents","lastChild","previousSibling","Interaction","this","dropTarget","dropElement","prevDropTarget","prevDropElement","edges","matches","matchElements","inertiaStatus","smoothEnd","ending","startEvent","upCoords","xe","ye","sx","sy","t0","vx0","vys","duration","resumeDx","resumeDy","lambda_v0","one_ve_v0","Function","prototype","bind","boundInertiaFrame","inertiaFrame","boundSmoothEndFrame","smoothEndFrame","that","activeDrops","dropzones","rects","pointerIds","downTargets","downTimes","holdTimers","prevCoords","curCoords","startCoords","pointerDelta","downEvent","downPointer","_eventTarget","_curEventTarget","prevEvent","tapTime","prevTap","startOffset","restrictOffset","snapOffsets","gesture","start","startDistance","prevDistance","distance","scale","startAngle","snapStatus","realX","realY","snappedX","snappedY","targets","locked","changed","restrictStatus","restrictedX","restrictedY","restricted","pointerIsDown","pointerWasMoved","gesturing","dragging","resizing","resizeAxes","mouse","push","getInteractionFromPointer","eventType","eventTarget","mouseEvent","pointerType","id","inertia","allowResume","supportsPointerEvent","contains","doOnInteractions","method","path","curEventTarget","currentTarget","prevTouchTime","_updateEventTargets","InteractEvent","phase","related","starting","coords","relativePoints","range","elementRect","x0","y0","clientX0","clientY0","ctrlKey","altKey","shiftKey","metaKey","button","buttons","detail","relatedTarget","zeroResumeDelta","resize","square","axes","box","ds","da","prevScale","velocityX","velocityY","atan2","overlap","up","down","swipe","velocity","preventOriginalDefault","originalEvent","preventDefault","getActionCursor","cursor","actionCursors","cursorKey","edgeNames","checkResizeEdge","rect","margin","defaultActionChecker","resizeEdges","shouldResize","actionIsEnabled","resizeOptions","edge","validateAction","actionName","delegateListener","useCapture","fakeEvent","delegated","delegatedEvents","selectors","context","contexts","listeners","j","delegateUseCapture","call","interact","interactables","Interactable","_element","_iEvents","Node","events","add","pEventTypes","pointerDown","move","pointerHover","_doc","documents","listenToDocument","set","warnOnce","message","warned","console","warn","apply","arguments","endAllInteractions","pointerEnd","doc","PointerEvent","MSPointerEvent","over","out","cancel","selectorDown","pointerMove","pointerOver","pointerOut","pointerUp","pointerCancel","autoScrollMove","frameElement","parentDoc","error","windowParentError","checkAndPreventDefault","useAttachEvent","currentAction","array","nodeList","ie8MatchesSelector","replace","prefixedMatchesSelector","limit","el","createTextNode","wrap","sqrt","dynamicDrop","base","accept","actionChecker","styleCursor","dropChecker","manualStart","Infinity","drop","preserveAspectRatio","NaN","invert","perAction","endOnly","offsets","container","resistance","minSpeed","endSpeed","smoothEndDuration","_holdDuration","now","dtx","prevTimeX","dty","prevTimeY","scrollBy","isScrolling","cancelFrame","reqFrame","stop","DocumentTouch","navigator","userAgent","pointerMoveTolerance","all","atob","resizex","resizey","resizexy","resizetop","resizeleft","resizebottom","resizeright","resizetopleft","resizebottomright","resizetopright","resizebottomleft","wheelEvent","eventTypes","globalEvents","appName","match","platform","appVersion","requestAnimationFrame","cancelAnimationFrame","listener","elementIndex","typeCount","attachedListeners","supplied","wrapped","useCount","ret","listenerIndex","immediatePropagationStopped","srcElement","preventDef","stopPropagation","stopProp","stopImmediatePropagation","stopImmProp","addEvent","on","Boolean","remove","removeEvent","hasOwnProperty","returnValue","cancelBubble","_elements","_targets","_attachedListeners","webkit","ptr","pushCurMatches","curMatches","curMatchElements","prevTargetElement","addPointer","elementInteractable","elementAction","getAction","forEachSelector","validateSelector","style","pushMatches","querySelectorAll","eventCopy","pointerIndex","setTimeout","pointerHold","collectEventTargets","forceAction","newAction","setModifications","preEnd","shouldMove","shouldSnap","shouldRestrict","setSnapping","setRestriction","setStartOffsets","snapOffset","offset","pageUp","clientUp","inertiaPosition","recordPointer","duplicateMove","clearTimeout","absX","abs","absY","targetAxis","thisInteraction","getDraggable","selectorInteractable","dragStart","dragEvent","fire","setActiveDrops","dropEvents","getDropEvents","activate","fireActiveDrops","dragMove","draggableElement","getDrop","leave","enter","resizeStart","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","current","previous","delta","deltaRect","resizeMove","invertible","originalEdges","swap","gestureStart","gestureEvent","gestureMove","isNaN","removePointer","ie8Dblclick","endEvent","inertiaOptions","pointerSpeed","inertiaPossible","endSnap","endRestrict","snapRestrict","vy0","v0","calcInertia","statusObject","useStatusXY","modifiedXe","modifiedYe","deactivate","collectDrops","drops","dropElements","currentElement","prevElement","dragElement","possibleDrops","validDrops","dropCheck","dropIndex","pointerEvent","draggable","dragLeave","prevDropzone","dragEnter","dragmove","clearTargets","lambda","te","progress","exp","quadPoint","collectSelectors","els","isSet","firePointers","interval","createNewDoubleTap","originalPointer","double","propagationStopped","doubleTap","matchElement","pageCoords","status","relIndex","relative","inRange","snapChanged","restriction","prevent","inertiaDur","log","innerWidth","innerHeight","interactionListeners","indexOfElement","callback","setOnEvents","phases","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","onstart","onmove","onend","oninertiastart","setPerAction","option","checker","dropped","dropOverlap","horizontal","vertical","dragRect","cx","cy","overlapArea","overlapRatio","newValue","resizable","squareResize","gesturable","actions","setOptions","thisOption","mode","createSnapGrid","gridOffset","grid","anchors","paths","elementOrigin","allActions","rectChecker","iEvent","onEvent","funcName","search","trim","split","off","eventList","matchFound","fn","useCap","methods","perActions","settings","setting","unset","enableDragging","enableResizing","enableGesturing","debug","downTime","getPointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","newvalue","offsetX","offsetY","gridx","round","gridy","newX","newY","elems","lastTime","vendors","currTime","timeToCall","6","exec","e","7","global","self","__g","8","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","P","Attributes","TypeError","9","_toString","val","JSON","stringify","String","toNumber","parseFloat","makeMap","str","expectsLowerCase","map","create","list","toLowerCase","remove$1","arr","item","hasOwn","obj","key","isPrimitive","cached","cache","hit","bind$1","ctx","boundFn","l","_length","toArray","Array","to","_from","isPlainObject","toString","OBJECT_STRING","toObject","res","noop","genStaticKeys","modules","reduce","keys","m","concat","staticKeys","join","looseEqual","looseIndexOf","isReserved","charCodeAt","def","enumerable","writable","configurable","parsePath","bailRE","segments","isNative","Ctor","pushTarget","_target","Dep","targetStack","popTarget","pop","protoAugment","__proto__","copyAugment","observe","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","defineReactive$$1","customSetter","dep","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","notify","set$1","vmCount","del","mergeData","from","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","props","camelize","normalizeDirectives","dirs","directives","update","mergeOptions","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","mixin","Vue$3","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isBooleanType","hyphenate","getPropDefaultValue","prevShouldConvert","default","$options","getType","resetSchedulerState","queue","has$1","waiting","flushing","flushSchedulerQueue","sort","watcher","run","devtools","config","emit","queueWatcher","nextTick","traverse","seenObjects","clear","_traverse","seen","isA","depId","has","initState","_watchers","initProps","initMethods","initData","initComputed","initWatch","_propKeys","isRoot","$parent","loop","data","_data","proxy","computed","userDef","computedSharedDefinition","makeComputedGetter","owner","Watcher","lazy","dirty","evaluate","watch","handler","createWatcher","$watch","stateMixin","Vue","dataDef","$set","$delete","expOrFn","cb","user","immediate","teardown","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","children","text","elm","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","initLifecycle","abstract","$children","$root","$refs","_watcher","_inactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_mount","hydrating","$el","render","createEmptyVNode","callHook","_update","_render","$vnode","prevEl","prevVnode","_vnode","prevActiveInstance","activeInstance","__patch__","_parentElm","_refElm","__vue__","_updateFromParent","parentVnode","renderChildren","hasChildren","_renderChildren","_parentVnode","propKeys","oldListeners","_parentListeners","_updateListeners","$slots","resolveSlots","$forceUpdate","$destroy","$off","hook","handlers","$emit","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","resolveConstructorOptions","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","h","createElement","slots","functionalContext","slot","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","staticRenderFns","init","$mount","keepAlive","mountedNode","prepatch","oldVnode","insert","destroy$1","factory","requested","cbs","pendingCallbacks","sync","resolve","reject","reason","then","attrs","domProps","checkProp","hash","preserve","hooksToMerge","fromParent","ours","hooks","mergeHook$1","one","two","mergeVNodeHook","hookKey","injectedHash","__injected","oldHook","updateListeners","oldOn","remove$$1","old","capture","once","charAt","slice","invoker","arrInvoker","fnInvoker","ev","arguments$1","single","normalizeChildren","normalizeArrayChildren","nestedIndex","last","getFirstComponentChild","filter","needNormalization","alwaysNormalize","_createElement","scopedSlots","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","initRender","_staticTrees","renderContext","$scopedSlots","_c","$createElement","renderMixin","markStatic","tree","isOnce","markStaticNode","$nextTick","ref","_renderProxy","errorHandler","_s","_v","_n","_e","_q","_i","_m","isInFor","_o","_f","identity","_l","_t","fallback","scopedSlotFn","slotNodes","_b","asProp","mustUseProp","_k","eventKeyCode","builtInAlias","keyCodes","defaultSlot","isComment","initEvents","_events","$once","$on","eventsMixin","args","initMixin","_init","_uid","uid","initInternalComponent","constructor","_self","opts","super","superOptions","cachedSuperOptions","extendOptions","_scopeId","components","initUse","use","plugin","installed","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","_assetTypes","forEach","initAssetRegisters","definition","pattern","initGlobalAPI","configDef","util","delete","builtInComponents","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","inBrowser","unknownElementCache","HTMLUnknownElement","query","createElement$1","tagName","setAttribute","createElementNS","namespace","namespaceMap","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","refs","refInFor","isUndef","s","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeElement","createElm","insertedVnodeQueue","nested","isRootInsert","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","innerNode","transition","emptyNode","isPatchable","i$1","pendingInsert","addVnodes","startIdx","invokeDestroyHook","destroy","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hasData","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","hooks$1","isInitialPatch","isRealElement","hasAttribute","removeAttribute","ancestor","updateDirectives","oldDir","dir","isCreate","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","add$1","oldHandler","remove$2","addEventListener","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","composing","activeElement","isValueChanged","_vModifiers","number","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitioneDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","toggleDisplay","_leaveCb","cancelled","resolveTransition","_enterCb","css","enterClass","enterActiveClass","appearClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","expectsCSS","userWantsControl","show","pendingNode","_pending","performLeave","beforeLeave","leaveClass","leaveActiveClass","afterLeave","leaveCancelled","delayLeave","def$$1","autoCssTransition","called","_enter","_","setSelected","binding","isMultiple","multiple","selected","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","rawChild","hasParentTransition","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","moved","transform","WebkitTransform","transitionDuration","shouldDecode","content","encoded","div","innerHTML","decode","html","decoder","decodeAttr","shouldDecodeNewlines","nlRE","ltRE","gtRE","ampRE","quoteRE","parseHTML","advance","substring","parseStartTag","startTagOpen","attr","startTagClose","attribute","unarySlash","handleStartTag","expectHTML","lastTag","isNonPhrasingTag","parseEndTag","canBeLeftOpenTag","unary","isUnaryTag$$1","IS_REGEX_CAPTURING_BROKEN","stack","needle","isUnaryTag","no","isSpecialTag","sfc","stackedTag","reStackedTag","reCache","RegExp","endTagLength","rest","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","rest$1","next","parseFilters","pushFilter","filters","lastFilterIndex","expression","inSingle","inDouble","inTemplateString","inRegex","curly","paren","p","wrapFilter","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","baseWarn","msg","pluckModuleFunction","addProp","addAttr","addDirective","arg","addHandler","important","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","parseModel","index$1","expressionPos","expressionEndPos","lastIndexOf","idx","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","parse","template","warn$1","platformGetTagNamespace","platformMustUseProp","platformIsPreTag","isPreTag","preTransforms","transforms","postTransforms","root","currentParent","preserveWhitespace","inVPre","inPre","checkRootConstraints","isIE","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","pre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","component","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","isPlatformReservedTag","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","every","genHandlers","genHandler","code","modifierCode","genKeyFilter","handlerCode","simplePathRE","fnExpRE","genFilterCode","keyVal","parseInt","bind$2","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$2","transforms$1","dataGenFns","platformDirectives$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","shift","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","scope","checkSkip","el$1","genNode","canSkipNormalization","needsNormalization","some","genText","transformSpecialNewlines","componentName","compile$1","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","model$1","_warn","warn$3","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","genAssignmentCode","needCompositionGuard","valueExpression","assignment","modelRs","compile$$1","baseOptions","compileToFunctions","compiled","makeFunction","getOuterHTML","outerHTML","cloneNode","_isServer","_Set","camelizeRE","toUpperCase","hyphenateRE","optionMergeStrategies","silent","ignoredElements","_lifecycleHooks","_maxUpdateCount","hasProto","UA","isEdge","isAndroid","isIOS","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","err","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","formatComponentName","uid$1","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","original","result","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","augment","walk","items","instanceData","defaultData","freeze","defineReactive","uid$2","deep","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","tmp","_vForRemoving","raw","patternTypes","KeepAlive","include","exclude","created","destroyed","testEl","acceptValue","svg","math","xhtml","isHTMLTag","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","platformModules","patch$1","vmodel","model","needReset","v","originalDisplay","__vOriginalDisplay","display","platformDirectives","transitionProps","Transition","_leaving","oldRawChild","oldChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","info","platformComponents","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","g","isScriptOrStyle","hasLang","isSFC","regexEscapeRE","open","close","esc","tab","space","ctrl","alt","meta","cloak","klass$1","style$1","modules$1","directives$1","idToTemplate","mount","compile","28","__esModule","29","30","instance","Constructor","31","_interopRequireDefault","_defineProperty","_defineProperty2","defineProperties","descriptor","protoProps","staticProps","32","$JSON","33","$Object","desc","34","35","36","aFunction","37","is","38","hide","PROTOTYPE","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","39","createDesc","object","40","41","bitmap","42","valueOf","43","98","mediaQuery","alreadyImportedModules","99","addStylesToDom","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","Error","removeStyleElement","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","sources","btoa","unescape","encodeURIComponent","memoize","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.25c12c68f1323c8b9134.js","sourcesContent":["webpackJsonp([2,0],{\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(6)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * interact.js v1.2.8\n\t *\n\t * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n\t * Open source under the MIT License.\n\t * https://raw.github.com/taye/interact.js/master/LICENSE\n\t */\n\t(function (realWindow) {\n\t    'use strict';\n\t\n\t    // return early if there's no window to work with (eg. Node.js)\n\t    if (!realWindow) { return; }\n\t\n\t    var // get wrapped window if using Shadow DOM polyfill\n\t        window = (function () {\n\t            // create a TextNode\n\t            var el = realWindow.document.createTextNode('');\n\t\n\t            // check if it's wrapped by a polyfill\n\t            if (el.ownerDocument !== realWindow.document\n\t                && typeof realWindow.wrap === 'function'\n\t                && realWindow.wrap(el) === el) {\n\t                // return wrapped window\n\t                return realWindow.wrap(realWindow);\n\t            }\n\t\n\t            // no Shadow DOM polyfil or native implementation\n\t            return realWindow;\n\t        }()),\n\t\n\t        document           = window.document,\n\t        DocumentFragment   = window.DocumentFragment   || blank,\n\t        SVGElement         = window.SVGElement         || blank,\n\t        SVGSVGElement      = window.SVGSVGElement      || blank,\n\t        SVGElementInstance = window.SVGElementInstance || blank,\n\t        HTMLElement        = window.HTMLElement        || window.Element,\n\t\n\t        PointerEvent = (window.PointerEvent || window.MSPointerEvent),\n\t        pEventTypes,\n\t\n\t        hypot = Math.hypot || function (x, y) { return Math.sqrt(x * x + y * y); },\n\t\n\t        tmpXY = {},     // reduce object creation in getXY()\n\t\n\t        documents       = [],   // all documents being listened to\n\t\n\t        interactables   = [],   // all set interactables\n\t        interactions    = [],   // all interactions\n\t\n\t        dynamicDrop     = false,\n\t\n\t        // {\n\t        //      type: {\n\t        //          selectors: ['selector', ...],\n\t        //          contexts : [document, ...],\n\t        //          listeners: [[listener, useCapture], ...]\n\t        //      }\n\t        //  }\n\t        delegatedEvents = {},\n\t\n\t        defaultOptions = {\n\t            base: {\n\t                accept        : null,\n\t                actionChecker : null,\n\t                styleCursor   : true,\n\t                preventDefault: 'auto',\n\t                origin        : { x: 0, y: 0 },\n\t                deltaSource   : 'page',\n\t                allowFrom     : null,\n\t                ignoreFrom    : null,\n\t                _context      : document,\n\t                dropChecker   : null\n\t            },\n\t\n\t            drag: {\n\t                enabled: false,\n\t                manualStart: true,\n\t                max: Infinity,\n\t                maxPerElement: 1,\n\t\n\t                snap: null,\n\t                restrict: null,\n\t                inertia: null,\n\t                autoScroll: null,\n\t\n\t                axis: 'xy'\n\t            },\n\t\n\t            drop: {\n\t                enabled: false,\n\t                accept: null,\n\t                overlap: 'pointer'\n\t            },\n\t\n\t            resize: {\n\t                enabled: false,\n\t                manualStart: false,\n\t                max: Infinity,\n\t                maxPerElement: 1,\n\t\n\t                snap: null,\n\t                restrict: null,\n\t                inertia: null,\n\t                autoScroll: null,\n\t\n\t                square: false,\n\t                preserveAspectRatio: false,\n\t                axis: 'xy',\n\t\n\t                // use default margin\n\t                margin: NaN,\n\t\n\t                // object with props left, right, top, bottom which are\n\t                // true/false values to resize when the pointer is over that edge,\n\t                // CSS selectors to match the handles for each direction\n\t                // or the Elements for each handle\n\t                edges: null,\n\t\n\t                // a value of 'none' will limit the resize rect to a minimum of 0x0\n\t                // 'negate' will alow the rect to have negative width/height\n\t                // 'reposition' will keep the width/height positive by swapping\n\t                // the top and bottom edges and/or swapping the left and right edges\n\t                invert: 'none'\n\t            },\n\t\n\t            gesture: {\n\t                manualStart: false,\n\t                enabled: false,\n\t                max: Infinity,\n\t                maxPerElement: 1,\n\t\n\t                restrict: null\n\t            },\n\t\n\t            perAction: {\n\t                manualStart: false,\n\t                max: Infinity,\n\t                maxPerElement: 1,\n\t\n\t                snap: {\n\t                    enabled     : false,\n\t                    endOnly     : false,\n\t                    range       : Infinity,\n\t                    targets     : null,\n\t                    offsets     : null,\n\t\n\t                    relativePoints: null\n\t                },\n\t\n\t                restrict: {\n\t                    enabled: false,\n\t                    endOnly: false\n\t                },\n\t\n\t                autoScroll: {\n\t                    enabled     : false,\n\t                    container   : null,     // the item that is scrolled (Window or HTMLElement)\n\t                    margin      : 60,\n\t                    speed       : 300       // the scroll speed in pixels per second\n\t                },\n\t\n\t                inertia: {\n\t                    enabled          : false,\n\t                    resistance       : 10,    // the lambda in exponential decay\n\t                    minSpeed         : 100,   // target speed must be above this for inertia to start\n\t                    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n\t                    allowResume      : true,  // allow resuming an action in inertia phase\n\t                    zeroResumeDelta  : true,  // if an action is resumed after launch, set dx/dy to 0\n\t                    smoothEndDuration: 300    // animate to snap/restrict endOnly if there's no inertia\n\t                }\n\t            },\n\t\n\t            _holdDuration: 600\n\t        },\n\t\n\t        // Things related to autoScroll\n\t        autoScroll = {\n\t            interaction: null,\n\t            i: null,    // the handle returned by window.setInterval\n\t            x: 0, y: 0, // Direction each pulse is to scroll in\n\t\n\t            // scroll the window by the values in scroll.x/y\n\t            scroll: function () {\n\t                var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll,\n\t                    container = options.container || getWindow(autoScroll.interaction.element),\n\t                    now = new Date().getTime(),\n\t                    // change in time in seconds\n\t                    dtx = (now - autoScroll.prevTimeX) / 1000,\n\t                    dty = (now - autoScroll.prevTimeY) / 1000,\n\t                    vx, vy, sx, sy;\n\t\n\t                // displacement\n\t                if (options.velocity) {\n\t                  vx = options.velocity.x;\n\t                  vy = options.velocity.y;\n\t                }\n\t                else {\n\t                  vx = vy = options.speed\n\t                }\n\t \n\t                sx = vx * dtx;\n\t                sy = vy * dty;\n\t\n\t                if (sx >= 1 || sy >= 1) {\n\t                    if (isWindow(container)) {\n\t                        container.scrollBy(autoScroll.x * sx, autoScroll.y * sy);\n\t                    }\n\t                    else if (container) {\n\t                        container.scrollLeft += autoScroll.x * sx;\n\t                        container.scrollTop  += autoScroll.y * sy;\n\t                    }\n\t\n\t                    if (sx >=1) autoScroll.prevTimeX = now;\n\t                    if (sy >= 1) autoScroll.prevTimeY = now;\n\t                }\n\t\n\t                if (autoScroll.isScrolling) {\n\t                    cancelFrame(autoScroll.i);\n\t                    autoScroll.i = reqFrame(autoScroll.scroll);\n\t                }\n\t            },\n\t\n\t            isScrolling: false,\n\t            prevTimeX: 0,\n\t            prevTimeY: 0,\n\t\n\t            start: function (interaction) {\n\t                autoScroll.isScrolling = true;\n\t                cancelFrame(autoScroll.i);\n\t\n\t                autoScroll.interaction = interaction;\n\t                autoScroll.prevTimeX = new Date().getTime();\n\t                autoScroll.prevTimeY = new Date().getTime();\n\t                autoScroll.i = reqFrame(autoScroll.scroll);\n\t            },\n\t\n\t            stop: function () {\n\t                autoScroll.isScrolling = false;\n\t                cancelFrame(autoScroll.i);\n\t            }\n\t        },\n\t\n\t        // Does the browser support touch input?\n\t        supportsTouch = (('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch),\n\t\n\t        // Does the browser support PointerEvents\n\t        // Avoid PointerEvent bugs introduced in Chrome 55\n\t        supportsPointerEvent = PointerEvent && !/Chrome/.test(navigator.userAgent),\n\t\n\t        // Less Precision with touch input\n\t        margin = supportsTouch || supportsPointerEvent? 20: 10,\n\t\n\t        pointerMoveTolerance = 1,\n\t\n\t        // for ignoring browser's simulated mouse events\n\t        prevTouchTime = 0,\n\t\n\t        // Allow this many interactions to happen simultaneously\n\t        maxInteractions = Infinity,\n\t\n\t        // Check if is IE9 or older\n\t        actionCursors = (document.all && !window.atob) ? {\n\t            drag    : 'move',\n\t            resizex : 'e-resize',\n\t            resizey : 's-resize',\n\t            resizexy: 'se-resize',\n\t\n\t            resizetop        : 'n-resize',\n\t            resizeleft       : 'w-resize',\n\t            resizebottom     : 's-resize',\n\t            resizeright      : 'e-resize',\n\t            resizetopleft    : 'se-resize',\n\t            resizebottomright: 'se-resize',\n\t            resizetopright   : 'ne-resize',\n\t            resizebottomleft : 'ne-resize',\n\t\n\t            gesture : ''\n\t        } : {\n\t            drag    : 'move',\n\t            resizex : 'ew-resize',\n\t            resizey : 'ns-resize',\n\t            resizexy: 'nwse-resize',\n\t\n\t            resizetop        : 'ns-resize',\n\t            resizeleft       : 'ew-resize',\n\t            resizebottom     : 'ns-resize',\n\t            resizeright      : 'ew-resize',\n\t            resizetopleft    : 'nwse-resize',\n\t            resizebottomright: 'nwse-resize',\n\t            resizetopright   : 'nesw-resize',\n\t            resizebottomleft : 'nesw-resize',\n\t\n\t            gesture : ''\n\t        },\n\t\n\t        actionIsEnabled = {\n\t            drag   : true,\n\t            resize : true,\n\t            gesture: true\n\t        },\n\t\n\t        // because Webkit and Opera still use 'mousewheel' event type\n\t        wheelEvent = 'onmousewheel' in document? 'mousewheel': 'wheel',\n\t\n\t        eventTypes = [\n\t            'dragstart',\n\t            'dragmove',\n\t            'draginertiastart',\n\t            'dragend',\n\t            'dragenter',\n\t            'dragleave',\n\t            'dropactivate',\n\t            'dropdeactivate',\n\t            'dropmove',\n\t            'drop',\n\t            'resizestart',\n\t            'resizemove',\n\t            'resizeinertiastart',\n\t            'resizeend',\n\t            'gesturestart',\n\t            'gesturemove',\n\t            'gestureinertiastart',\n\t            'gestureend',\n\t\n\t            'down',\n\t            'move',\n\t            'up',\n\t            'cancel',\n\t            'tap',\n\t            'doubletap',\n\t            'hold'\n\t        ],\n\t\n\t        globalEvents = {},\n\t\n\t        // Opera Mobile must be handled differently\n\t        isOperaMobile = navigator.appName == 'Opera' &&\n\t            supportsTouch &&\n\t            navigator.userAgent.match('Presto'),\n\t\n\t        // scrolling doesn't change the result of getClientRects on iOS 7\n\t        isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform)\n\t                         && /OS 7[^\\d]/.test(navigator.appVersion)),\n\t\n\t        // prefix matchesSelector\n\t        prefixedMatchesSelector = 'matches' in Element.prototype?\n\t                'matches': 'webkitMatchesSelector' in Element.prototype?\n\t                    'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype?\n\t                        'mozMatchesSelector': 'oMatchesSelector' in Element.prototype?\n\t                            'oMatchesSelector': 'msMatchesSelector',\n\t\n\t        // will be polyfill function if browser is IE8\n\t        ie8MatchesSelector,\n\t\n\t        // native requestAnimationFrame or polyfill\n\t        reqFrame = realWindow.requestAnimationFrame,\n\t        cancelFrame = realWindow.cancelAnimationFrame,\n\t\n\t        // Events wrapper\n\t        events = (function () {\n\t            var useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window),\n\t                addEvent       = useAttachEvent?  'attachEvent': 'addEventListener',\n\t                removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener',\n\t                on             = useAttachEvent? 'on': '',\n\t\n\t                elements          = [],\n\t                targets           = [],\n\t                attachedListeners = [];\n\t\n\t            function add (element, type, listener, useCapture) {\n\t                var elementIndex = indexOf(elements, element),\n\t                    target = targets[elementIndex];\n\t\n\t                if (!target) {\n\t                    target = {\n\t                        events: {},\n\t                        typeCount: 0\n\t                    };\n\t\n\t                    elementIndex = elements.push(element) - 1;\n\t                    targets.push(target);\n\t\n\t                    attachedListeners.push((useAttachEvent ? {\n\t                            supplied: [],\n\t                            wrapped : [],\n\t                            useCount: []\n\t                        } : null));\n\t                }\n\t\n\t                if (!target.events[type]) {\n\t                    target.events[type] = [];\n\t                    target.typeCount++;\n\t                }\n\t\n\t                if (!contains(target.events[type], listener)) {\n\t                    var ret;\n\t\n\t                    if (useAttachEvent) {\n\t                        var listeners = attachedListeners[elementIndex],\n\t                            listenerIndex = indexOf(listeners.supplied, listener);\n\t\n\t                        var wrapped = listeners.wrapped[listenerIndex] || function (event) {\n\t                            if (!event.immediatePropagationStopped) {\n\t                                event.target = event.srcElement;\n\t                                event.currentTarget = element;\n\t\n\t                                event.preventDefault = event.preventDefault || preventDef;\n\t                                event.stopPropagation = event.stopPropagation || stopProp;\n\t                                event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\t\n\t                                if (/mouse|click/.test(event.type)) {\n\t                                    event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n\t                                    event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n\t                                }\n\t\n\t                                listener(event);\n\t                            }\n\t                        };\n\t\n\t                        ret = element[addEvent](on + type, wrapped, Boolean(useCapture));\n\t\n\t                        if (listenerIndex === -1) {\n\t                            listeners.supplied.push(listener);\n\t                            listeners.wrapped.push(wrapped);\n\t                            listeners.useCount.push(1);\n\t                        }\n\t                        else {\n\t                            listeners.useCount[listenerIndex]++;\n\t                        }\n\t                    }\n\t                    else {\n\t                        ret = element[addEvent](type, listener, useCapture || false);\n\t                    }\n\t                    target.events[type].push(listener);\n\t\n\t                    return ret;\n\t                }\n\t            }\n\t\n\t            function remove (element, type, listener, useCapture) {\n\t                var i,\n\t                    elementIndex = indexOf(elements, element),\n\t                    target = targets[elementIndex],\n\t                    listeners,\n\t                    listenerIndex,\n\t                    wrapped = listener;\n\t\n\t                if (!target || !target.events) {\n\t                    return;\n\t                }\n\t\n\t                if (useAttachEvent) {\n\t                    listeners = attachedListeners[elementIndex];\n\t                    listenerIndex = indexOf(listeners.supplied, listener);\n\t                    wrapped = listeners.wrapped[listenerIndex];\n\t                }\n\t\n\t                if (type === 'all') {\n\t                    for (type in target.events) {\n\t                        if (target.events.hasOwnProperty(type)) {\n\t                            remove(element, type, 'all');\n\t                        }\n\t                    }\n\t                    return;\n\t                }\n\t\n\t                if (target.events[type]) {\n\t                    var len = target.events[type].length;\n\t\n\t                    if (listener === 'all') {\n\t                        for (i = 0; i < len; i++) {\n\t                            remove(element, type, target.events[type][i], Boolean(useCapture));\n\t                        }\n\t                        return;\n\t                    } else {\n\t                        for (i = 0; i < len; i++) {\n\t                            if (target.events[type][i] === listener) {\n\t                                element[removeEvent](on + type, wrapped, useCapture || false);\n\t                                target.events[type].splice(i, 1);\n\t\n\t                                if (useAttachEvent && listeners) {\n\t                                    listeners.useCount[listenerIndex]--;\n\t                                    if (listeners.useCount[listenerIndex] === 0) {\n\t                                        listeners.supplied.splice(listenerIndex, 1);\n\t                                        listeners.wrapped.splice(listenerIndex, 1);\n\t                                        listeners.useCount.splice(listenerIndex, 1);\n\t                                    }\n\t                                }\n\t\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    if (target.events[type] && target.events[type].length === 0) {\n\t                        target.events[type] = null;\n\t                        target.typeCount--;\n\t                    }\n\t                }\n\t\n\t                if (!target.typeCount) {\n\t                    targets.splice(elementIndex, 1);\n\t                    elements.splice(elementIndex, 1);\n\t                    attachedListeners.splice(elementIndex, 1);\n\t                }\n\t            }\n\t\n\t            function preventDef () {\n\t                this.returnValue = false;\n\t            }\n\t\n\t            function stopProp () {\n\t                this.cancelBubble = true;\n\t            }\n\t\n\t            function stopImmProp () {\n\t                this.cancelBubble = true;\n\t                this.immediatePropagationStopped = true;\n\t            }\n\t\n\t            return {\n\t                add: add,\n\t                remove: remove,\n\t                useAttachEvent: useAttachEvent,\n\t\n\t                _elements: elements,\n\t                _targets: targets,\n\t                _attachedListeners: attachedListeners\n\t            };\n\t        }());\n\t\n\t    function blank () {}\n\t\n\t    function isElement (o) {\n\t        if (!o || (typeof o !== 'object')) { return false; }\n\t\n\t        var _window = getWindow(o) || window;\n\t\n\t        return (/object|function/.test(typeof _window.Element)\n\t            ? o instanceof _window.Element //DOM2\n\t            : o.nodeType === 1 && typeof o.nodeName === \"string\");\n\t    }\n\t    function isWindow (thing) { return thing === window || !!(thing && thing.Window) && (thing instanceof thing.Window); }\n\t    function isDocFrag (thing) { return !!thing && thing instanceof DocumentFragment; }\n\t    function isArray (thing) {\n\t        return isObject(thing)\n\t                && (typeof thing.length !== undefined)\n\t                && isFunction(thing.splice);\n\t    }\n\t    function isObject   (thing) { return !!thing && (typeof thing === 'object'); }\n\t    function isFunction (thing) { return typeof thing === 'function'; }\n\t    function isNumber   (thing) { return typeof thing === 'number'  ; }\n\t    function isBool     (thing) { return typeof thing === 'boolean' ; }\n\t    function isString   (thing) { return typeof thing === 'string'  ; }\n\t\n\t    function trySelector (value) {\n\t        if (!isString(value)) { return false; }\n\t\n\t        // an exception will be raised if it is invalid\n\t        document.querySelector(value);\n\t        return true;\n\t    }\n\t\n\t    function extend (dest, source) {\n\t        for (var prop in source) {\n\t            dest[prop] = source[prop];\n\t        }\n\t        return dest;\n\t    }\n\t\n\t    var prefixedPropREs = {\n\t      webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n\t    };\n\t\n\t    function pointerExtend (dest, source) {\n\t        for (var prop in source) {\n\t          var deprecated = false;\n\t\n\t          // skip deprecated prefixed properties\n\t          for (var vendor in prefixedPropREs) {\n\t            if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n\t              deprecated = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (!deprecated) {\n\t            dest[prop] = source[prop];\n\t          }\n\t        }\n\t        return dest;\n\t    }\n\t\n\t    function copyCoords (dest, src) {\n\t        dest.page = dest.page || {};\n\t        dest.page.x = src.page.x;\n\t        dest.page.y = src.page.y;\n\t\n\t        dest.client = dest.client || {};\n\t        dest.client.x = src.client.x;\n\t        dest.client.y = src.client.y;\n\t\n\t        dest.timeStamp = src.timeStamp;\n\t    }\n\t\n\t    function setEventXY (targetObj, pointers, interaction) {\n\t        var pointer = (pointers.length > 1\n\t                       ? pointerAverage(pointers)\n\t                       : pointers[0]);\n\t\n\t        getPageXY(pointer, tmpXY, interaction);\n\t        targetObj.page.x = tmpXY.x;\n\t        targetObj.page.y = tmpXY.y;\n\t\n\t        getClientXY(pointer, tmpXY, interaction);\n\t        targetObj.client.x = tmpXY.x;\n\t        targetObj.client.y = tmpXY.y;\n\t\n\t        targetObj.timeStamp = new Date().getTime();\n\t    }\n\t\n\t    function setEventDeltas (targetObj, prev, cur) {\n\t        targetObj.page.x     = cur.page.x      - prev.page.x;\n\t        targetObj.page.y     = cur.page.y      - prev.page.y;\n\t        targetObj.client.x   = cur.client.x    - prev.client.x;\n\t        targetObj.client.y   = cur.client.y    - prev.client.y;\n\t        targetObj.timeStamp = new Date().getTime() - prev.timeStamp;\n\t\n\t        // set pointer velocity\n\t        var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\t        targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n\t        targetObj.page.vx      = targetObj.page.x / dt;\n\t        targetObj.page.vy      = targetObj.page.y / dt;\n\t\n\t        targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n\t        targetObj.client.vx    = targetObj.client.x / dt;\n\t        targetObj.client.vy    = targetObj.client.y / dt;\n\t    }\n\t\n\t    function isNativePointer (pointer) {\n\t        return (pointer instanceof window.Event\n\t            || (supportsTouch && window.Touch && pointer instanceof window.Touch));\n\t    }\n\t\n\t    // Get specified X/Y coords for mouse or event.touches[0]\n\t    function getXY (type, pointer, xy) {\n\t        xy = xy || {};\n\t        type = type || 'page';\n\t\n\t        xy.x = pointer[type + 'X'];\n\t        xy.y = pointer[type + 'Y'];\n\t\n\t        return xy;\n\t    }\n\t\n\t    function getPageXY (pointer, page) {\n\t        page = page || {};\n\t\n\t        // Opera Mobile handles the viewport and scrolling oddly\n\t        if (isOperaMobile && isNativePointer(pointer)) {\n\t            getXY('screen', pointer, page);\n\t\n\t            page.x += window.scrollX;\n\t            page.y += window.scrollY;\n\t        }\n\t        else {\n\t            getXY('page', pointer, page);\n\t        }\n\t\n\t        return page;\n\t    }\n\t\n\t    function getClientXY (pointer, client) {\n\t        client = client || {};\n\t\n\t        if (isOperaMobile && isNativePointer(pointer)) {\n\t            // Opera Mobile handles the viewport and scrolling oddly\n\t            getXY('screen', pointer, client);\n\t        }\n\t        else {\n\t          getXY('client', pointer, client);\n\t        }\n\t\n\t        return client;\n\t    }\n\t\n\t    function getScrollXY (win) {\n\t        win = win || window;\n\t        return {\n\t            x: win.scrollX || win.document.documentElement.scrollLeft,\n\t            y: win.scrollY || win.document.documentElement.scrollTop\n\t        };\n\t    }\n\t\n\t    function getPointerId (pointer) {\n\t        return isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n\t    }\n\t\n\t    function getActualElement (element) {\n\t        return (element instanceof SVGElementInstance\n\t            ? element.correspondingUseElement\n\t            : element);\n\t    }\n\t\n\t    function getWindow (node) {\n\t        if (isWindow(node)) {\n\t            return node;\n\t        }\n\t\n\t        var rootNode = (node.ownerDocument || node);\n\t\n\t        return rootNode.defaultView || rootNode.parentWindow || window;\n\t    }\n\t\n\t    function getElementClientRect (element) {\n\t        var clientRect = (element instanceof SVGElement\n\t                            ? element.getBoundingClientRect()\n\t                            : element.getClientRects()[0]);\n\t\n\t        return clientRect && {\n\t            left  : clientRect.left,\n\t            right : clientRect.right,\n\t            top   : clientRect.top,\n\t            bottom: clientRect.bottom,\n\t            width : clientRect.width || clientRect.right - clientRect.left,\n\t            height: clientRect.height || clientRect.bottom - clientRect.top\n\t        };\n\t    }\n\t\n\t    function getElementRect (element) {\n\t        var clientRect = getElementClientRect(element);\n\t\n\t        if (!isIOS7 && clientRect) {\n\t            var scroll = getScrollXY(getWindow(element));\n\t\n\t            clientRect.left   += scroll.x;\n\t            clientRect.right  += scroll.x;\n\t            clientRect.top    += scroll.y;\n\t            clientRect.bottom += scroll.y;\n\t        }\n\t\n\t        return clientRect;\n\t    }\n\t\n\t    function getTouchPair (event) {\n\t        var touches = [];\n\t\n\t        // array of touches is supplied\n\t        if (isArray(event)) {\n\t            touches[0] = event[0];\n\t            touches[1] = event[1];\n\t        }\n\t        // an event\n\t        else {\n\t            if (event.type === 'touchend') {\n\t                if (event.touches.length === 1) {\n\t                    touches[0] = event.touches[0];\n\t                    touches[1] = event.changedTouches[0];\n\t                }\n\t                else if (event.touches.length === 0) {\n\t                    touches[0] = event.changedTouches[0];\n\t                    touches[1] = event.changedTouches[1];\n\t                }\n\t            }\n\t            else {\n\t                touches[0] = event.touches[0];\n\t                touches[1] = event.touches[1];\n\t            }\n\t        }\n\t\n\t        return touches;\n\t    }\n\t\n\t    function pointerAverage (pointers) {\n\t        var average = {\n\t            pageX  : 0,\n\t            pageY  : 0,\n\t            clientX: 0,\n\t            clientY: 0,\n\t            screenX: 0,\n\t            screenY: 0\n\t        };\n\t        var prop;\n\t\n\t        for (var i = 0; i < pointers.length; i++) {\n\t            for (prop in average) {\n\t                average[prop] += pointers[i][prop];\n\t            }\n\t        }\n\t        for (prop in average) {\n\t            average[prop] /= pointers.length;\n\t        }\n\t\n\t        return average;\n\t    }\n\t\n\t    function touchBBox (event) {\n\t        if (!event.length && !(event.touches && event.touches.length > 1)) {\n\t            return;\n\t        }\n\t\n\t        var touches = getTouchPair(event),\n\t            minX = Math.min(touches[0].pageX, touches[1].pageX),\n\t            minY = Math.min(touches[0].pageY, touches[1].pageY),\n\t            maxX = Math.max(touches[0].pageX, touches[1].pageX),\n\t            maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\t\n\t        return {\n\t            x: minX,\n\t            y: minY,\n\t            left: minX,\n\t            top: minY,\n\t            width: maxX - minX,\n\t            height: maxY - minY\n\t        };\n\t    }\n\t\n\t    function touchDistance (event, deltaSource) {\n\t        deltaSource = deltaSource || defaultOptions.deltaSource;\n\t\n\t        var sourceX = deltaSource + 'X',\n\t            sourceY = deltaSource + 'Y',\n\t            touches = getTouchPair(event);\n\t\n\t\n\t        var dx = touches[0][sourceX] - touches[1][sourceX],\n\t            dy = touches[0][sourceY] - touches[1][sourceY];\n\t\n\t        return hypot(dx, dy);\n\t    }\n\t\n\t    function touchAngle (event, prevAngle, deltaSource) {\n\t        deltaSource = deltaSource || defaultOptions.deltaSource;\n\t\n\t        var sourceX = deltaSource + 'X',\n\t            sourceY = deltaSource + 'Y',\n\t            touches = getTouchPair(event),\n\t            dx = touches[0][sourceX] - touches[1][sourceX],\n\t            dy = touches[0][sourceY] - touches[1][sourceY],\n\t            angle = 180 * Math.atan(dy / dx) / Math.PI;\n\t\n\t        if (isNumber(prevAngle)) {\n\t            var dr = angle - prevAngle,\n\t                drClamped = dr % 360;\n\t\n\t            if (drClamped > 315) {\n\t                angle -= 360 + (angle / 360)|0 * 360;\n\t            }\n\t            else if (drClamped > 135) {\n\t                angle -= 180 + (angle / 360)|0 * 360;\n\t            }\n\t            else if (drClamped < -315) {\n\t                angle += 360 + (angle / 360)|0 * 360;\n\t            }\n\t            else if (drClamped < -135) {\n\t                angle += 180 + (angle / 360)|0 * 360;\n\t            }\n\t        }\n\t\n\t        return  angle;\n\t    }\n\t\n\t    function getOriginXY (interactable, element) {\n\t        var origin = interactable\n\t                ? interactable.options.origin\n\t                : defaultOptions.origin;\n\t\n\t        if (origin === 'parent') {\n\t            origin = parentElement(element);\n\t        }\n\t        else if (origin === 'self') {\n\t            origin = interactable.getRect(element);\n\t        }\n\t        else if (trySelector(origin)) {\n\t            origin = closest(element, origin) || { x: 0, y: 0 };\n\t        }\n\t\n\t        if (isFunction(origin)) {\n\t            origin = origin(interactable && element);\n\t        }\n\t\n\t        if (isElement(origin))  {\n\t            origin = getElementRect(origin);\n\t        }\n\t\n\t        origin.x = ('x' in origin)? origin.x : origin.left;\n\t        origin.y = ('y' in origin)? origin.y : origin.top;\n\t\n\t        return origin;\n\t    }\n\t\n\t    // http://stackoverflow.com/a/5634528/2280888\n\t    function _getQBezierValue(t, p1, p2, p3) {\n\t        var iT = 1 - t;\n\t        return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n\t    }\n\t\n\t    function getQuadraticCurvePoint(startX, startY, cpX, cpY, endX, endY, position) {\n\t        return {\n\t            x:  _getQBezierValue(position, startX, cpX, endX),\n\t            y:  _getQBezierValue(position, startY, cpY, endY)\n\t        };\n\t    }\n\t\n\t    // http://gizma.com/easing/\n\t    function easeOutQuad (t, b, c, d) {\n\t        t /= d;\n\t        return -c * t*(t-2) + b;\n\t    }\n\t\n\t    function nodeContains (parent, child) {\n\t        while (child) {\n\t            if (child === parent) {\n\t                return true;\n\t            }\n\t\n\t            child = child.parentNode;\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    function closest (child, selector) {\n\t        var parent = parentElement(child);\n\t\n\t        while (isElement(parent)) {\n\t            if (matchesSelector(parent, selector)) { return parent; }\n\t\n\t            parent = parentElement(parent);\n\t        }\n\t\n\t        return null;\n\t    }\n\t\n\t    function parentElement (node) {\n\t        var parent = node.parentNode;\n\t\n\t        if (isDocFrag(parent)) {\n\t            // skip past #shado-root fragments\n\t            while ((parent = parent.host) && isDocFrag(parent)) {}\n\t\n\t            return parent;\n\t        }\n\t\n\t        return parent;\n\t    }\n\t\n\t    function inContext (interactable, element) {\n\t        return interactable._context === element.ownerDocument\n\t                || nodeContains(interactable._context, element);\n\t    }\n\t\n\t    function testIgnore (interactable, interactableElement, element) {\n\t        var ignoreFrom = interactable.options.ignoreFrom;\n\t\n\t        if (!ignoreFrom || !isElement(element)) { return false; }\n\t\n\t        if (isString(ignoreFrom)) {\n\t            return matchesUpTo(element, ignoreFrom, interactableElement);\n\t        }\n\t        else if (isElement(ignoreFrom)) {\n\t            return nodeContains(ignoreFrom, element);\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    function testAllow (interactable, interactableElement, element) {\n\t        var allowFrom = interactable.options.allowFrom;\n\t\n\t        if (!allowFrom) { return true; }\n\t\n\t        if (!isElement(element)) { return false; }\n\t\n\t        if (isString(allowFrom)) {\n\t            return matchesUpTo(element, allowFrom, interactableElement);\n\t        }\n\t        else if (isElement(allowFrom)) {\n\t            return nodeContains(allowFrom, element);\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    function checkAxis (axis, interactable) {\n\t        if (!interactable) { return false; }\n\t\n\t        var thisAxis = interactable.options.drag.axis;\n\t\n\t        return (axis === 'xy' || thisAxis === 'xy' || thisAxis === axis);\n\t    }\n\t\n\t    function checkSnap (interactable, action) {\n\t        var options = interactable.options;\n\t\n\t        if (/^resize/.test(action)) {\n\t            action = 'resize';\n\t        }\n\t\n\t        return options[action].snap && options[action].snap.enabled;\n\t    }\n\t\n\t    function checkRestrict (interactable, action) {\n\t        var options = interactable.options;\n\t\n\t        if (/^resize/.test(action)) {\n\t            action = 'resize';\n\t        }\n\t\n\t        return  options[action].restrict && options[action].restrict.enabled;\n\t    }\n\t\n\t    function checkAutoScroll (interactable, action) {\n\t        var options = interactable.options;\n\t\n\t        if (/^resize/.test(action)) {\n\t            action = 'resize';\n\t        }\n\t\n\t        return  options[action].autoScroll && options[action].autoScroll.enabled;\n\t    }\n\t\n\t    function withinInteractionLimit (interactable, element, action) {\n\t        var options = interactable.options,\n\t            maxActions = options[action.name].max,\n\t            maxPerElement = options[action.name].maxPerElement,\n\t            activeInteractions = 0,\n\t            targetCount = 0,\n\t            targetElementCount = 0;\n\t\n\t        for (var i = 0, len = interactions.length; i < len; i++) {\n\t            var interaction = interactions[i],\n\t                otherAction = interaction.prepared.name,\n\t                active = interaction.interacting();\n\t\n\t            if (!active) { continue; }\n\t\n\t            activeInteractions++;\n\t\n\t            if (activeInteractions >= maxInteractions) {\n\t                return false;\n\t            }\n\t\n\t            if (interaction.target !== interactable) { continue; }\n\t\n\t            targetCount += (otherAction === action.name)|0;\n\t\n\t            if (targetCount >= maxActions) {\n\t                return false;\n\t            }\n\t\n\t            if (interaction.element === element) {\n\t                targetElementCount++;\n\t\n\t                if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n\t                    return false;\n\t                }\n\t            }\n\t        }\n\t\n\t        return maxInteractions > 0;\n\t    }\n\t\n\t    // Test for the element that's \"above\" all other qualifiers\n\t    function indexOfDeepestElement (elements) {\n\t        var dropzone,\n\t            deepestZone = elements[0],\n\t            index = deepestZone? 0: -1,\n\t            parent,\n\t            deepestZoneParents = [],\n\t            dropzoneParents = [],\n\t            child,\n\t            i,\n\t            n;\n\t\n\t        for (i = 1; i < elements.length; i++) {\n\t            dropzone = elements[i];\n\t\n\t            // an element might belong to multiple selector dropzones\n\t            if (!dropzone || dropzone === deepestZone) {\n\t                continue;\n\t            }\n\t\n\t            if (!deepestZone) {\n\t                deepestZone = dropzone;\n\t                index = i;\n\t                continue;\n\t            }\n\t\n\t            // check if the deepest or current are document.documentElement or document.rootElement\n\t            // - if the current dropzone is, do nothing and continue\n\t            if (dropzone.parentNode === dropzone.ownerDocument) {\n\t                continue;\n\t            }\n\t            // - if deepest is, update with the current dropzone and continue to next\n\t            else if (deepestZone.parentNode === dropzone.ownerDocument) {\n\t                deepestZone = dropzone;\n\t                index = i;\n\t                continue;\n\t            }\n\t\n\t            if (!deepestZoneParents.length) {\n\t                parent = deepestZone;\n\t                while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n\t                    deepestZoneParents.unshift(parent);\n\t                    parent = parent.parentNode;\n\t                }\n\t            }\n\t\n\t            // if this element is an svg element and the current deepest is\n\t            // an HTMLElement\n\t            if (deepestZone instanceof HTMLElement\n\t                && dropzone instanceof SVGElement\n\t                && !(dropzone instanceof SVGSVGElement)) {\n\t\n\t                if (dropzone === deepestZone.parentNode) {\n\t                    continue;\n\t                }\n\t\n\t                parent = dropzone.ownerSVGElement;\n\t            }\n\t            else {\n\t                parent = dropzone;\n\t            }\n\t\n\t            dropzoneParents = [];\n\t\n\t            while (parent.parentNode !== parent.ownerDocument) {\n\t                dropzoneParents.unshift(parent);\n\t                parent = parent.parentNode;\n\t            }\n\t\n\t            n = 0;\n\t\n\t            // get (position of last common ancestor) + 1\n\t            while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n\t                n++;\n\t            }\n\t\n\t            var parents = [\n\t                dropzoneParents[n - 1],\n\t                dropzoneParents[n],\n\t                deepestZoneParents[n]\n\t            ];\n\t\n\t            child = parents[0].lastChild;\n\t\n\t            while (child) {\n\t                if (child === parents[1]) {\n\t                    deepestZone = dropzone;\n\t                    index = i;\n\t                    deepestZoneParents = [];\n\t\n\t                    break;\n\t                }\n\t                else if (child === parents[2]) {\n\t                    break;\n\t                }\n\t\n\t                child = child.previousSibling;\n\t            }\n\t        }\n\t\n\t        return index;\n\t    }\n\t\n\t    function Interaction () {\n\t        this.target          = null; // current interactable being interacted with\n\t        this.element         = null; // the target element of the interactable\n\t        this.dropTarget      = null; // the dropzone a drag target might be dropped into\n\t        this.dropElement     = null; // the element at the time of checking\n\t        this.prevDropTarget  = null; // the dropzone that was recently dragged away from\n\t        this.prevDropElement = null; // the element at the time of checking\n\t\n\t        this.prepared        = {     // action that's ready to be fired on next move event\n\t            name : null,\n\t            axis : null,\n\t            edges: null\n\t        };\n\t\n\t        this.matches         = [];   // all selectors that are matched by target element\n\t        this.matchElements   = [];   // corresponding elements\n\t\n\t        this.inertiaStatus = {\n\t            active       : false,\n\t            smoothEnd    : false,\n\t            ending       : false,\n\t\n\t            startEvent: null,\n\t            upCoords: {},\n\t\n\t            xe: 0, ye: 0,\n\t            sx: 0, sy: 0,\n\t\n\t            t0: 0,\n\t            vx0: 0, vys: 0,\n\t            duration: 0,\n\t\n\t            resumeDx: 0,\n\t            resumeDy: 0,\n\t\n\t            lambda_v0: 0,\n\t            one_ve_v0: 0,\n\t            i  : null\n\t        };\n\t\n\t        if (isFunction(Function.prototype.bind)) {\n\t            this.boundInertiaFrame = this.inertiaFrame.bind(this);\n\t            this.boundSmoothEndFrame = this.smoothEndFrame.bind(this);\n\t        }\n\t        else {\n\t            var that = this;\n\t\n\t            this.boundInertiaFrame = function () { return that.inertiaFrame(); };\n\t            this.boundSmoothEndFrame = function () { return that.smoothEndFrame(); };\n\t        }\n\t\n\t        this.activeDrops = {\n\t            dropzones: [],      // the dropzones that are mentioned below\n\t            elements : [],      // elements of dropzones that accept the target draggable\n\t            rects    : []       // the rects of the elements mentioned above\n\t        };\n\t\n\t        // keep track of added pointers\n\t        this.pointers    = [];\n\t        this.pointerIds  = [];\n\t        this.downTargets = [];\n\t        this.downTimes   = [];\n\t        this.holdTimers  = [];\n\t\n\t        // Previous native pointer move event coordinates\n\t        this.prevCoords = {\n\t            page     : { x: 0, y: 0 },\n\t            client   : { x: 0, y: 0 },\n\t            timeStamp: 0\n\t        };\n\t        // current native pointer move event coordinates\n\t        this.curCoords = {\n\t            page     : { x: 0, y: 0 },\n\t            client   : { x: 0, y: 0 },\n\t            timeStamp: 0\n\t        };\n\t\n\t        // Starting InteractEvent pointer coordinates\n\t        this.startCoords = {\n\t            page     : { x: 0, y: 0 },\n\t            client   : { x: 0, y: 0 },\n\t            timeStamp: 0\n\t        };\n\t\n\t        // Change in coordinates and time of the pointer\n\t        this.pointerDelta = {\n\t            page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n\t            client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n\t            timeStamp: 0\n\t        };\n\t\n\t        this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n\t        this.downPointer = {};\n\t\n\t        this._eventTarget    = null;\n\t        this._curEventTarget = null;\n\t\n\t        this.prevEvent = null;      // previous action event\n\t        this.tapTime   = 0;         // time of the most recent tap event\n\t        this.prevTap   = null;\n\t\n\t        this.startOffset    = { left: 0, right: 0, top: 0, bottom: 0 };\n\t        this.restrictOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n\t        this.snapOffsets    = [];\n\t\n\t        this.gesture = {\n\t            start: { x: 0, y: 0 },\n\t\n\t            startDistance: 0,   // distance between two touches of touchStart\n\t            prevDistance : 0,\n\t            distance     : 0,\n\t\n\t            scale: 1,           // gesture.distance / gesture.startDistance\n\t\n\t            startAngle: 0,      // angle of line joining two touches\n\t            prevAngle : 0       // angle of the previous gesture event\n\t        };\n\t\n\t        this.snapStatus = {\n\t            x       : 0, y       : 0,\n\t            dx      : 0, dy      : 0,\n\t            realX   : 0, realY   : 0,\n\t            snappedX: 0, snappedY: 0,\n\t            targets : [],\n\t            locked  : false,\n\t            changed : false\n\t        };\n\t\n\t        this.restrictStatus = {\n\t            dx         : 0, dy         : 0,\n\t            restrictedX: 0, restrictedY: 0,\n\t            snap       : null,\n\t            restricted : false,\n\t            changed    : false\n\t        };\n\t\n\t        this.restrictStatus.snap = this.snapStatus;\n\t\n\t        this.pointerIsDown   = false;\n\t        this.pointerWasMoved = false;\n\t        this.gesturing       = false;\n\t        this.dragging        = false;\n\t        this.resizing        = false;\n\t        this.resizeAxes      = 'xy';\n\t\n\t        this.mouse = false;\n\t\n\t        interactions.push(this);\n\t    }\n\t\n\t    Interaction.prototype = {\n\t        getPageXY  : function (pointer, xy) { return   getPageXY(pointer, xy, this); },\n\t        getClientXY: function (pointer, xy) { return getClientXY(pointer, xy, this); },\n\t        setEventXY : function (target, ptr) { return  setEventXY(target, ptr, this); },\n\t\n\t        pointerOver: function (pointer, event, eventTarget) {\n\t            if (this.prepared.name || !this.mouse) { return; }\n\t\n\t            var curMatches = [],\n\t                curMatchElements = [],\n\t                prevTargetElement = this.element;\n\t\n\t            this.addPointer(pointer);\n\t\n\t            if (this.target\n\t                && (testIgnore(this.target, this.element, eventTarget)\n\t                    || !testAllow(this.target, this.element, eventTarget))) {\n\t                // if the eventTarget should be ignored or shouldn't be allowed\n\t                // clear the previous target\n\t                this.target = null;\n\t                this.element = null;\n\t                this.matches = [];\n\t                this.matchElements = [];\n\t            }\n\t\n\t            var elementInteractable = interactables.get(eventTarget),\n\t                elementAction = (elementInteractable\n\t                                 && !testIgnore(elementInteractable, eventTarget, eventTarget)\n\t                                 && testAllow(elementInteractable, eventTarget, eventTarget)\n\t                                 && validateAction(\n\t                                     elementInteractable.getAction(pointer, event, this, eventTarget),\n\t                                     elementInteractable));\n\t\n\t            if (elementAction && !withinInteractionLimit(elementInteractable, eventTarget, elementAction)) {\n\t                 elementAction = null;\n\t            }\n\t\n\t            function pushCurMatches (interactable, selector) {\n\t                if (interactable\n\t                    && inContext(interactable, eventTarget)\n\t                    && !testIgnore(interactable, eventTarget, eventTarget)\n\t                    && testAllow(interactable, eventTarget, eventTarget)\n\t                    && matchesSelector(eventTarget, selector)) {\n\t\n\t                    curMatches.push(interactable);\n\t                    curMatchElements.push(eventTarget);\n\t                }\n\t            }\n\t\n\t            if (elementAction) {\n\t                this.target = elementInteractable;\n\t                this.element = eventTarget;\n\t                this.matches = [];\n\t                this.matchElements = [];\n\t            }\n\t            else {\n\t                interactables.forEachSelector(pushCurMatches);\n\t\n\t                if (this.validateSelector(pointer, event, curMatches, curMatchElements)) {\n\t                    this.matches = curMatches;\n\t                    this.matchElements = curMatchElements;\n\t\n\t                    this.pointerHover(pointer, event, this.matches, this.matchElements);\n\t                    events.add(eventTarget,\n\t                                        supportsPointerEvent? pEventTypes.move : 'mousemove',\n\t                                        listeners.pointerHover);\n\t                }\n\t                else if (this.target) {\n\t                    if (nodeContains(prevTargetElement, eventTarget)) {\n\t                        this.pointerHover(pointer, event, this.matches, this.matchElements);\n\t                        events.add(this.element,\n\t                                            supportsPointerEvent? pEventTypes.move : 'mousemove',\n\t                                            listeners.pointerHover);\n\t                    }\n\t                    else {\n\t                        this.target = null;\n\t                        this.element = null;\n\t                        this.matches = [];\n\t                        this.matchElements = [];\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        // Check what action would be performed on pointerMove target if a mouse\n\t        // button were pressed and change the cursor accordingly\n\t        pointerHover: function (pointer, event, eventTarget, curEventTarget, matches, matchElements) {\n\t            var target = this.target;\n\t\n\t            if (!this.prepared.name && this.mouse) {\n\t\n\t                var action;\n\t\n\t                // update pointer coords for defaultActionChecker to use\n\t                this.setEventXY(this.curCoords, [pointer]);\n\t\n\t                if (matches) {\n\t                    action = this.validateSelector(pointer, event, matches, matchElements);\n\t                }\n\t                else if (target) {\n\t                    action = validateAction(target.getAction(this.pointers[0], event, this, this.element), this.target);\n\t                }\n\t\n\t                if (target && target.options.styleCursor) {\n\t                    if (action) {\n\t                        target._doc.documentElement.style.cursor = getActionCursor(action);\n\t                    }\n\t                    else {\n\t                        target._doc.documentElement.style.cursor = '';\n\t                    }\n\t                }\n\t            }\n\t            else if (this.prepared.name) {\n\t                this.checkAndPreventDefault(event, target, this.element);\n\t            }\n\t        },\n\t\n\t        pointerOut: function (pointer, event, eventTarget) {\n\t            if (this.prepared.name) { return; }\n\t\n\t            // Remove temporary event listeners for selector Interactables\n\t            if (!interactables.get(eventTarget)) {\n\t                events.remove(eventTarget,\n\t                                       supportsPointerEvent? pEventTypes.move : 'mousemove',\n\t                                       listeners.pointerHover);\n\t            }\n\t\n\t            if (this.target && this.target.options.styleCursor && !this.interacting()) {\n\t                this.target._doc.documentElement.style.cursor = '';\n\t            }\n\t        },\n\t\n\t        selectorDown: function (pointer, event, eventTarget, curEventTarget) {\n\t            var that = this,\n\t                // copy event to be used in timeout for IE8\n\t                eventCopy = events.useAttachEvent? extend({}, event) : event,\n\t                element = eventTarget,\n\t                pointerIndex = this.addPointer(pointer),\n\t                action;\n\t\n\t            this.holdTimers[pointerIndex] = setTimeout(function () {\n\t                that.pointerHold(events.useAttachEvent? eventCopy : pointer, eventCopy, eventTarget, curEventTarget);\n\t            }, defaultOptions._holdDuration);\n\t\n\t            this.pointerIsDown = true;\n\t\n\t            // Check if the down event hits the current inertia target\n\t            if (this.inertiaStatus.active && this.target.selector) {\n\t                // climb up the DOM tree from the event target\n\t                while (isElement(element)) {\n\t\n\t                    // if this element is the current inertia target element\n\t                    if (element === this.element\n\t                        // and the prospective action is the same as the ongoing one\n\t                        && validateAction(this.target.getAction(pointer, event, this, this.element), this.target).name === this.prepared.name) {\n\t\n\t                        // stop inertia so that the next move will be a normal one\n\t                        cancelFrame(this.inertiaStatus.i);\n\t                        this.inertiaStatus.active = false;\n\t\n\t                        this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t                        return;\n\t                    }\n\t                    element = parentElement(element);\n\t                }\n\t            }\n\t\n\t            // do nothing if interacting\n\t            if (this.interacting()) {\n\t                this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t                return;\n\t            }\n\t\n\t            function pushMatches (interactable, selector, context) {\n\t                var elements = ie8MatchesSelector\n\t                    ? context.querySelectorAll(selector)\n\t                    : undefined;\n\t\n\t                if (inContext(interactable, element)\n\t                    && !testIgnore(interactable, element, eventTarget)\n\t                    && testAllow(interactable, element, eventTarget)\n\t                    && matchesSelector(element, selector, elements)) {\n\t\n\t                    that.matches.push(interactable);\n\t                    that.matchElements.push(element);\n\t                }\n\t            }\n\t\n\t            // update pointer coords for defaultActionChecker to use\n\t            this.setEventXY(this.curCoords, [pointer]);\n\t            this.downEvent = event;\n\t\n\t            while (isElement(element) && !action) {\n\t                this.matches = [];\n\t                this.matchElements = [];\n\t\n\t                interactables.forEachSelector(pushMatches);\n\t\n\t                action = this.validateSelector(pointer, event, this.matches, this.matchElements);\n\t                element = parentElement(element);\n\t            }\n\t\n\t            if (action) {\n\t                this.prepared.name  = action.name;\n\t                this.prepared.axis  = action.axis;\n\t                this.prepared.edges = action.edges;\n\t\n\t                this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t\n\t                return this.pointerDown(pointer, event, eventTarget, curEventTarget, action);\n\t            }\n\t            else {\n\t                // do these now since pointerDown isn't being called from here\n\t                this.downTimes[pointerIndex] = new Date().getTime();\n\t                this.downTargets[pointerIndex] = eventTarget;\n\t                pointerExtend(this.downPointer, pointer);\n\t\n\t                copyCoords(this.prevCoords, this.curCoords);\n\t                this.pointerWasMoved = false;\n\t            }\n\t\n\t            this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t        },\n\t\n\t        // Determine action to be performed on next pointerMove and add appropriate\n\t        // style and event Listeners\n\t        pointerDown: function (pointer, event, eventTarget, curEventTarget, forceAction) {\n\t            if (!forceAction && !this.inertiaStatus.active && this.pointerWasMoved && this.prepared.name) {\n\t                this.checkAndPreventDefault(event, this.target, this.element);\n\t\n\t                return;\n\t            }\n\t\n\t            this.pointerIsDown = true;\n\t            this.downEvent = event;\n\t\n\t            var pointerIndex = this.addPointer(pointer),\n\t                action;\n\t\n\t            // If it is the second touch of a multi-touch gesture, keep the\n\t            // target the same and get a new action if a target was set by the\n\t            // first touch\n\t            if (this.pointerIds.length > 1 && this.target._element === this.element) {\n\t                var newAction = validateAction(forceAction || this.target.getAction(pointer, event, this, this.element), this.target);\n\t\n\t                if (withinInteractionLimit(this.target, this.element, newAction)) {\n\t                    action = newAction;\n\t                }\n\t\n\t                this.prepared.name = null;\n\t            }\n\t            // Otherwise, set the target if there is no action prepared\n\t            else if (!this.prepared.name) {\n\t                var interactable = interactables.get(curEventTarget);\n\t\n\t                if (interactable\n\t                    && !testIgnore(interactable, curEventTarget, eventTarget)\n\t                    && testAllow(interactable, curEventTarget, eventTarget)\n\t                    && (action = validateAction(forceAction || interactable.getAction(pointer, event, this, curEventTarget), interactable, eventTarget))\n\t                    && withinInteractionLimit(interactable, curEventTarget, action)) {\n\t                    this.target = interactable;\n\t                    this.element = curEventTarget;\n\t                }\n\t            }\n\t\n\t            var target = this.target,\n\t                options = target && target.options;\n\t\n\t            if (target && (forceAction || !this.prepared.name)) {\n\t                action = action || validateAction(forceAction || target.getAction(pointer, event, this, curEventTarget), target, this.element);\n\t\n\t                this.setEventXY(this.startCoords, this.pointers);\n\t\n\t                if (!action) { return; }\n\t\n\t                if (options.styleCursor) {\n\t                    target._doc.documentElement.style.cursor = getActionCursor(action);\n\t                }\n\t\n\t                this.resizeAxes = action.name === 'resize'? action.axis : null;\n\t\n\t                if (action === 'gesture' && this.pointerIds.length < 2) {\n\t                    action = null;\n\t                }\n\t\n\t                this.prepared.name  = action.name;\n\t                this.prepared.axis  = action.axis;\n\t                this.prepared.edges = action.edges;\n\t\n\t                this.snapStatus.snappedX = this.snapStatus.snappedY =\n\t                    this.restrictStatus.restrictedX = this.restrictStatus.restrictedY = NaN;\n\t\n\t                this.downTimes[pointerIndex] = new Date().getTime();\n\t                this.downTargets[pointerIndex] = eventTarget;\n\t                pointerExtend(this.downPointer, pointer);\n\t\n\t                copyCoords(this.prevCoords, this.startCoords);\n\t                this.pointerWasMoved = false;\n\t\n\t                this.checkAndPreventDefault(event, target, this.element);\n\t            }\n\t            // if inertia is active try to resume action\n\t            else if (this.inertiaStatus.active\n\t                && curEventTarget === this.element\n\t                && validateAction(target.getAction(pointer, event, this, this.element), target).name === this.prepared.name) {\n\t\n\t                cancelFrame(this.inertiaStatus.i);\n\t                this.inertiaStatus.active = false;\n\t\n\t                this.checkAndPreventDefault(event, target, this.element);\n\t            }\n\t        },\n\t\n\t        setModifications: function (coords, preEnd) {\n\t            var target         = this.target,\n\t                shouldMove     = true,\n\t                shouldSnap     = checkSnap(target, this.prepared.name)     && (!target.options[this.prepared.name].snap.endOnly     || preEnd),\n\t                shouldRestrict = checkRestrict(target, this.prepared.name) && (!target.options[this.prepared.name].restrict.endOnly || preEnd);\n\t\n\t            if (shouldSnap    ) { this.setSnapping   (coords); } else { this.snapStatus    .locked     = false; }\n\t            if (shouldRestrict) { this.setRestriction(coords); } else { this.restrictStatus.restricted = false; }\n\t\n\t            if (shouldSnap && this.snapStatus.locked && !this.snapStatus.changed) {\n\t                shouldMove = shouldRestrict && this.restrictStatus.restricted && this.restrictStatus.changed;\n\t            }\n\t            else if (shouldRestrict && this.restrictStatus.restricted && !this.restrictStatus.changed) {\n\t                shouldMove = false;\n\t            }\n\t\n\t            return shouldMove;\n\t        },\n\t\n\t        setStartOffsets: function (action, interactable, element) {\n\t            var rect = interactable.getRect(element),\n\t                origin = getOriginXY(interactable, element),\n\t                snap = interactable.options[this.prepared.name].snap,\n\t                restrict = interactable.options[this.prepared.name].restrict,\n\t                width, height;\n\t\n\t            if (rect) {\n\t                this.startOffset.left = this.startCoords.page.x - rect.left;\n\t                this.startOffset.top  = this.startCoords.page.y - rect.top;\n\t\n\t                this.startOffset.right  = rect.right  - this.startCoords.page.x;\n\t                this.startOffset.bottom = rect.bottom - this.startCoords.page.y;\n\t\n\t                if ('width' in rect) { width = rect.width; }\n\t                else { width = rect.right - rect.left; }\n\t                if ('height' in rect) { height = rect.height; }\n\t                else { height = rect.bottom - rect.top; }\n\t            }\n\t            else {\n\t                this.startOffset.left = this.startOffset.top = this.startOffset.right = this.startOffset.bottom = 0;\n\t            }\n\t\n\t            this.snapOffsets.splice(0);\n\t\n\t            var snapOffset = snap && snap.offset === 'startCoords'\n\t                                ? {\n\t                                    x: this.startCoords.page.x - origin.x,\n\t                                    y: this.startCoords.page.y - origin.y\n\t                                }\n\t                                : snap && snap.offset || { x: 0, y: 0 };\n\t\n\t            if (rect && snap && snap.relativePoints && snap.relativePoints.length) {\n\t                for (var i = 0; i < snap.relativePoints.length; i++) {\n\t                    this.snapOffsets.push({\n\t                        x: this.startOffset.left - (width  * snap.relativePoints[i].x) + snapOffset.x,\n\t                        y: this.startOffset.top  - (height * snap.relativePoints[i].y) + snapOffset.y\n\t                    });\n\t                }\n\t            }\n\t            else {\n\t                this.snapOffsets.push(snapOffset);\n\t            }\n\t\n\t            if (rect && restrict.elementRect) {\n\t                this.restrictOffset.left = this.startOffset.left - (width  * restrict.elementRect.left);\n\t                this.restrictOffset.top  = this.startOffset.top  - (height * restrict.elementRect.top);\n\t\n\t                this.restrictOffset.right  = this.startOffset.right  - (width  * (1 - restrict.elementRect.right));\n\t                this.restrictOffset.bottom = this.startOffset.bottom - (height * (1 - restrict.elementRect.bottom));\n\t            }\n\t            else {\n\t                this.restrictOffset.left = this.restrictOffset.top = this.restrictOffset.right = this.restrictOffset.bottom = 0;\n\t            }\n\t        },\n\t\n\t        /*\\\n\t         * Interaction.start\n\t         [ method ]\n\t         *\n\t         * Start an action with the given Interactable and Element as tartgets. The\n\t         * action must be enabled for the target Interactable and an appropriate number\n\t         * of pointers must be held down – 1 for drag/resize, 2 for gesture.\n\t         *\n\t         * Use it with `interactable.<action>able({ manualStart: false })` to always\n\t         * [start actions manually](https://github.com/taye/interact.js/issues/114)\n\t         *\n\t         - action       (object)  The action to be performed - drag, resize, etc.\n\t         - interactable (Interactable) The Interactable to target\n\t         - element      (Element) The DOM Element to target\n\t         = (object) interact\n\t         **\n\t         | interact(target)\n\t         |   .draggable({\n\t         |     // disable the default drag start by down->move\n\t         |     manualStart: true\n\t         |   })\n\t         |   // start dragging after the user holds the pointer down\n\t         |   .on('hold', function (event) {\n\t         |     var interaction = event.interaction;\n\t         |\n\t         |     if (!interaction.interacting()) {\n\t         |       interaction.start({ name: 'drag' },\n\t         |                         event.interactable,\n\t         |                         event.currentTarget);\n\t         |     }\n\t         | });\n\t        \\*/\n\t        start: function (action, interactable, element) {\n\t            if (this.interacting()\n\t                || !this.pointerIsDown\n\t                || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n\t                return;\n\t            }\n\t\n\t            // if this interaction had been removed after stopping\n\t            // add it back\n\t            if (indexOf(interactions, this) === -1) {\n\t                interactions.push(this);\n\t            }\n\t\n\t            // set the startCoords if there was no prepared action\n\t            if (!this.prepared.name) {\n\t                this.setEventXY(this.startCoords, this.pointers);\n\t            }\n\t\n\t            this.prepared.name  = action.name;\n\t            this.prepared.axis  = action.axis;\n\t            this.prepared.edges = action.edges;\n\t            this.target         = interactable;\n\t            this.element        = element;\n\t\n\t            this.setStartOffsets(action.name, interactable, element);\n\t            this.setModifications(this.startCoords.page);\n\t\n\t            this.prevEvent = this[this.prepared.name + 'Start'](this.downEvent);\n\t        },\n\t\n\t        pointerMove: function (pointer, event, eventTarget, curEventTarget, preEnd) {\n\t            if (this.inertiaStatus.active) {\n\t                var pageUp   = this.inertiaStatus.upCoords.page;\n\t                var clientUp = this.inertiaStatus.upCoords.client;\n\t\n\t                var inertiaPosition = {\n\t                    pageX  : pageUp.x   + this.inertiaStatus.sx,\n\t                    pageY  : pageUp.y   + this.inertiaStatus.sy,\n\t                    clientX: clientUp.x + this.inertiaStatus.sx,\n\t                    clientY: clientUp.y + this.inertiaStatus.sy\n\t                };\n\t\n\t                this.setEventXY(this.curCoords, [inertiaPosition]);\n\t            }\n\t            else {\n\t                this.recordPointer(pointer);\n\t                this.setEventXY(this.curCoords, this.pointers);\n\t            }\n\t\n\t            var duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n\t                                 && this.curCoords.page.y === this.prevCoords.page.y\n\t                                 && this.curCoords.client.x === this.prevCoords.client.x\n\t                                 && this.curCoords.client.y === this.prevCoords.client.y);\n\t\n\t            var dx, dy,\n\t                pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t            // register movement greater than pointerMoveTolerance\n\t            if (this.pointerIsDown && !this.pointerWasMoved) {\n\t                dx = this.curCoords.client.x - this.startCoords.client.x;\n\t                dy = this.curCoords.client.y - this.startCoords.client.y;\n\t\n\t                this.pointerWasMoved = hypot(dx, dy) > pointerMoveTolerance;\n\t            }\n\t\n\t            if (!duplicateMove && (!this.pointerIsDown || this.pointerWasMoved)) {\n\t                if (this.pointerIsDown) {\n\t                    clearTimeout(this.holdTimers[pointerIndex]);\n\t                }\n\t\n\t                this.collectEventTargets(pointer, event, eventTarget, 'move');\n\t            }\n\t\n\t            if (!this.pointerIsDown) { return; }\n\t\n\t            if (duplicateMove && this.pointerWasMoved && !preEnd) {\n\t                this.checkAndPreventDefault(event, this.target, this.element);\n\t                return;\n\t            }\n\t\n\t            // set pointer coordinate, time changes and speeds\n\t            setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\t\n\t            if (!this.prepared.name) { return; }\n\t\n\t            if (this.pointerWasMoved\n\t                // ignore movement while inertia is active\n\t                && (!this.inertiaStatus.active || (pointer instanceof InteractEvent && /inertiastart/.test(pointer.type)))) {\n\t\n\t                // if just starting an action, calculate the pointer speed now\n\t                if (!this.interacting()) {\n\t                    setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\t\n\t                    // check if a drag is in the correct axis\n\t                    if (this.prepared.name === 'drag') {\n\t                        var absX = Math.abs(dx),\n\t                            absY = Math.abs(dy),\n\t                            targetAxis = this.target.options.drag.axis,\n\t                            axis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\t\n\t                        // if the movement isn't in the axis of the interactable\n\t                        if (axis !== 'xy' && targetAxis !== 'xy' && targetAxis !== axis) {\n\t                            // cancel the prepared action\n\t                            this.prepared.name = null;\n\t\n\t                            // then try to get a drag from another ineractable\n\t\n\t                            var element = eventTarget;\n\t\n\t                            // check element interactables\n\t                            while (isElement(element)) {\n\t                                var elementInteractable = interactables.get(element);\n\t\n\t                                if (elementInteractable\n\t                                    && elementInteractable !== this.target\n\t                                    && !elementInteractable.options.drag.manualStart\n\t                                    && elementInteractable.getAction(this.downPointer, this.downEvent, this, element).name === 'drag'\n\t                                    && checkAxis(axis, elementInteractable)) {\n\t\n\t                                    this.prepared.name = 'drag';\n\t                                    this.target = elementInteractable;\n\t                                    this.element = element;\n\t                                    break;\n\t                                }\n\t\n\t                                element = parentElement(element);\n\t                            }\n\t\n\t                            // if there's no drag from element interactables,\n\t                            // check the selector interactables\n\t                            if (!this.prepared.name) {\n\t                                var thisInteraction = this;\n\t\n\t                                var getDraggable = function (interactable, selector, context) {\n\t                                    var elements = ie8MatchesSelector\n\t                                        ? context.querySelectorAll(selector)\n\t                                        : undefined;\n\t\n\t                                    if (interactable === thisInteraction.target) { return; }\n\t\n\t                                    if (inContext(interactable, eventTarget)\n\t                                        && !interactable.options.drag.manualStart\n\t                                        && !testIgnore(interactable, element, eventTarget)\n\t                                        && testAllow(interactable, element, eventTarget)\n\t                                        && matchesSelector(element, selector, elements)\n\t                                        && interactable.getAction(thisInteraction.downPointer, thisInteraction.downEvent, thisInteraction, element).name === 'drag'\n\t                                        && checkAxis(axis, interactable)\n\t                                        && withinInteractionLimit(interactable, element, 'drag')) {\n\t\n\t                                        return interactable;\n\t                                    }\n\t                                };\n\t\n\t                                element = eventTarget;\n\t\n\t                                while (isElement(element)) {\n\t                                    var selectorInteractable = interactables.forEachSelector(getDraggable);\n\t\n\t                                    if (selectorInteractable) {\n\t                                        this.prepared.name = 'drag';\n\t                                        this.target = selectorInteractable;\n\t                                        this.element = element;\n\t                                        break;\n\t                                    }\n\t\n\t                                    element = parentElement(element);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t\n\t                var starting = !!this.prepared.name && !this.interacting();\n\t\n\t                if (starting\n\t                    && (this.target.options[this.prepared.name].manualStart\n\t                        || !withinInteractionLimit(this.target, this.element, this.prepared))) {\n\t                    this.stop(event);\n\t                    return;\n\t                }\n\t\n\t                if (this.prepared.name && this.target) {\n\t                    if (starting) {\n\t                        this.start(this.prepared, this.target, this.element);\n\t                    }\n\t\n\t                    var shouldMove = this.setModifications(this.curCoords.page, preEnd);\n\t\n\t                    // move if snapping or restriction doesn't prevent it\n\t                    if (shouldMove || starting) {\n\t                        this.prevEvent = this[this.prepared.name + 'Move'](event);\n\t                    }\n\t\n\t                    this.checkAndPreventDefault(event, this.target, this.element);\n\t                }\n\t            }\n\t\n\t            copyCoords(this.prevCoords, this.curCoords);\n\t\n\t            if (this.dragging || this.resizing) {\n\t                this.autoScrollMove(pointer);\n\t            }\n\t        },\n\t\n\t        dragStart: function (event) {\n\t            var dragEvent = new InteractEvent(this, event, 'drag', 'start', this.element);\n\t\n\t            this.dragging = true;\n\t            this.target.fire(dragEvent);\n\t\n\t            // reset active dropzones\n\t            this.activeDrops.dropzones = [];\n\t            this.activeDrops.elements  = [];\n\t            this.activeDrops.rects     = [];\n\t\n\t            if (!this.dynamicDrop) {\n\t                this.setActiveDrops(this.element);\n\t            }\n\t\n\t            var dropEvents = this.getDropEvents(event, dragEvent);\n\t\n\t            if (dropEvents.activate) {\n\t                this.fireActiveDrops(dropEvents.activate);\n\t            }\n\t\n\t            return dragEvent;\n\t        },\n\t\n\t        dragMove: function (event) {\n\t            var target = this.target,\n\t                dragEvent  = new InteractEvent(this, event, 'drag', 'move', this.element),\n\t                draggableElement = this.element,\n\t                drop = this.getDrop(dragEvent, event, draggableElement);\n\t\n\t            this.dropTarget = drop.dropzone;\n\t            this.dropElement = drop.element;\n\t\n\t            var dropEvents = this.getDropEvents(event, dragEvent);\n\t\n\t            target.fire(dragEvent);\n\t\n\t            if (dropEvents.leave) { this.prevDropTarget.fire(dropEvents.leave); }\n\t            if (dropEvents.enter) {     this.dropTarget.fire(dropEvents.enter); }\n\t            if (dropEvents.move ) {     this.dropTarget.fire(dropEvents.move ); }\n\t\n\t            this.prevDropTarget  = this.dropTarget;\n\t            this.prevDropElement = this.dropElement;\n\t\n\t            return dragEvent;\n\t        },\n\t\n\t        resizeStart: function (event) {\n\t            var resizeEvent = new InteractEvent(this, event, 'resize', 'start', this.element);\n\t\n\t            if (this.prepared.edges) {\n\t                var startRect = this.target.getRect(this.element);\n\t\n\t                /*\n\t                 * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n\t                 * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n\t                 * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n\t                 * on the active edges and the edge being interacted with.\n\t                 */\n\t                if (this.target.options.resize.square || this.target.options.resize.preserveAspectRatio) {\n\t                    var linkedEdges = extend({}, this.prepared.edges);\n\t\n\t                    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n\t                    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n\t                    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n\t                    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\t\n\t                    this.prepared._linkedEdges = linkedEdges;\n\t                }\n\t                else {\n\t                    this.prepared._linkedEdges = null;\n\t                }\n\t\n\t                // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n\t                if (this.target.options.resize.preserveAspectRatio) {\n\t                    this.resizeStartAspectRatio = startRect.width / startRect.height;\n\t                }\n\t\n\t                this.resizeRects = {\n\t                    start     : startRect,\n\t                    current   : extend({}, startRect),\n\t                    restricted: extend({}, startRect),\n\t                    previous  : extend({}, startRect),\n\t                    delta     : {\n\t                        left: 0, right : 0, width : 0,\n\t                        top : 0, bottom: 0, height: 0\n\t                    }\n\t                };\n\t\n\t                resizeEvent.rect = this.resizeRects.restricted;\n\t                resizeEvent.deltaRect = this.resizeRects.delta;\n\t            }\n\t\n\t            this.target.fire(resizeEvent);\n\t\n\t            this.resizing = true;\n\t\n\t            return resizeEvent;\n\t        },\n\t\n\t        resizeMove: function (event) {\n\t            var resizeEvent = new InteractEvent(this, event, 'resize', 'move', this.element);\n\t\n\t            var edges = this.prepared.edges,\n\t                invert = this.target.options.resize.invert,\n\t                invertible = invert === 'reposition' || invert === 'negate';\n\t\n\t            if (edges) {\n\t                var dx = resizeEvent.dx,\n\t                    dy = resizeEvent.dy,\n\t\n\t                    start      = this.resizeRects.start,\n\t                    current    = this.resizeRects.current,\n\t                    restricted = this.resizeRects.restricted,\n\t                    delta      = this.resizeRects.delta,\n\t                    previous   = extend(this.resizeRects.previous, restricted),\n\t\n\t                    originalEdges = edges;\n\t\n\t                // `resize.preserveAspectRatio` takes precedence over `resize.square`\n\t                if (this.target.options.resize.preserveAspectRatio) {\n\t                    var resizeStartAspectRatio = this.resizeStartAspectRatio;\n\t\n\t                    edges = this.prepared._linkedEdges;\n\t\n\t                    if ((originalEdges.left && originalEdges.bottom)\n\t                        || (originalEdges.right && originalEdges.top)) {\n\t                        dy = -dx / resizeStartAspectRatio;\n\t                    }\n\t                    else if (originalEdges.left || originalEdges.right) { dy = dx / resizeStartAspectRatio; }\n\t                    else if (originalEdges.top || originalEdges.bottom) { dx = dy * resizeStartAspectRatio; }\n\t                }\n\t                else if (this.target.options.resize.square) {\n\t                    edges = this.prepared._linkedEdges;\n\t\n\t                    if ((originalEdges.left && originalEdges.bottom)\n\t                        || (originalEdges.right && originalEdges.top)) {\n\t                        dy = -dx;\n\t                    }\n\t                    else if (originalEdges.left || originalEdges.right) { dy = dx; }\n\t                    else if (originalEdges.top || originalEdges.bottom) { dx = dy; }\n\t                }\n\t\n\t                // update the 'current' rect without modifications\n\t                if (edges.top   ) { current.top    += dy; }\n\t                if (edges.bottom) { current.bottom += dy; }\n\t                if (edges.left  ) { current.left   += dx; }\n\t                if (edges.right ) { current.right  += dx; }\n\t\n\t                if (invertible) {\n\t                    // if invertible, copy the current rect\n\t                    extend(restricted, current);\n\t\n\t                    if (invert === 'reposition') {\n\t                        // swap edge values if necessary to keep width/height positive\n\t                        var swap;\n\t\n\t                        if (restricted.top > restricted.bottom) {\n\t                            swap = restricted.top;\n\t\n\t                            restricted.top = restricted.bottom;\n\t                            restricted.bottom = swap;\n\t                        }\n\t                        if (restricted.left > restricted.right) {\n\t                            swap = restricted.left;\n\t\n\t                            restricted.left = restricted.right;\n\t                            restricted.right = swap;\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    // if not invertible, restrict to minimum of 0x0 rect\n\t                    restricted.top    = Math.min(current.top, start.bottom);\n\t                    restricted.bottom = Math.max(current.bottom, start.top);\n\t                    restricted.left   = Math.min(current.left, start.right);\n\t                    restricted.right  = Math.max(current.right, start.left);\n\t                }\n\t\n\t                restricted.width  = restricted.right  - restricted.left;\n\t                restricted.height = restricted.bottom - restricted.top ;\n\t\n\t                for (var edge in restricted) {\n\t                    delta[edge] = restricted[edge] - previous[edge];\n\t                }\n\t\n\t                resizeEvent.edges = this.prepared.edges;\n\t                resizeEvent.rect = restricted;\n\t                resizeEvent.deltaRect = delta;\n\t            }\n\t\n\t            this.target.fire(resizeEvent);\n\t\n\t            return resizeEvent;\n\t        },\n\t\n\t        gestureStart: function (event) {\n\t            var gestureEvent = new InteractEvent(this, event, 'gesture', 'start', this.element);\n\t\n\t            gestureEvent.ds = 0;\n\t\n\t            this.gesture.startDistance = this.gesture.prevDistance = gestureEvent.distance;\n\t            this.gesture.startAngle = this.gesture.prevAngle = gestureEvent.angle;\n\t            this.gesture.scale = 1;\n\t\n\t            this.gesturing = true;\n\t\n\t            this.target.fire(gestureEvent);\n\t\n\t            return gestureEvent;\n\t        },\n\t\n\t        gestureMove: function (event) {\n\t            if (!this.pointerIds.length) {\n\t                return this.prevEvent;\n\t            }\n\t\n\t            var gestureEvent;\n\t\n\t            gestureEvent = new InteractEvent(this, event, 'gesture', 'move', this.element);\n\t            gestureEvent.ds = gestureEvent.scale - this.gesture.scale;\n\t\n\t            this.target.fire(gestureEvent);\n\t\n\t            this.gesture.prevAngle = gestureEvent.angle;\n\t            this.gesture.prevDistance = gestureEvent.distance;\n\t\n\t            if (gestureEvent.scale !== Infinity &&\n\t                gestureEvent.scale !== null &&\n\t                gestureEvent.scale !== undefined  &&\n\t                !isNaN(gestureEvent.scale)) {\n\t\n\t                this.gesture.scale = gestureEvent.scale;\n\t            }\n\t\n\t            return gestureEvent;\n\t        },\n\t\n\t        pointerHold: function (pointer, event, eventTarget) {\n\t            this.collectEventTargets(pointer, event, eventTarget, 'hold');\n\t        },\n\t\n\t        pointerUp: function (pointer, event, eventTarget, curEventTarget) {\n\t            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t            clearTimeout(this.holdTimers[pointerIndex]);\n\t\n\t            this.collectEventTargets(pointer, event, eventTarget, 'up' );\n\t            this.collectEventTargets(pointer, event, eventTarget, 'tap');\n\t\n\t            this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\t\n\t            this.removePointer(pointer);\n\t        },\n\t\n\t        pointerCancel: function (pointer, event, eventTarget, curEventTarget) {\n\t            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t            clearTimeout(this.holdTimers[pointerIndex]);\n\t\n\t            this.collectEventTargets(pointer, event, eventTarget, 'cancel');\n\t            this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\t\n\t            this.removePointer(pointer);\n\t        },\n\t\n\t        // http://www.quirksmode.org/dom/events/click.html\n\t        // >Events leading to dblclick\n\t        //\n\t        // IE8 doesn't fire down event before dblclick.\n\t        // This workaround tries to fire a tap and doubletap after dblclick\n\t        ie8Dblclick: function (pointer, event, eventTarget) {\n\t            if (this.prevTap\n\t                && event.clientX === this.prevTap.clientX\n\t                && event.clientY === this.prevTap.clientY\n\t                && eventTarget   === this.prevTap.target) {\n\t\n\t                this.downTargets[0] = eventTarget;\n\t                this.downTimes[0] = new Date().getTime();\n\t                this.collectEventTargets(pointer, event, eventTarget, 'tap');\n\t            }\n\t        },\n\t\n\t        // End interact move events and stop auto-scroll unless inertia is enabled\n\t        pointerEnd: function (pointer, event, eventTarget, curEventTarget) {\n\t            var endEvent,\n\t                target = this.target,\n\t                options = target && target.options,\n\t                inertiaOptions = options && this.prepared.name && options[this.prepared.name].inertia,\n\t                inertiaStatus = this.inertiaStatus;\n\t\n\t            if (this.interacting()) {\n\t\n\t                if (inertiaStatus.active && !inertiaStatus.ending) { return; }\n\t\n\t                var pointerSpeed,\n\t                    now = new Date().getTime(),\n\t                    inertiaPossible = false,\n\t                    inertia = false,\n\t                    smoothEnd = false,\n\t                    endSnap = checkSnap(target, this.prepared.name) && options[this.prepared.name].snap.endOnly,\n\t                    endRestrict = checkRestrict(target, this.prepared.name) && options[this.prepared.name].restrict.endOnly,\n\t                    dx = 0,\n\t                    dy = 0,\n\t                    startEvent;\n\t\n\t                if (this.dragging) {\n\t                    if      (options.drag.axis === 'x' ) { pointerSpeed = Math.abs(this.pointerDelta.client.vx); }\n\t                    else if (options.drag.axis === 'y' ) { pointerSpeed = Math.abs(this.pointerDelta.client.vy); }\n\t                    else   /*options.drag.axis === 'xy'*/{ pointerSpeed = this.pointerDelta.client.speed; }\n\t                }\n\t                else {\n\t                    pointerSpeed = this.pointerDelta.client.speed;\n\t                }\n\t\n\t                // check if inertia should be started\n\t                inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n\t                                   && this.prepared.name !== 'gesture'\n\t                                   && event !== inertiaStatus.startEvent);\n\t\n\t                inertia = (inertiaPossible\n\t                           && (now - this.curCoords.timeStamp) < 50\n\t                           && pointerSpeed > inertiaOptions.minSpeed\n\t                           && pointerSpeed > inertiaOptions.endSpeed);\n\t\n\t                if (inertiaPossible && !inertia && (endSnap || endRestrict)) {\n\t\n\t                    var snapRestrict = {};\n\t\n\t                    snapRestrict.snap = snapRestrict.restrict = snapRestrict;\n\t\n\t                    if (endSnap) {\n\t                        this.setSnapping(this.curCoords.page, snapRestrict);\n\t                        if (snapRestrict.locked) {\n\t                            dx += snapRestrict.dx;\n\t                            dy += snapRestrict.dy;\n\t                        }\n\t                    }\n\t\n\t                    if (endRestrict) {\n\t                        this.setRestriction(this.curCoords.page, snapRestrict);\n\t                        if (snapRestrict.restricted) {\n\t                            dx += snapRestrict.dx;\n\t                            dy += snapRestrict.dy;\n\t                        }\n\t                    }\n\t\n\t                    if (dx || dy) {\n\t                        smoothEnd = true;\n\t                    }\n\t                }\n\t\n\t                if (inertia || smoothEnd) {\n\t                    copyCoords(inertiaStatus.upCoords, this.curCoords);\n\t\n\t                    this.pointers[0] = inertiaStatus.startEvent = startEvent =\n\t                        new InteractEvent(this, event, this.prepared.name, 'inertiastart', this.element);\n\t\n\t                    inertiaStatus.t0 = now;\n\t\n\t                    target.fire(inertiaStatus.startEvent);\n\t\n\t                    if (inertia) {\n\t                        inertiaStatus.vx0 = this.pointerDelta.client.vx;\n\t                        inertiaStatus.vy0 = this.pointerDelta.client.vy;\n\t                        inertiaStatus.v0 = pointerSpeed;\n\t\n\t                        this.calcInertia(inertiaStatus);\n\t\n\t                        var page = extend({}, this.curCoords.page),\n\t                            origin = getOriginXY(target, this.element),\n\t                            statusObject;\n\t\n\t                        page.x = page.x + inertiaStatus.xe - origin.x;\n\t                        page.y = page.y + inertiaStatus.ye - origin.y;\n\t\n\t                        statusObject = {\n\t                            useStatusXY: true,\n\t                            x: page.x,\n\t                            y: page.y,\n\t                            dx: 0,\n\t                            dy: 0,\n\t                            snap: null\n\t                        };\n\t\n\t                        statusObject.snap = statusObject;\n\t\n\t                        dx = dy = 0;\n\t\n\t                        if (endSnap) {\n\t                            var snap = this.setSnapping(this.curCoords.page, statusObject);\n\t\n\t                            if (snap.locked) {\n\t                                dx += snap.dx;\n\t                                dy += snap.dy;\n\t                            }\n\t                        }\n\t\n\t                        if (endRestrict) {\n\t                            var restrict = this.setRestriction(this.curCoords.page, statusObject);\n\t\n\t                            if (restrict.restricted) {\n\t                                dx += restrict.dx;\n\t                                dy += restrict.dy;\n\t                            }\n\t                        }\n\t\n\t                        inertiaStatus.modifiedXe += dx;\n\t                        inertiaStatus.modifiedYe += dy;\n\t\n\t                        inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n\t                    }\n\t                    else {\n\t                        inertiaStatus.smoothEnd = true;\n\t                        inertiaStatus.xe = dx;\n\t                        inertiaStatus.ye = dy;\n\t\n\t                        inertiaStatus.sx = inertiaStatus.sy = 0;\n\t\n\t                        inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n\t                    }\n\t\n\t                    inertiaStatus.active = true;\n\t                    return;\n\t                }\n\t\n\t                if (endSnap || endRestrict) {\n\t                    // fire a move event at the snapped coordinates\n\t                    this.pointerMove(pointer, event, eventTarget, curEventTarget, true);\n\t                }\n\t            }\n\t\n\t            if (this.dragging) {\n\t                endEvent = new InteractEvent(this, event, 'drag', 'end', this.element);\n\t\n\t                var draggableElement = this.element,\n\t                    drop = this.getDrop(endEvent, event, draggableElement);\n\t\n\t                this.dropTarget = drop.dropzone;\n\t                this.dropElement = drop.element;\n\t\n\t                var dropEvents = this.getDropEvents(event, endEvent);\n\t\n\t                if (dropEvents.leave) { this.prevDropTarget.fire(dropEvents.leave); }\n\t                if (dropEvents.enter) {     this.dropTarget.fire(dropEvents.enter); }\n\t                if (dropEvents.drop ) {     this.dropTarget.fire(dropEvents.drop ); }\n\t                if (dropEvents.deactivate) {\n\t                    this.fireActiveDrops(dropEvents.deactivate);\n\t                }\n\t\n\t                target.fire(endEvent);\n\t            }\n\t            else if (this.resizing) {\n\t                endEvent = new InteractEvent(this, event, 'resize', 'end', this.element);\n\t                target.fire(endEvent);\n\t            }\n\t            else if (this.gesturing) {\n\t                endEvent = new InteractEvent(this, event, 'gesture', 'end', this.element);\n\t                target.fire(endEvent);\n\t            }\n\t\n\t            this.stop(event);\n\t        },\n\t\n\t        collectDrops: function (element) {\n\t            var drops = [],\n\t                elements = [],\n\t                i;\n\t\n\t            element = element || this.element;\n\t\n\t            // collect all dropzones and their elements which qualify for a drop\n\t            for (i = 0; i < interactables.length; i++) {\n\t                if (!interactables[i].options.drop.enabled) { continue; }\n\t\n\t                var current = interactables[i],\n\t                    accept = current.options.drop.accept;\n\t\n\t                // test the draggable element against the dropzone's accept setting\n\t                if ((isElement(accept) && accept !== element)\n\t                    || (isString(accept)\n\t                        && !matchesSelector(element, accept))) {\n\t\n\t                    continue;\n\t                }\n\t\n\t                // query for new elements if necessary\n\t                var dropElements = current.selector? current._context.querySelectorAll(current.selector) : [current._element];\n\t\n\t                for (var j = 0, len = dropElements.length; j < len; j++) {\n\t                    var currentElement = dropElements[j];\n\t\n\t                    if (currentElement === element) {\n\t                        continue;\n\t                    }\n\t\n\t                    drops.push(current);\n\t                    elements.push(currentElement);\n\t                }\n\t            }\n\t\n\t            return {\n\t                dropzones: drops,\n\t                elements: elements\n\t            };\n\t        },\n\t\n\t        fireActiveDrops: function (event) {\n\t            var i,\n\t                current,\n\t                currentElement,\n\t                prevElement;\n\t\n\t            // loop through all active dropzones and trigger event\n\t            for (i = 0; i < this.activeDrops.dropzones.length; i++) {\n\t                current = this.activeDrops.dropzones[i];\n\t                currentElement = this.activeDrops.elements [i];\n\t\n\t                // prevent trigger of duplicate events on same element\n\t                if (currentElement !== prevElement) {\n\t                    // set current element as event target\n\t                    event.target = currentElement;\n\t                    current.fire(event);\n\t                }\n\t                prevElement = currentElement;\n\t            }\n\t        },\n\t\n\t        // Collect a new set of possible drops and save them in activeDrops.\n\t        // setActiveDrops should always be called when a drag has just started or a\n\t        // drag event happens while dynamicDrop is true\n\t        setActiveDrops: function (dragElement) {\n\t            // get dropzones and their elements that could receive the draggable\n\t            var possibleDrops = this.collectDrops(dragElement, true);\n\t\n\t            this.activeDrops.dropzones = possibleDrops.dropzones;\n\t            this.activeDrops.elements  = possibleDrops.elements;\n\t            this.activeDrops.rects     = [];\n\t\n\t            for (var i = 0; i < this.activeDrops.dropzones.length; i++) {\n\t                this.activeDrops.rects[i] = this.activeDrops.dropzones[i].getRect(this.activeDrops.elements[i]);\n\t            }\n\t        },\n\t\n\t        getDrop: function (dragEvent, event, dragElement) {\n\t            var validDrops = [];\n\t\n\t            if (dynamicDrop) {\n\t                this.setActiveDrops(dragElement);\n\t            }\n\t\n\t            // collect all dropzones and their elements which qualify for a drop\n\t            for (var j = 0; j < this.activeDrops.dropzones.length; j++) {\n\t                var current        = this.activeDrops.dropzones[j],\n\t                    currentElement = this.activeDrops.elements [j],\n\t                    rect           = this.activeDrops.rects    [j];\n\t\n\t                validDrops.push(current.dropCheck(dragEvent, event, this.target, dragElement, currentElement, rect)\n\t                                ? currentElement\n\t                                : null);\n\t            }\n\t\n\t            // get the most appropriate dropzone based on DOM depth and order\n\t            var dropIndex = indexOfDeepestElement(validDrops),\n\t                dropzone  = this.activeDrops.dropzones[dropIndex] || null,\n\t                element   = this.activeDrops.elements [dropIndex] || null;\n\t\n\t            return {\n\t                dropzone: dropzone,\n\t                element: element\n\t            };\n\t        },\n\t\n\t        getDropEvents: function (pointerEvent, dragEvent) {\n\t            var dropEvents = {\n\t                enter     : null,\n\t                leave     : null,\n\t                activate  : null,\n\t                deactivate: null,\n\t                move      : null,\n\t                drop      : null\n\t            };\n\t\n\t            if (this.dropElement !== this.prevDropElement) {\n\t                // if there was a prevDropTarget, create a dragleave event\n\t                if (this.prevDropTarget) {\n\t                    dropEvents.leave = {\n\t                        target       : this.prevDropElement,\n\t                        dropzone     : this.prevDropTarget,\n\t                        relatedTarget: dragEvent.target,\n\t                        draggable    : dragEvent.interactable,\n\t                        dragEvent    : dragEvent,\n\t                        interaction  : this,\n\t                        timeStamp    : dragEvent.timeStamp,\n\t                        type         : 'dragleave'\n\t                    };\n\t\n\t                    dragEvent.dragLeave = this.prevDropElement;\n\t                    dragEvent.prevDropzone = this.prevDropTarget;\n\t                }\n\t                // if the dropTarget is not null, create a dragenter event\n\t                if (this.dropTarget) {\n\t                    dropEvents.enter = {\n\t                        target       : this.dropElement,\n\t                        dropzone     : this.dropTarget,\n\t                        relatedTarget: dragEvent.target,\n\t                        draggable    : dragEvent.interactable,\n\t                        dragEvent    : dragEvent,\n\t                        interaction  : this,\n\t                        timeStamp    : dragEvent.timeStamp,\n\t                        type         : 'dragenter'\n\t                    };\n\t\n\t                    dragEvent.dragEnter = this.dropElement;\n\t                    dragEvent.dropzone = this.dropTarget;\n\t                }\n\t            }\n\t\n\t            if (dragEvent.type === 'dragend' && this.dropTarget) {\n\t                dropEvents.drop = {\n\t                    target       : this.dropElement,\n\t                    dropzone     : this.dropTarget,\n\t                    relatedTarget: dragEvent.target,\n\t                    draggable    : dragEvent.interactable,\n\t                    dragEvent    : dragEvent,\n\t                    interaction  : this,\n\t                    timeStamp    : dragEvent.timeStamp,\n\t                    type         : 'drop'\n\t                };\n\t\n\t                dragEvent.dropzone = this.dropTarget;\n\t            }\n\t            if (dragEvent.type === 'dragstart') {\n\t                dropEvents.activate = {\n\t                    target       : null,\n\t                    dropzone     : null,\n\t                    relatedTarget: dragEvent.target,\n\t                    draggable    : dragEvent.interactable,\n\t                    dragEvent    : dragEvent,\n\t                    interaction  : this,\n\t                    timeStamp    : dragEvent.timeStamp,\n\t                    type         : 'dropactivate'\n\t                };\n\t            }\n\t            if (dragEvent.type === 'dragend') {\n\t                dropEvents.deactivate = {\n\t                    target       : null,\n\t                    dropzone     : null,\n\t                    relatedTarget: dragEvent.target,\n\t                    draggable    : dragEvent.interactable,\n\t                    dragEvent    : dragEvent,\n\t                    interaction  : this,\n\t                    timeStamp    : dragEvent.timeStamp,\n\t                    type         : 'dropdeactivate'\n\t                };\n\t            }\n\t            if (dragEvent.type === 'dragmove' && this.dropTarget) {\n\t                dropEvents.move = {\n\t                    target       : this.dropElement,\n\t                    dropzone     : this.dropTarget,\n\t                    relatedTarget: dragEvent.target,\n\t                    draggable    : dragEvent.interactable,\n\t                    dragEvent    : dragEvent,\n\t                    interaction  : this,\n\t                    dragmove     : dragEvent,\n\t                    timeStamp    : dragEvent.timeStamp,\n\t                    type         : 'dropmove'\n\t                };\n\t                dragEvent.dropzone = this.dropTarget;\n\t            }\n\t\n\t            return dropEvents;\n\t        },\n\t\n\t        currentAction: function () {\n\t            return (this.dragging && 'drag') || (this.resizing && 'resize') || (this.gesturing && 'gesture') || null;\n\t        },\n\t\n\t        interacting: function () {\n\t            return this.dragging || this.resizing || this.gesturing;\n\t        },\n\t\n\t        clearTargets: function () {\n\t            this.target = this.element = null;\n\t\n\t            this.dropTarget = this.dropElement = this.prevDropTarget = this.prevDropElement = null;\n\t        },\n\t\n\t        stop: function (event) {\n\t            if (this.interacting()) {\n\t                autoScroll.stop();\n\t                this.matches = [];\n\t                this.matchElements = [];\n\t\n\t                var target = this.target;\n\t\n\t                if (target.options.styleCursor) {\n\t                    target._doc.documentElement.style.cursor = '';\n\t                }\n\t\n\t                // prevent Default only if were previously interacting\n\t                if (event && isFunction(event.preventDefault)) {\n\t                    this.checkAndPreventDefault(event, target, this.element);\n\t                }\n\t\n\t                if (this.dragging) {\n\t                    this.activeDrops.dropzones = this.activeDrops.elements = this.activeDrops.rects = null;\n\t                }\n\t            }\n\t\n\t            this.clearTargets();\n\t\n\t            this.pointerIsDown = this.snapStatus.locked = this.dragging = this.resizing = this.gesturing = false;\n\t            this.prepared.name = this.prevEvent = null;\n\t            this.inertiaStatus.resumeDx = this.inertiaStatus.resumeDy = 0;\n\t\n\t            // remove pointers if their ID isn't in this.pointerIds\n\t            for (var i = 0; i < this.pointers.length; i++) {\n\t                if (indexOf(this.pointerIds, getPointerId(this.pointers[i])) === -1) {\n\t                    this.pointers.splice(i, 1);\n\t                }\n\t            }\n\t        },\n\t\n\t        inertiaFrame: function () {\n\t            var inertiaStatus = this.inertiaStatus,\n\t                options = this.target.options[this.prepared.name].inertia,\n\t                lambda = options.resistance,\n\t                t = new Date().getTime() / 1000 - inertiaStatus.t0;\n\t\n\t            if (t < inertiaStatus.te) {\n\t\n\t                var progress =  1 - (Math.exp(-lambda * t) - inertiaStatus.lambda_v0) / inertiaStatus.one_ve_v0;\n\t\n\t                if (inertiaStatus.modifiedXe === inertiaStatus.xe && inertiaStatus.modifiedYe === inertiaStatus.ye) {\n\t                    inertiaStatus.sx = inertiaStatus.xe * progress;\n\t                    inertiaStatus.sy = inertiaStatus.ye * progress;\n\t                }\n\t                else {\n\t                    var quadPoint = getQuadraticCurvePoint(\n\t                            0, 0,\n\t                            inertiaStatus.xe, inertiaStatus.ye,\n\t                            inertiaStatus.modifiedXe, inertiaStatus.modifiedYe,\n\t                            progress);\n\t\n\t                    inertiaStatus.sx = quadPoint.x;\n\t                    inertiaStatus.sy = quadPoint.y;\n\t                }\n\t\n\t                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t                inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n\t            }\n\t            else {\n\t                inertiaStatus.ending = true;\n\t\n\t                inertiaStatus.sx = inertiaStatus.modifiedXe;\n\t                inertiaStatus.sy = inertiaStatus.modifiedYe;\n\t\n\t                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t                this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t                inertiaStatus.active = inertiaStatus.ending = false;\n\t            }\n\t        },\n\t\n\t        smoothEndFrame: function () {\n\t            var inertiaStatus = this.inertiaStatus,\n\t                t = new Date().getTime() - inertiaStatus.t0,\n\t                duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\t\n\t            if (t < duration) {\n\t                inertiaStatus.sx = easeOutQuad(t, 0, inertiaStatus.xe, duration);\n\t                inertiaStatus.sy = easeOutQuad(t, 0, inertiaStatus.ye, duration);\n\t\n\t                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t                inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n\t            }\n\t            else {\n\t                inertiaStatus.ending = true;\n\t\n\t                inertiaStatus.sx = inertiaStatus.xe;\n\t                inertiaStatus.sy = inertiaStatus.ye;\n\t\n\t                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t                this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t                inertiaStatus.smoothEnd =\n\t                  inertiaStatus.active = inertiaStatus.ending = false;\n\t            }\n\t        },\n\t\n\t        addPointer: function (pointer) {\n\t            var id = getPointerId(pointer),\n\t                index = this.mouse? 0 : indexOf(this.pointerIds, id);\n\t\n\t            if (index === -1) {\n\t                index = this.pointerIds.length;\n\t            }\n\t\n\t            this.pointerIds[index] = id;\n\t            this.pointers[index] = pointer;\n\t\n\t            return index;\n\t        },\n\t\n\t        removePointer: function (pointer) {\n\t            var id = getPointerId(pointer),\n\t                index = this.mouse? 0 : indexOf(this.pointerIds, id);\n\t\n\t            if (index === -1) { return; }\n\t\n\t            this.pointers   .splice(index, 1);\n\t            this.pointerIds .splice(index, 1);\n\t            this.downTargets.splice(index, 1);\n\t            this.downTimes  .splice(index, 1);\n\t            this.holdTimers .splice(index, 1);\n\t        },\n\t\n\t        recordPointer: function (pointer) {\n\t            var index = this.mouse? 0: indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t            if (index === -1) { return; }\n\t\n\t            this.pointers[index] = pointer;\n\t        },\n\t\n\t        collectEventTargets: function (pointer, event, eventTarget, eventType) {\n\t            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t            // do not fire a tap event if the pointer was moved before being lifted\n\t            if (eventType === 'tap' && (this.pointerWasMoved\n\t                // or if the pointerup target is different to the pointerdown target\n\t                || !(this.downTargets[pointerIndex] && this.downTargets[pointerIndex] === eventTarget))) {\n\t                return;\n\t            }\n\t\n\t            var targets = [],\n\t                elements = [],\n\t                element = eventTarget;\n\t\n\t            function collectSelectors (interactable, selector, context) {\n\t                var els = ie8MatchesSelector\n\t                        ? context.querySelectorAll(selector)\n\t                        : undefined;\n\t\n\t                if (interactable._iEvents[eventType]\n\t                    && isElement(element)\n\t                    && inContext(interactable, element)\n\t                    && !testIgnore(interactable, element, eventTarget)\n\t                    && testAllow(interactable, element, eventTarget)\n\t                    && matchesSelector(element, selector, els)) {\n\t\n\t                    targets.push(interactable);\n\t                    elements.push(element);\n\t                }\n\t            }\n\t\n\t            while (element) {\n\t                if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n\t                    targets.push(interact(element));\n\t                    elements.push(element);\n\t                }\n\t\n\t                interactables.forEachSelector(collectSelectors);\n\t\n\t                element = parentElement(element);\n\t            }\n\t\n\t            // create the tap event even if there are no listeners so that\n\t            // doubletap can still be created and fired\n\t            if (targets.length || eventType === 'tap') {\n\t                this.firePointers(pointer, event, eventTarget, targets, elements, eventType);\n\t            }\n\t        },\n\t\n\t        firePointers: function (pointer, event, eventTarget, targets, elements, eventType) {\n\t            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer)),\n\t                pointerEvent = {},\n\t                i,\n\t                // for tap events\n\t                interval, createNewDoubleTap;\n\t\n\t            // if it's a doubletap then the event properties would have been\n\t            // copied from the tap event and provided as the pointer argument\n\t            if (eventType === 'doubletap') {\n\t                pointerEvent = pointer;\n\t            }\n\t            else {\n\t                pointerExtend(pointerEvent, event);\n\t                if (event !== pointer) {\n\t                    pointerExtend(pointerEvent, pointer);\n\t                }\n\t\n\t                pointerEvent.preventDefault           = preventOriginalDefault;\n\t                pointerEvent.stopPropagation          = InteractEvent.prototype.stopPropagation;\n\t                pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n\t                pointerEvent.interaction              = this;\n\t\n\t                pointerEvent.timeStamp       = new Date().getTime();\n\t                pointerEvent.originalEvent   = event;\n\t                pointerEvent.originalPointer = pointer;\n\t                pointerEvent.type            = eventType;\n\t                pointerEvent.pointerId       = getPointerId(pointer);\n\t                pointerEvent.pointerType     = this.mouse? 'mouse' : !supportsPointerEvent? 'touch'\n\t                                                    : isString(pointer.pointerType)\n\t                                                        ? pointer.pointerType\n\t                                                        : [,,'touch', 'pen', 'mouse'][pointer.pointerType];\n\t            }\n\t\n\t            if (eventType === 'tap') {\n\t                pointerEvent.dt = pointerEvent.timeStamp - this.downTimes[pointerIndex];\n\t\n\t                interval = pointerEvent.timeStamp - this.tapTime;\n\t                createNewDoubleTap = !!(this.prevTap && this.prevTap.type !== 'doubletap'\n\t                       && this.prevTap.target === pointerEvent.target\n\t                       && interval < 500);\n\t\n\t                pointerEvent.double = createNewDoubleTap;\n\t\n\t                this.tapTime = pointerEvent.timeStamp;\n\t            }\n\t\n\t            for (i = 0; i < targets.length; i++) {\n\t                pointerEvent.currentTarget = elements[i];\n\t                pointerEvent.interactable = targets[i];\n\t                targets[i].fire(pointerEvent);\n\t\n\t                if (pointerEvent.immediatePropagationStopped\n\t                    ||(pointerEvent.propagationStopped && elements[i + 1] !== pointerEvent.currentTarget)) {\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if (createNewDoubleTap) {\n\t                var doubleTap = {};\n\t\n\t                extend(doubleTap, pointerEvent);\n\t\n\t                doubleTap.dt   = interval;\n\t                doubleTap.type = 'doubletap';\n\t\n\t                this.collectEventTargets(doubleTap, event, eventTarget, 'doubletap');\n\t\n\t                this.prevTap = doubleTap;\n\t            }\n\t            else if (eventType === 'tap') {\n\t                this.prevTap = pointerEvent;\n\t            }\n\t        },\n\t\n\t        validateSelector: function (pointer, event, matches, matchElements) {\n\t            for (var i = 0, len = matches.length; i < len; i++) {\n\t                var match = matches[i],\n\t                    matchElement = matchElements[i],\n\t                    action = validateAction(match.getAction(pointer, event, this, matchElement), match);\n\t\n\t                if (action && withinInteractionLimit(match, matchElement, action)) {\n\t                    this.target = match;\n\t                    this.element = matchElement;\n\t\n\t                    return action;\n\t                }\n\t            }\n\t        },\n\t\n\t        setSnapping: function (pageCoords, status) {\n\t            var snap = this.target.options[this.prepared.name].snap,\n\t                targets = [],\n\t                target,\n\t                page,\n\t                i;\n\t\n\t            status = status || this.snapStatus;\n\t\n\t            if (status.useStatusXY) {\n\t                page = { x: status.x, y: status.y };\n\t            }\n\t            else {\n\t                var origin = getOriginXY(this.target, this.element);\n\t\n\t                page = extend({}, pageCoords);\n\t\n\t                page.x -= origin.x;\n\t                page.y -= origin.y;\n\t            }\n\t\n\t            status.realX = page.x;\n\t            status.realY = page.y;\n\t\n\t            page.x = page.x - this.inertiaStatus.resumeDx;\n\t            page.y = page.y - this.inertiaStatus.resumeDy;\n\t\n\t            var len = snap.targets? snap.targets.length : 0;\n\t\n\t            for (var relIndex = 0; relIndex < this.snapOffsets.length; relIndex++) {\n\t                var relative = {\n\t                    x: page.x - this.snapOffsets[relIndex].x,\n\t                    y: page.y - this.snapOffsets[relIndex].y\n\t                };\n\t\n\t                for (i = 0; i < len; i++) {\n\t                    if (isFunction(snap.targets[i])) {\n\t                        target = snap.targets[i](relative.x, relative.y, this);\n\t                    }\n\t                    else {\n\t                        target = snap.targets[i];\n\t                    }\n\t\n\t                    if (!target) { continue; }\n\t\n\t                    targets.push({\n\t                        x: isNumber(target.x) ? (target.x + this.snapOffsets[relIndex].x) : relative.x,\n\t                        y: isNumber(target.y) ? (target.y + this.snapOffsets[relIndex].y) : relative.y,\n\t\n\t                        range: isNumber(target.range)? target.range: snap.range\n\t                    });\n\t                }\n\t            }\n\t\n\t            var closest = {\n\t                    target: null,\n\t                    inRange: false,\n\t                    distance: 0,\n\t                    range: 0,\n\t                    dx: 0,\n\t                    dy: 0\n\t                };\n\t\n\t            for (i = 0, len = targets.length; i < len; i++) {\n\t                target = targets[i];\n\t\n\t                var range = target.range,\n\t                    dx = target.x - page.x,\n\t                    dy = target.y - page.y,\n\t                    distance = hypot(dx, dy),\n\t                    inRange = distance <= range;\n\t\n\t                // Infinite targets count as being out of range\n\t                // compared to non infinite ones that are in range\n\t                if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n\t                    inRange = false;\n\t                }\n\t\n\t                if (!closest.target || (inRange\n\t                    // is the closest target in range?\n\t                    ? (closest.inRange && range !== Infinity\n\t                        // the pointer is relatively deeper in this target\n\t                        ? distance / range < closest.distance / closest.range\n\t                        // this target has Infinite range and the closest doesn't\n\t                        : (range === Infinity && closest.range !== Infinity)\n\t                            // OR this target is closer that the previous closest\n\t                            || distance < closest.distance)\n\t                    // The other is not in range and the pointer is closer to this target\n\t                    : (!closest.inRange && distance < closest.distance))) {\n\t\n\t                    if (range === Infinity) {\n\t                        inRange = true;\n\t                    }\n\t\n\t                    closest.target = target;\n\t                    closest.distance = distance;\n\t                    closest.range = range;\n\t                    closest.inRange = inRange;\n\t                    closest.dx = dx;\n\t                    closest.dy = dy;\n\t\n\t                    status.range = range;\n\t                }\n\t            }\n\t\n\t            var snapChanged;\n\t\n\t            if (closest.target) {\n\t                snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\t\n\t                status.snappedX = closest.target.x;\n\t                status.snappedY = closest.target.y;\n\t            }\n\t            else {\n\t                snapChanged = true;\n\t\n\t                status.snappedX = NaN;\n\t                status.snappedY = NaN;\n\t            }\n\t\n\t            status.dx = closest.dx;\n\t            status.dy = closest.dy;\n\t\n\t            status.changed = (snapChanged || (closest.inRange && !status.locked));\n\t            status.locked = closest.inRange;\n\t\n\t            return status;\n\t        },\n\t\n\t        setRestriction: function (pageCoords, status) {\n\t            var target = this.target,\n\t                restrict = target && target.options[this.prepared.name].restrict,\n\t                restriction = restrict && restrict.restriction,\n\t                page;\n\t\n\t            if (!restriction) {\n\t                return status;\n\t            }\n\t\n\t            status = status || this.restrictStatus;\n\t\n\t            page = status.useStatusXY\n\t                    ? page = { x: status.x, y: status.y }\n\t                    : page = extend({}, pageCoords);\n\t\n\t            if (status.snap && status.snap.locked) {\n\t                page.x += status.snap.dx || 0;\n\t                page.y += status.snap.dy || 0;\n\t            }\n\t\n\t            page.x -= this.inertiaStatus.resumeDx;\n\t            page.y -= this.inertiaStatus.resumeDy;\n\t\n\t            status.dx = 0;\n\t            status.dy = 0;\n\t            status.restricted = false;\n\t\n\t            var rect, restrictedX, restrictedY;\n\t\n\t            if (isString(restriction)) {\n\t                if (restriction === 'parent') {\n\t                    restriction = parentElement(this.element);\n\t                }\n\t                else if (restriction === 'self') {\n\t                    restriction = target.getRect(this.element);\n\t                }\n\t                else {\n\t                    restriction = closest(this.element, restriction);\n\t                }\n\t\n\t                if (!restriction) { return status; }\n\t            }\n\t\n\t            if (isFunction(restriction)) {\n\t                restriction = restriction(page.x, page.y, this.element);\n\t            }\n\t\n\t            if (isElement(restriction)) {\n\t                restriction = getElementRect(restriction);\n\t            }\n\t\n\t            rect = restriction;\n\t\n\t            if (!restriction) {\n\t                restrictedX = page.x;\n\t                restrictedY = page.y;\n\t            }\n\t            // object is assumed to have\n\t            // x, y, width, height or\n\t            // left, top, right, bottom\n\t            else if ('x' in restriction && 'y' in restriction) {\n\t                restrictedX = Math.max(Math.min(rect.x + rect.width  - this.restrictOffset.right , page.x), rect.x + this.restrictOffset.left);\n\t                restrictedY = Math.max(Math.min(rect.y + rect.height - this.restrictOffset.bottom, page.y), rect.y + this.restrictOffset.top );\n\t            }\n\t            else {\n\t                restrictedX = Math.max(Math.min(rect.right  - this.restrictOffset.right , page.x), rect.left + this.restrictOffset.left);\n\t                restrictedY = Math.max(Math.min(rect.bottom - this.restrictOffset.bottom, page.y), rect.top  + this.restrictOffset.top );\n\t            }\n\t\n\t            status.dx = restrictedX - page.x;\n\t            status.dy = restrictedY - page.y;\n\t\n\t            status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n\t            status.restricted = !!(status.dx || status.dy);\n\t\n\t            status.restrictedX = restrictedX;\n\t            status.restrictedY = restrictedY;\n\t\n\t            return status;\n\t        },\n\t\n\t        checkAndPreventDefault: function (event, interactable, element) {\n\t            if (!(interactable = interactable || this.target)) { return; }\n\t\n\t            var options = interactable.options,\n\t                prevent = options.preventDefault;\n\t\n\t            if (prevent === 'auto' && element && !/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n\t                // do not preventDefault on pointerdown if the prepared action is a drag\n\t                // and dragging can only start from a certain direction - this allows\n\t                // a touch to pan the viewport if a drag isn't in the right direction\n\t                if (/down|start/i.test(event.type)\n\t                    && this.prepared.name === 'drag' && options.drag.axis !== 'xy') {\n\t\n\t                    return;\n\t                }\n\t\n\t                // with manualStart, only preventDefault while interacting\n\t                if (options[this.prepared.name] && options[this.prepared.name].manualStart\n\t                    && !this.interacting()) {\n\t                    return;\n\t                }\n\t\n\t                event.preventDefault();\n\t                return;\n\t            }\n\t\n\t            if (prevent === 'always') {\n\t                event.preventDefault();\n\t                return;\n\t            }\n\t        },\n\t\n\t        calcInertia: function (status) {\n\t            var inertiaOptions = this.target.options[this.prepared.name].inertia,\n\t                lambda = inertiaOptions.resistance,\n\t                inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\t\n\t            status.x0 = this.prevEvent.pageX;\n\t            status.y0 = this.prevEvent.pageY;\n\t            status.t0 = status.startEvent.timeStamp / 1000;\n\t            status.sx = status.sy = 0;\n\t\n\t            status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n\t            status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n\t            status.te = inertiaDur;\n\t\n\t            status.lambda_v0 = lambda / status.v0;\n\t            status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n\t        },\n\t\n\t        autoScrollMove: function (pointer) {\n\t            if (!(this.interacting()\n\t                && checkAutoScroll(this.target, this.prepared.name))) {\n\t                return;\n\t            }\n\t\n\t            if (this.inertiaStatus.active) {\n\t                autoScroll.x = autoScroll.y = 0;\n\t                return;\n\t            }\n\t\n\t            var top,\n\t                right,\n\t                bottom,\n\t                left,\n\t                options = this.target.options[this.prepared.name].autoScroll,\n\t                container = options.container || getWindow(this.element);\n\t\n\t            if (isWindow(container)) {\n\t                left   = pointer.clientX < autoScroll.margin;\n\t                top    = pointer.clientY < autoScroll.margin;\n\t                right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n\t                bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n\t            }\n\t            else {\n\t                var rect = getElementClientRect(container);\n\t\n\t                left   = pointer.clientX < rect.left   + autoScroll.margin;\n\t                top    = pointer.clientY < rect.top    + autoScroll.margin;\n\t                right  = pointer.clientX > rect.right  - autoScroll.margin;\n\t                bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n\t            }\n\t\n\t            autoScroll.x = (right ? 1: left? -1: 0);\n\t            autoScroll.y = (bottom? 1:  top? -1: 0);\n\t\n\t            if (!autoScroll.isScrolling) {\n\t                // set the autoScroll properties to those of the target\n\t                autoScroll.margin = options.margin;\n\t                autoScroll.speed  = options.speed;\n\t\n\t                autoScroll.start(this);\n\t            }\n\t        },\n\t\n\t        _updateEventTargets: function (target, currentTarget) {\n\t            this._eventTarget    = target;\n\t            this._curEventTarget = currentTarget;\n\t        }\n\t\n\t    };\n\t\n\t    function getInteractionFromPointer (pointer, eventType, eventTarget) {\n\t        var i = 0, len = interactions.length,\n\t            mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n\t                          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n\t                          || pointer.pointerType === 4),\n\t            interaction;\n\t\n\t        var id = getPointerId(pointer);\n\t\n\t        // try to resume inertia with a new pointer\n\t        if (/down|start/i.test(eventType)) {\n\t            for (i = 0; i < len; i++) {\n\t                interaction = interactions[i];\n\t\n\t                var element = eventTarget;\n\t\n\t                if (interaction.inertiaStatus.active && interaction.target.options[interaction.prepared.name].inertia.allowResume\n\t                    && (interaction.mouse === mouseEvent)) {\n\t                    while (element) {\n\t                        // if the element is the interaction element\n\t                        if (element === interaction.element) {\n\t                            return interaction;\n\t                        }\n\t                        element = parentElement(element);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        // if it's a mouse interaction\n\t        if (mouseEvent || !(supportsTouch || supportsPointerEvent)) {\n\t\n\t            // find a mouse interaction that's not in inertia phase\n\t            for (i = 0; i < len; i++) {\n\t                if (interactions[i].mouse && !interactions[i].inertiaStatus.active) {\n\t                    return interactions[i];\n\t                }\n\t            }\n\t\n\t            // find any interaction specifically for mouse.\n\t            // if the eventType is a mousedown, and inertia is active\n\t            // ignore the interaction\n\t            for (i = 0; i < len; i++) {\n\t                if (interactions[i].mouse && !(/down/.test(eventType) && interactions[i].inertiaStatus.active)) {\n\t                    return interaction;\n\t                }\n\t            }\n\t\n\t            // create a new interaction for mouse\n\t            interaction = new Interaction();\n\t            interaction.mouse = true;\n\t\n\t            return interaction;\n\t        }\n\t\n\t        // get interaction that has this pointer\n\t        for (i = 0; i < len; i++) {\n\t            if (contains(interactions[i].pointerIds, id)) {\n\t                return interactions[i];\n\t            }\n\t        }\n\t\n\t        // at this stage, a pointerUp should not return an interaction\n\t        if (/up|end|out/i.test(eventType)) {\n\t            return null;\n\t        }\n\t\n\t        // get first idle interaction\n\t        for (i = 0; i < len; i++) {\n\t            interaction = interactions[i];\n\t\n\t            if ((!interaction.prepared.name || (interaction.target.options.gesture.enabled))\n\t                && !interaction.interacting()\n\t                && !(!mouseEvent && interaction.mouse)) {\n\t\n\t                return interaction;\n\t            }\n\t        }\n\t\n\t        return new Interaction();\n\t    }\n\t\n\t    function doOnInteractions (method) {\n\t        return (function (event) {\n\t            var interaction,\n\t                eventTarget = getActualElement(event.path\n\t                                               ? event.path[0]\n\t                                               : event.target),\n\t                curEventTarget = getActualElement(event.currentTarget),\n\t                i;\n\t\n\t            if (supportsTouch && /touch/.test(event.type)) {\n\t                prevTouchTime = new Date().getTime();\n\t\n\t                for (i = 0; i < event.changedTouches.length; i++) {\n\t                    var pointer = event.changedTouches[i];\n\t\n\t                    interaction = getInteractionFromPointer(pointer, event.type, eventTarget);\n\t\n\t                    if (!interaction) { continue; }\n\t\n\t                    interaction._updateEventTargets(eventTarget, curEventTarget);\n\t\n\t                    interaction[method](pointer, event, eventTarget, curEventTarget);\n\t                }\n\t            }\n\t            else {\n\t                if (!supportsPointerEvent && /mouse/.test(event.type)) {\n\t                    // ignore mouse events while touch interactions are active\n\t                    for (i = 0; i < interactions.length; i++) {\n\t                        if (!interactions[i].mouse && interactions[i].pointerIsDown) {\n\t                            return;\n\t                        }\n\t                    }\n\t\n\t                    // try to ignore mouse events that are simulated by the browser\n\t                    // after a touch event\n\t                    if (new Date().getTime() - prevTouchTime < 500) {\n\t                        return;\n\t                    }\n\t                }\n\t\n\t                interaction = getInteractionFromPointer(event, event.type, eventTarget);\n\t\n\t                if (!interaction) { return; }\n\t\n\t                interaction._updateEventTargets(eventTarget, curEventTarget);\n\t\n\t                interaction[method](event, event, eventTarget, curEventTarget);\n\t            }\n\t        });\n\t    }\n\t\n\t    function InteractEvent (interaction, event, action, phase, element, related) {\n\t        var client,\n\t            page,\n\t            target      = interaction.target,\n\t            snapStatus  = interaction.snapStatus,\n\t            restrictStatus  = interaction.restrictStatus,\n\t            pointers    = interaction.pointers,\n\t            deltaSource = (target && target.options || defaultOptions).deltaSource,\n\t            sourceX     = deltaSource + 'X',\n\t            sourceY     = deltaSource + 'Y',\n\t            options     = target? target.options: defaultOptions,\n\t            origin      = getOriginXY(target, element),\n\t            starting    = phase === 'start',\n\t            ending      = phase === 'end',\n\t            coords      = starting? interaction.startCoords : interaction.curCoords;\n\t\n\t        element = element || interaction.element;\n\t\n\t        page   = extend({}, coords.page);\n\t        client = extend({}, coords.client);\n\t\n\t        page.x -= origin.x;\n\t        page.y -= origin.y;\n\t\n\t        client.x -= origin.x;\n\t        client.y -= origin.y;\n\t\n\t        var relativePoints = options[action].snap && options[action].snap.relativePoints ;\n\t\n\t        if (checkSnap(target, action) && !(starting && relativePoints && relativePoints.length)) {\n\t            this.snap = {\n\t                range  : snapStatus.range,\n\t                locked : snapStatus.locked,\n\t                x      : snapStatus.snappedX,\n\t                y      : snapStatus.snappedY,\n\t                realX  : snapStatus.realX,\n\t                realY  : snapStatus.realY,\n\t                dx     : snapStatus.dx,\n\t                dy     : snapStatus.dy\n\t            };\n\t\n\t            if (snapStatus.locked) {\n\t                page.x += snapStatus.dx;\n\t                page.y += snapStatus.dy;\n\t                client.x += snapStatus.dx;\n\t                client.y += snapStatus.dy;\n\t            }\n\t        }\n\t\n\t        if (checkRestrict(target, action) && !(starting && options[action].restrict.elementRect) && restrictStatus.restricted) {\n\t            page.x += restrictStatus.dx;\n\t            page.y += restrictStatus.dy;\n\t            client.x += restrictStatus.dx;\n\t            client.y += restrictStatus.dy;\n\t\n\t            this.restrict = {\n\t                dx: restrictStatus.dx,\n\t                dy: restrictStatus.dy\n\t            };\n\t        }\n\t\n\t        this.pageX     = page.x;\n\t        this.pageY     = page.y;\n\t        this.clientX   = client.x;\n\t        this.clientY   = client.y;\n\t\n\t        this.x0        = interaction.startCoords.page.x - origin.x;\n\t        this.y0        = interaction.startCoords.page.y - origin.y;\n\t        this.clientX0  = interaction.startCoords.client.x - origin.x;\n\t        this.clientY0  = interaction.startCoords.client.y - origin.y;\n\t        this.ctrlKey   = event.ctrlKey;\n\t        this.altKey    = event.altKey;\n\t        this.shiftKey  = event.shiftKey;\n\t        this.metaKey   = event.metaKey;\n\t        this.button    = event.button;\n\t        this.buttons   = event.buttons;\n\t        this.target    = element;\n\t        this.t0        = interaction.downTimes[0];\n\t        this.type      = action + (phase || '');\n\t\n\t        this.interaction = interaction;\n\t        this.interactable = target;\n\t\n\t        var inertiaStatus = interaction.inertiaStatus;\n\t\n\t        if (inertiaStatus.active) {\n\t            this.detail = 'inertia';\n\t        }\n\t\n\t        if (related) {\n\t            this.relatedTarget = related;\n\t        }\n\t\n\t        // end event dx, dy is difference between start and end points\n\t        if (ending) {\n\t            if (deltaSource === 'client') {\n\t                this.dx = client.x - interaction.startCoords.client.x;\n\t                this.dy = client.y - interaction.startCoords.client.y;\n\t            }\n\t            else {\n\t                this.dx = page.x - interaction.startCoords.page.x;\n\t                this.dy = page.y - interaction.startCoords.page.y;\n\t            }\n\t        }\n\t        else if (starting) {\n\t            this.dx = 0;\n\t            this.dy = 0;\n\t        }\n\t        // copy properties from previousmove if starting inertia\n\t        else if (phase === 'inertiastart') {\n\t            this.dx = interaction.prevEvent.dx;\n\t            this.dy = interaction.prevEvent.dy;\n\t        }\n\t        else {\n\t            if (deltaSource === 'client') {\n\t                this.dx = client.x - interaction.prevEvent.clientX;\n\t                this.dy = client.y - interaction.prevEvent.clientY;\n\t            }\n\t            else {\n\t                this.dx = page.x - interaction.prevEvent.pageX;\n\t                this.dy = page.y - interaction.prevEvent.pageY;\n\t            }\n\t        }\n\t        if (interaction.prevEvent && interaction.prevEvent.detail === 'inertia'\n\t            && !inertiaStatus.active\n\t            && options[action].inertia && options[action].inertia.zeroResumeDelta) {\n\t\n\t            inertiaStatus.resumeDx += this.dx;\n\t            inertiaStatus.resumeDy += this.dy;\n\t\n\t            this.dx = this.dy = 0;\n\t        }\n\t\n\t        if (action === 'resize' && interaction.resizeAxes) {\n\t            if (options.resize.square) {\n\t                if (interaction.resizeAxes === 'y') {\n\t                    this.dx = this.dy;\n\t                }\n\t                else {\n\t                    this.dy = this.dx;\n\t                }\n\t                this.axes = 'xy';\n\t            }\n\t            else {\n\t                this.axes = interaction.resizeAxes;\n\t\n\t                if (interaction.resizeAxes === 'x') {\n\t                    this.dy = 0;\n\t                }\n\t                else if (interaction.resizeAxes === 'y') {\n\t                    this.dx = 0;\n\t                }\n\t            }\n\t        }\n\t        else if (action === 'gesture') {\n\t            this.touches = [pointers[0], pointers[1]];\n\t\n\t            if (starting) {\n\t                this.distance = touchDistance(pointers, deltaSource);\n\t                this.box      = touchBBox(pointers);\n\t                this.scale    = 1;\n\t                this.ds       = 0;\n\t                this.angle    = touchAngle(pointers, undefined, deltaSource);\n\t                this.da       = 0;\n\t            }\n\t            else if (ending || event instanceof InteractEvent) {\n\t                this.distance = interaction.prevEvent.distance;\n\t                this.box      = interaction.prevEvent.box;\n\t                this.scale    = interaction.prevEvent.scale;\n\t                this.ds       = this.scale - 1;\n\t                this.angle    = interaction.prevEvent.angle;\n\t                this.da       = this.angle - interaction.gesture.startAngle;\n\t            }\n\t            else {\n\t                this.distance = touchDistance(pointers, deltaSource);\n\t                this.box      = touchBBox(pointers);\n\t                this.scale    = this.distance / interaction.gesture.startDistance;\n\t                this.angle    = touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\t\n\t                this.ds = this.scale - interaction.gesture.prevScale;\n\t                this.da = this.angle - interaction.gesture.prevAngle;\n\t            }\n\t        }\n\t\n\t        if (starting) {\n\t            this.timeStamp = interaction.downTimes[0];\n\t            this.dt        = 0;\n\t            this.duration  = 0;\n\t            this.speed     = 0;\n\t            this.velocityX = 0;\n\t            this.velocityY = 0;\n\t        }\n\t        else if (phase === 'inertiastart') {\n\t            this.timeStamp = interaction.prevEvent.timeStamp;\n\t            this.dt        = interaction.prevEvent.dt;\n\t            this.duration  = interaction.prevEvent.duration;\n\t            this.speed     = interaction.prevEvent.speed;\n\t            this.velocityX = interaction.prevEvent.velocityX;\n\t            this.velocityY = interaction.prevEvent.velocityY;\n\t        }\n\t        else {\n\t            this.timeStamp = new Date().getTime();\n\t            this.dt        = this.timeStamp - interaction.prevEvent.timeStamp;\n\t            this.duration  = this.timeStamp - interaction.downTimes[0];\n\t\n\t            if (event instanceof InteractEvent) {\n\t                var dx = this[sourceX] - interaction.prevEvent[sourceX],\n\t                    dy = this[sourceY] - interaction.prevEvent[sourceY],\n\t                    dt = this.dt / 1000;\n\t\n\t                this.speed = hypot(dx, dy) / dt;\n\t                this.velocityX = dx / dt;\n\t                this.velocityY = dy / dt;\n\t            }\n\t            // if normal move or end event, use previous user event coords\n\t            else {\n\t                // speed and velocity in pixels per second\n\t                this.speed = interaction.pointerDelta[deltaSource].speed;\n\t                this.velocityX = interaction.pointerDelta[deltaSource].vx;\n\t                this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\t            }\n\t        }\n\t\n\t        if ((ending || phase === 'inertiastart')\n\t            && interaction.prevEvent.speed > 600 && this.timeStamp - interaction.prevEvent.timeStamp < 150) {\n\t\n\t            var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI,\n\t                overlap = 22.5;\n\t\n\t            if (angle < 0) {\n\t                angle += 360;\n\t            }\n\t\n\t            var left = 135 - overlap <= angle && angle < 225 + overlap,\n\t                up   = 225 - overlap <= angle && angle < 315 + overlap,\n\t\n\t                right = !left && (315 - overlap <= angle || angle <  45 + overlap),\n\t                down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\t\n\t            this.swipe = {\n\t                up   : up,\n\t                down : down,\n\t                left : left,\n\t                right: right,\n\t                angle: angle,\n\t                speed: interaction.prevEvent.speed,\n\t                velocity: {\n\t                    x: interaction.prevEvent.velocityX,\n\t                    y: interaction.prevEvent.velocityY\n\t                }\n\t            };\n\t        }\n\t    }\n\t\n\t    InteractEvent.prototype = {\n\t        preventDefault: blank,\n\t        stopImmediatePropagation: function () {\n\t            this.immediatePropagationStopped = this.propagationStopped = true;\n\t        },\n\t        stopPropagation: function () {\n\t            this.propagationStopped = true;\n\t        }\n\t    };\n\t\n\t    function preventOriginalDefault () {\n\t        this.originalEvent.preventDefault();\n\t    }\n\t\n\t    function getActionCursor (action) {\n\t        var cursor = '';\n\t\n\t        if (action.name === 'drag') {\n\t            cursor =  actionCursors.drag;\n\t        }\n\t        if (action.name === 'resize') {\n\t            if (action.axis) {\n\t                cursor =  actionCursors[action.name + action.axis];\n\t            }\n\t            else if (action.edges) {\n\t                var cursorKey = 'resize',\n\t                    edgeNames = ['top', 'bottom', 'left', 'right'];\n\t\n\t                for (var i = 0; i < 4; i++) {\n\t                    if (action.edges[edgeNames[i]]) {\n\t                        cursorKey += edgeNames[i];\n\t                    }\n\t                }\n\t\n\t                cursor = actionCursors[cursorKey];\n\t            }\n\t        }\n\t\n\t        return cursor;\n\t    }\n\t\n\t    function checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n\t        // false, '', undefined, null\n\t        if (!value) { return false; }\n\t\n\t        // true value, use pointer coords and element rect\n\t        if (value === true) {\n\t            // if dimensions are negative, \"switch\" edges\n\t            var width = isNumber(rect.width)? rect.width : rect.right - rect.left,\n\t                height = isNumber(rect.height)? rect.height : rect.bottom - rect.top;\n\t\n\t            if (width < 0) {\n\t                if      (name === 'left' ) { name = 'right'; }\n\t                else if (name === 'right') { name = 'left' ; }\n\t            }\n\t            if (height < 0) {\n\t                if      (name === 'top'   ) { name = 'bottom'; }\n\t                else if (name === 'bottom') { name = 'top'   ; }\n\t            }\n\t\n\t            if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n\t            if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\t\n\t            if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n\t            if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n\t        }\n\t\n\t        // the remaining checks require an element\n\t        if (!isElement(element)) { return false; }\n\t\n\t        return isElement(value)\n\t                    // the value is an element to use as a resize handle\n\t                    ? value === element\n\t                    // otherwise check if element matches value as selector\n\t                    : matchesUpTo(element, value, interactableElement);\n\t    }\n\t\n\t    function defaultActionChecker (pointer, interaction, element) {\n\t        var rect = this.getRect(element),\n\t            shouldResize = false,\n\t            action = null,\n\t            resizeAxes = null,\n\t            resizeEdges,\n\t            page = extend({}, interaction.curCoords.page),\n\t            options = this.options;\n\t\n\t        if (!rect) { return null; }\n\t\n\t        if (actionIsEnabled.resize && options.resize.enabled) {\n\t            var resizeOptions = options.resize;\n\t\n\t            resizeEdges = {\n\t                left: false, right: false, top: false, bottom: false\n\t            };\n\t\n\t            // if using resize.edges\n\t            if (isObject(resizeOptions.edges)) {\n\t                for (var edge in resizeEdges) {\n\t                    resizeEdges[edge] = checkResizeEdge(edge,\n\t                                                        resizeOptions.edges[edge],\n\t                                                        page,\n\t                                                        interaction._eventTarget,\n\t                                                        element,\n\t                                                        rect,\n\t                                                        resizeOptions.margin || margin);\n\t                }\n\t\n\t                resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n\t                resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\t\n\t                shouldResize = resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom;\n\t            }\n\t            else {\n\t                var right  = options.resize.axis !== 'y' && page.x > (rect.right  - margin),\n\t                    bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - margin);\n\t\n\t                shouldResize = right || bottom;\n\t                resizeAxes = (right? 'x' : '') + (bottom? 'y' : '');\n\t            }\n\t        }\n\t\n\t        action = shouldResize\n\t            ? 'resize'\n\t            : actionIsEnabled.drag && options.drag.enabled\n\t                ? 'drag'\n\t                : null;\n\t\n\t        if (actionIsEnabled.gesture\n\t            && interaction.pointerIds.length >=2\n\t            && !(interaction.dragging || interaction.resizing)) {\n\t            action = 'gesture';\n\t        }\n\t\n\t        if (action) {\n\t            return {\n\t                name: action,\n\t                axis: resizeAxes,\n\t                edges: resizeEdges\n\t            };\n\t        }\n\t\n\t        return null;\n\t    }\n\t\n\t    // Check if action is enabled globally and the current target supports it\n\t    // If so, return the validated action. Otherwise, return null\n\t    function validateAction (action, interactable) {\n\t        if (!isObject(action)) { return null; }\n\t\n\t        var actionName = action.name,\n\t            options = interactable.options;\n\t\n\t        if ((  (actionName  === 'resize'   && options.resize.enabled )\n\t            || (actionName      === 'drag'     && options.drag.enabled  )\n\t            || (actionName      === 'gesture'  && options.gesture.enabled))\n\t            && actionIsEnabled[actionName]) {\n\t\n\t            if (actionName === 'resize' || actionName === 'resizeyx') {\n\t                actionName = 'resizexy';\n\t            }\n\t\n\t            return action;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    var listeners = {},\n\t        interactionListeners = [\n\t            'dragStart', 'dragMove', 'resizeStart', 'resizeMove', 'gestureStart', 'gestureMove',\n\t            'pointerOver', 'pointerOut', 'pointerHover', 'selectorDown',\n\t            'pointerDown', 'pointerMove', 'pointerUp', 'pointerCancel', 'pointerEnd',\n\t            'addPointer', 'removePointer', 'recordPointer', 'autoScrollMove'\n\t        ];\n\t\n\t    for (var i = 0, len = interactionListeners.length; i < len; i++) {\n\t        var name = interactionListeners[i];\n\t\n\t        listeners[name] = doOnInteractions(name);\n\t    }\n\t\n\t    // bound to the interactable context when a DOM event\n\t    // listener is added to a selector interactable\n\t    function delegateListener (event, useCapture) {\n\t        var fakeEvent = {},\n\t            delegated = delegatedEvents[event.type],\n\t            eventTarget = getActualElement(event.path\n\t                                           ? event.path[0]\n\t                                           : event.target),\n\t            element = eventTarget;\n\t\n\t        useCapture = useCapture? true: false;\n\t\n\t        // duplicate the event so that currentTarget can be changed\n\t        for (var prop in event) {\n\t            fakeEvent[prop] = event[prop];\n\t        }\n\t\n\t        fakeEvent.originalEvent = event;\n\t        fakeEvent.preventDefault = preventOriginalDefault;\n\t\n\t        // climb up document tree looking for selector matches\n\t        while (isElement(element)) {\n\t            for (var i = 0; i < delegated.selectors.length; i++) {\n\t                var selector = delegated.selectors[i],\n\t                    context = delegated.contexts[i];\n\t\n\t                if (matchesSelector(element, selector)\n\t                    && nodeContains(context, eventTarget)\n\t                    && nodeContains(context, element)) {\n\t\n\t                    var listeners = delegated.listeners[i];\n\t\n\t                    fakeEvent.currentTarget = element;\n\t\n\t                    for (var j = 0; j < listeners.length; j++) {\n\t                        if (listeners[j][1] === useCapture) {\n\t                            listeners[j][0](fakeEvent);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            element = parentElement(element);\n\t        }\n\t    }\n\t\n\t    function delegateUseCapture (event) {\n\t        return delegateListener.call(this, event, true);\n\t    }\n\t\n\t    interactables.indexOfElement = function indexOfElement (element, context) {\n\t        context = context || document;\n\t\n\t        for (var i = 0; i < this.length; i++) {\n\t            var interactable = this[i];\n\t\n\t            if ((interactable.selector === element\n\t                && (interactable._context === context))\n\t                || (!interactable.selector && interactable._element === element)) {\n\t\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t\n\t    interactables.get = function interactableGet (element, options) {\n\t        return this[this.indexOfElement(element, options && options.context)];\n\t    };\n\t\n\t    interactables.forEachSelector = function (callback) {\n\t        for (var i = 0; i < this.length; i++) {\n\t            var interactable = this[i];\n\t\n\t            if (!interactable.selector) {\n\t                continue;\n\t            }\n\t\n\t            var ret = callback(interactable, interactable.selector, interactable._context, i, this);\n\t\n\t            if (ret !== undefined) {\n\t                return ret;\n\t            }\n\t        }\n\t    };\n\t\n\t    /*\\\n\t     * interact\n\t     [ method ]\n\t     *\n\t     * The methods of this variable can be used to set elements as\n\t     * interactables and also to change various default settings.\n\t     *\n\t     * Calling it as a function and passing an element or a valid CSS selector\n\t     * string returns an Interactable object which has various methods to\n\t     * configure it.\n\t     *\n\t     - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n\t     = (object) An @Interactable\n\t     *\n\t     > Usage\n\t     | interact(document.getElementById('draggable')).draggable(true);\n\t     |\n\t     | var rectables = interact('rect');\n\t     | rectables\n\t     |     .gesturable(true)\n\t     |     .on('gesturemove', function (event) {\n\t     |         // something cool...\n\t     |     })\n\t     |     .autoScroll(true);\n\t    \\*/\n\t    function interact (element, options) {\n\t        return interactables.get(element, options) || new Interactable(element, options);\n\t    }\n\t\n\t    /*\\\n\t     * Interactable\n\t     [ property ]\n\t     **\n\t     * Object type returned by @interact\n\t    \\*/\n\t    function Interactable (element, options) {\n\t        this._element = element;\n\t        this._iEvents = this._iEvents || {};\n\t\n\t        var _window;\n\t\n\t        if (trySelector(element)) {\n\t            this.selector = element;\n\t\n\t            var context = options && options.context;\n\t\n\t            _window = context? getWindow(context) : window;\n\t\n\t            if (context && (_window.Node\n\t                    ? context instanceof _window.Node\n\t                    : (isElement(context) || context === _window.document))) {\n\t\n\t                this._context = context;\n\t            }\n\t        }\n\t        else {\n\t            _window = getWindow(element);\n\t\n\t            if (isElement(element, _window)) {\n\t\n\t                if (supportsPointerEvent) {\n\t                    events.add(this._element, pEventTypes.down, listeners.pointerDown );\n\t                    events.add(this._element, pEventTypes.move, listeners.pointerHover);\n\t                }\n\t                else {\n\t                    events.add(this._element, 'mousedown' , listeners.pointerDown );\n\t                    events.add(this._element, 'mousemove' , listeners.pointerHover);\n\t                    events.add(this._element, 'touchstart', listeners.pointerDown );\n\t                    events.add(this._element, 'touchmove' , listeners.pointerHover);\n\t                }\n\t            }\n\t        }\n\t\n\t        this._doc = _window.document;\n\t\n\t        if (!contains(documents, this._doc)) {\n\t            listenToDocument(this._doc);\n\t        }\n\t\n\t        interactables.push(this);\n\t\n\t        this.set(options);\n\t    }\n\t\n\t    Interactable.prototype = {\n\t        setOnEvents: function (action, phases) {\n\t            if (action === 'drop') {\n\t                if (isFunction(phases.ondrop)          ) { this.ondrop           = phases.ondrop          ; }\n\t                if (isFunction(phases.ondropactivate)  ) { this.ondropactivate   = phases.ondropactivate  ; }\n\t                if (isFunction(phases.ondropdeactivate)) { this.ondropdeactivate = phases.ondropdeactivate; }\n\t                if (isFunction(phases.ondragenter)     ) { this.ondragenter      = phases.ondragenter     ; }\n\t                if (isFunction(phases.ondragleave)     ) { this.ondragleave      = phases.ondragleave     ; }\n\t                if (isFunction(phases.ondropmove)      ) { this.ondropmove       = phases.ondropmove      ; }\n\t            }\n\t            else {\n\t                action = 'on' + action;\n\t\n\t                if (isFunction(phases.onstart)       ) { this[action + 'start'         ] = phases.onstart         ; }\n\t                if (isFunction(phases.onmove)        ) { this[action + 'move'          ] = phases.onmove          ; }\n\t                if (isFunction(phases.onend)         ) { this[action + 'end'           ] = phases.onend           ; }\n\t                if (isFunction(phases.oninertiastart)) { this[action + 'inertiastart'  ] = phases.oninertiastart  ; }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.draggable\n\t         [ method ]\n\t         *\n\t         * Gets or sets whether drag actions can be performed on the\n\t         * Interactable\n\t         *\n\t         = (boolean) Indicates if this can be the target of drag events\n\t         | var isDraggable = interact('ul li').draggable();\n\t         * or\n\t         - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n\t         = (object) This Interactable\n\t         | interact(element).draggable({\n\t         |     onstart: function (event) {},\n\t         |     onmove : function (event) {},\n\t         |     onend  : function (event) {},\n\t         |\n\t         |     // the axis in which the first movement must be\n\t         |     // for the drag sequence to start\n\t         |     // 'xy' by default - any direction\n\t         |     axis: 'x' || 'y' || 'xy',\n\t         |\n\t         |     // max number of drags that can happen concurrently\n\t         |     // with elements of this Interactable. Infinity by default\n\t         |     max: Infinity,\n\t         |\n\t         |     // max number of drags that can target the same element+Interactable\n\t         |     // 1 by default\n\t         |     maxPerElement: 2\n\t         | });\n\t        \\*/\n\t        draggable: function (options) {\n\t            if (isObject(options)) {\n\t                this.options.drag.enabled = options.enabled === false? false: true;\n\t                this.setPerAction('drag', options);\n\t                this.setOnEvents('drag', options);\n\t\n\t                if (/^x$|^y$|^xy$/.test(options.axis)) {\n\t                    this.options.drag.axis = options.axis;\n\t                }\n\t                else if (options.axis === null) {\n\t                    delete this.options.drag.axis;\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            if (isBool(options)) {\n\t                this.options.drag.enabled = options;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.drag;\n\t        },\n\t\n\t        setPerAction: function (action, options) {\n\t            // for all the default per-action options\n\t            for (var option in options) {\n\t                // if this option exists for this action\n\t                if (option in defaultOptions[action]) {\n\t                    // if the option in the options arg is an object value\n\t                    if (isObject(options[option])) {\n\t                        // duplicate the object\n\t                        this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\t\n\t                        if (isObject(defaultOptions.perAction[option]) && 'enabled' in defaultOptions.perAction[option]) {\n\t                            this.options[action][option].enabled = options[option].enabled === false? false : true;\n\t                        }\n\t                    }\n\t                    else if (isBool(options[option]) && isObject(defaultOptions.perAction[option])) {\n\t                        this.options[action][option].enabled = options[option];\n\t                    }\n\t                    else if (options[option] !== undefined) {\n\t                        // or if it's not undefined, do a plain assignment\n\t                        this.options[action][option] = options[option];\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.dropzone\n\t         [ method ]\n\t         *\n\t         * Returns or sets whether elements can be dropped onto this\n\t         * Interactable to trigger drop events\n\t         *\n\t         * Dropzones can receive the following events:\n\t         *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n\t         *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n\t         *  - `dragmove` when a draggable that has entered the dropzone is moved\n\t         *  - `drop` when a draggable is dropped into this dropzone\n\t         *\n\t         *  Use the `accept` option to allow only elements that match the given CSS selector or element.\n\t         *\n\t         *  Use the `overlap` option to set how drops are checked for. The allowed values are:\n\t         *   - `'pointer'`, the pointer must be over the dropzone (default)\n\t         *   - `'center'`, the draggable element's center must be over the dropzone\n\t         *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n\t         *       e.g. `0.5` for drop to happen when half of the area of the\n\t         *       draggable is over the dropzone\n\t         *\n\t         - options (boolean | object | null) #optional The new value to be set.\n\t         | interact('.drop').dropzone({\n\t         |   accept: '.can-drop' || document.getElementById('single-drop'),\n\t         |   overlap: 'pointer' || 'center' || zeroToOne\n\t         | }\n\t         = (boolean | object) The current setting or this Interactable\n\t        \\*/\n\t        dropzone: function (options) {\n\t            if (isObject(options)) {\n\t                this.options.drop.enabled = options.enabled === false? false: true;\n\t                this.setOnEvents('drop', options);\n\t\n\t                if (/^(pointer|center)$/.test(options.overlap)) {\n\t                    this.options.drop.overlap = options.overlap;\n\t                }\n\t                else if (isNumber(options.overlap)) {\n\t                    this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n\t                }\n\t                if ('accept' in options) {\n\t                  this.options.drop.accept = options.accept;\n\t                }\n\t                if ('checker' in options) {\n\t                  this.options.drop.checker = options.checker;\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            if (isBool(options)) {\n\t                this.options.drop.enabled = options;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.drop;\n\t        },\n\t\n\t        dropCheck: function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n\t            var dropped = false;\n\t\n\t            // if the dropzone has no rect (eg. display: none)\n\t            // call the custom dropChecker or just return false\n\t            if (!(rect = rect || this.getRect(dropElement))) {\n\t                return (this.options.drop.checker\n\t                    ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n\t                    : false);\n\t            }\n\t\n\t            var dropOverlap = this.options.drop.overlap;\n\t\n\t            if (dropOverlap === 'pointer') {\n\t                var page = getPageXY(dragEvent),\n\t                    origin = getOriginXY(draggable, draggableElement),\n\t                    horizontal,\n\t                    vertical;\n\t\n\t                page.x += origin.x;\n\t                page.y += origin.y;\n\t\n\t                horizontal = (page.x > rect.left) && (page.x < rect.right);\n\t                vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\t\n\t                dropped = horizontal && vertical;\n\t            }\n\t\n\t            var dragRect = draggable.getRect(draggableElement);\n\t\n\t            if (dropOverlap === 'center') {\n\t                var cx = dragRect.left + dragRect.width  / 2,\n\t                    cy = dragRect.top  + dragRect.height / 2;\n\t\n\t                dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n\t            }\n\t\n\t            if (isNumber(dropOverlap)) {\n\t                var overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n\t                                  * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top ))),\n\t                    overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\t\n\t                dropped = overlapRatio >= dropOverlap;\n\t            }\n\t\n\t            if (this.options.drop.checker) {\n\t                dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n\t            }\n\t\n\t            return dropped;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.dropChecker\n\t         [ method ]\n\t         *\n\t         * DEPRECATED. Use interactable.dropzone({ checker: function... }) instead.\n\t         *\n\t         * Gets or sets the function used to check if a dragged element is\n\t         * over this Interactable.\n\t         *\n\t         - checker (function) #optional The function that will be called when checking for a drop\n\t         = (Function | Interactable) The checker function or this Interactable\n\t         *\n\t         * The checker function takes the following arguments:\n\t         *\n\t         - dragEvent (InteractEvent) The related dragmove or dragend event\n\t         - event (TouchEvent | PointerEvent | MouseEvent) The user move/up/end Event related to the dragEvent\n\t         - dropped (boolean) The value from the default drop checker\n\t         - dropzone (Interactable) The dropzone interactable\n\t         - dropElement (Element) The dropzone element\n\t         - draggable (Interactable) The Interactable being dragged\n\t         - draggableElement (Element) The actual element that's being dragged\n\t         *\n\t         > Usage:\n\t         | interact(target)\n\t         | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n\t         |                       event,             // TouchEvent/PointerEvent/MouseEvent\n\t         |                       dropped,           // bool result of the default checker\n\t         |                       dropzone,          // dropzone Interactable\n\t         |                       dropElement,       // dropzone elemnt\n\t         |                       draggable,         // draggable Interactable\n\t         |                       draggableElement) {// draggable element\n\t         |\n\t         |   return dropped && event.target.hasAttribute('allow-drop');\n\t         | }\n\t        \\*/\n\t        dropChecker: function (checker) {\n\t            if (isFunction(checker)) {\n\t                this.options.drop.checker = checker;\n\t\n\t                return this;\n\t            }\n\t            if (checker === null) {\n\t                delete this.options.getRect;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.drop.checker;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.accept\n\t         [ method ]\n\t         *\n\t         * Deprecated. add an `accept` property to the options object passed to\n\t         * @Interactable.dropzone instead.\n\t         *\n\t         * Gets or sets the Element or CSS selector match that this\n\t         * Interactable accepts if it is a dropzone.\n\t         *\n\t         - newValue (Element | string | null) #optional\n\t         * If it is an Element, then only that element can be dropped into this dropzone.\n\t         * If it is a string, the element being dragged must match it as a selector.\n\t         * If it is null, the accept options is cleared - it accepts any element.\n\t         *\n\t         = (string | Element | null | Interactable) The current accept option if given `undefined` or this Interactable\n\t        \\*/\n\t        accept: function (newValue) {\n\t            if (isElement(newValue)) {\n\t                this.options.drop.accept = newValue;\n\t\n\t                return this;\n\t            }\n\t\n\t            // test if it is a valid CSS selector\n\t            if (trySelector(newValue)) {\n\t                this.options.drop.accept = newValue;\n\t\n\t                return this;\n\t            }\n\t\n\t            if (newValue === null) {\n\t                delete this.options.drop.accept;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.drop.accept;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.resizable\n\t         [ method ]\n\t         *\n\t         * Gets or sets whether resize actions can be performed on the\n\t         * Interactable\n\t         *\n\t         = (boolean) Indicates if this can be the target of resize elements\n\t         | var isResizeable = interact('input[type=text]').resizable();\n\t         * or\n\t         - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n\t         = (object) This Interactable\n\t         | interact(element).resizable({\n\t         |     onstart: function (event) {},\n\t         |     onmove : function (event) {},\n\t         |     onend  : function (event) {},\n\t         |\n\t         |     edges: {\n\t         |       top   : true,       // Use pointer coords to check for resize.\n\t         |       left  : false,      // Disable resizing from left edge.\n\t         |       bottom: '.resize-s',// Resize if pointer target matches selector\n\t         |       right : handleEl    // Resize if pointer target is the given Element\n\t         |     },\n\t         |\n\t         |     // Width and height can be adjusted independently. When `true`, width and\n\t         |     // height are adjusted at a 1:1 ratio.\n\t         |     square: false,\n\t         |\n\t         |     // Width and height can be adjusted independently. When `true`, width and\n\t         |     // height maintain the aspect ratio they had when resizing started.\n\t         |     preserveAspectRatio: false,\n\t         |\n\t         |     // a value of 'none' will limit the resize rect to a minimum of 0x0\n\t         |     // 'negate' will allow the rect to have negative width/height\n\t         |     // 'reposition' will keep the width/height positive by swapping\n\t         |     // the top and bottom edges and/or swapping the left and right edges\n\t         |     invert: 'none' || 'negate' || 'reposition'\n\t         |\n\t         |     // limit multiple resizes.\n\t         |     // See the explanation in the @Interactable.draggable example\n\t         |     max: Infinity,\n\t         |     maxPerElement: 1,\n\t         | });\n\t        \\*/\n\t        resizable: function (options) {\n\t            if (isObject(options)) {\n\t                this.options.resize.enabled = options.enabled === false? false: true;\n\t                this.setPerAction('resize', options);\n\t                this.setOnEvents('resize', options);\n\t\n\t                if (/^x$|^y$|^xy$/.test(options.axis)) {\n\t                    this.options.resize.axis = options.axis;\n\t                }\n\t                else if (options.axis === null) {\n\t                    this.options.resize.axis = defaultOptions.resize.axis;\n\t                }\n\t\n\t                if (isBool(options.preserveAspectRatio)) {\n\t                    this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n\t                }\n\t                else if (isBool(options.square)) {\n\t                    this.options.resize.square = options.square;\n\t                }\n\t\n\t                return this;\n\t            }\n\t            if (isBool(options)) {\n\t                this.options.resize.enabled = options;\n\t\n\t                return this;\n\t            }\n\t            return this.options.resize;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.squareResize\n\t         [ method ]\n\t         *\n\t         * Deprecated. Add a `square: true || false` property to @Interactable.resizable instead\n\t         *\n\t         * Gets or sets whether resizing is forced 1:1 aspect\n\t         *\n\t         = (boolean) Current setting\n\t         *\n\t         * or\n\t         *\n\t         - newValue (boolean) #optional\n\t         = (object) this Interactable\n\t        \\*/\n\t        squareResize: function (newValue) {\n\t            if (isBool(newValue)) {\n\t                this.options.resize.square = newValue;\n\t\n\t                return this;\n\t            }\n\t\n\t            if (newValue === null) {\n\t                delete this.options.resize.square;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.resize.square;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.gesturable\n\t         [ method ]\n\t         *\n\t         * Gets or sets whether multitouch gestures can be performed on the\n\t         * Interactable's element\n\t         *\n\t         = (boolean) Indicates if this can be the target of gesture events\n\t         | var isGestureable = interact(element).gesturable();\n\t         * or\n\t         - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n\t         = (object) this Interactable\n\t         | interact(element).gesturable({\n\t         |     onstart: function (event) {},\n\t         |     onmove : function (event) {},\n\t         |     onend  : function (event) {},\n\t         |\n\t         |     // limit multiple gestures.\n\t         |     // See the explanation in @Interactable.draggable example\n\t         |     max: Infinity,\n\t         |     maxPerElement: 1,\n\t         | });\n\t        \\*/\n\t        gesturable: function (options) {\n\t            if (isObject(options)) {\n\t                this.options.gesture.enabled = options.enabled === false? false: true;\n\t                this.setPerAction('gesture', options);\n\t                this.setOnEvents('gesture', options);\n\t\n\t                return this;\n\t            }\n\t\n\t            if (isBool(options)) {\n\t                this.options.gesture.enabled = options;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.gesture;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.autoScroll\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add an `autoscroll` property to the options object\n\t         * passed to @Interactable.draggable or @Interactable.resizable instead.\n\t         *\n\t         * Returns or sets whether dragging and resizing near the edges of the\n\t         * window/container trigger autoScroll for this Interactable\n\t         *\n\t         = (object) Object with autoScroll properties\n\t         *\n\t         * or\n\t         *\n\t         - options (object | boolean) #optional\n\t         * options can be:\n\t         * - an object with margin, distance and interval properties,\n\t         * - true or false to enable or disable autoScroll or\n\t         = (Interactable) this Interactable\n\t        \\*/\n\t        autoScroll: function (options) {\n\t            if (isObject(options)) {\n\t                options = extend({ actions: ['drag', 'resize']}, options);\n\t            }\n\t            else if (isBool(options)) {\n\t                options = { actions: ['drag', 'resize'], enabled: options };\n\t            }\n\t\n\t            return this.setOptions('autoScroll', options);\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.snap\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add a `snap` property to the options object passed\n\t         * to @Interactable.draggable or @Interactable.resizable instead.\n\t         *\n\t         * Returns or sets if and how action coordinates are snapped. By\n\t         * default, snapping is relative to the pointer coordinates. You can\n\t         * change this by setting the\n\t         * [`elementOrigin`](https://github.com/taye/interact.js/pull/72).\n\t         **\n\t         = (boolean | object) `false` if snap is disabled; object with snap properties if snap is enabled\n\t         **\n\t         * or\n\t         **\n\t         - options (object | boolean | null) #optional\n\t         = (Interactable) this Interactable\n\t         > Usage\n\t         | interact(document.querySelector('#thing')).snap({\n\t         |     targets: [\n\t         |         // snap to this specific point\n\t         |         {\n\t         |             x: 100,\n\t         |             y: 100,\n\t         |             range: 25\n\t         |         },\n\t         |         // give this function the x and y page coords and snap to the object returned\n\t         |         function (x, y) {\n\t         |             return {\n\t         |                 x: x,\n\t         |                 y: (75 + 50 * Math.sin(x * 0.04)),\n\t         |                 range: 40\n\t         |             };\n\t         |         },\n\t         |         // create a function that snaps to a grid\n\t         |         interact.createSnapGrid({\n\t         |             x: 50,\n\t         |             y: 50,\n\t         |             range: 10,              // optional\n\t         |             offset: { x: 5, y: 10 } // optional\n\t         |         })\n\t         |     ],\n\t         |     // do not snap during normal movement.\n\t         |     // Instead, trigger only one snapped move event\n\t         |     // immediately before the end event.\n\t         |     endOnly: true,\n\t         |\n\t         |     relativePoints: [\n\t         |         { x: 0, y: 0 },  // snap relative to the top left of the element\n\t         |         { x: 1, y: 1 },  // and also to the bottom right\n\t         |     ],  \n\t         |\n\t         |     // offset the snap target coordinates\n\t         |     // can be an object with x/y or 'startCoords'\n\t         |     offset: { x: 50, y: 50 }\n\t         |   }\n\t         | });\n\t        \\*/\n\t        snap: function (options) {\n\t            var ret = this.setOptions('snap', options);\n\t\n\t            if (ret === this) { return this; }\n\t\n\t            return ret.drag;\n\t        },\n\t\n\t        setOptions: function (option, options) {\n\t            var actions = options && isArray(options.actions)\n\t                    ? options.actions\n\t                    : ['drag'];\n\t\n\t            var i;\n\t\n\t            if (isObject(options) || isBool(options)) {\n\t                for (i = 0; i < actions.length; i++) {\n\t                    var action = /resize/.test(actions[i])? 'resize' : actions[i];\n\t\n\t                    if (!isObject(this.options[action])) { continue; }\n\t\n\t                    var thisOption = this.options[action][option];\n\t\n\t                    if (isObject(options)) {\n\t                        extend(thisOption, options);\n\t                        thisOption.enabled = options.enabled === false? false: true;\n\t\n\t                        if (option === 'snap') {\n\t                            if (thisOption.mode === 'grid') {\n\t                                thisOption.targets = [\n\t                                    interact.createSnapGrid(extend({\n\t                                        offset: thisOption.gridOffset || { x: 0, y: 0 }\n\t                                    }, thisOption.grid || {}))\n\t                                ];\n\t                            }\n\t                            else if (thisOption.mode === 'anchor') {\n\t                                thisOption.targets = thisOption.anchors;\n\t                            }\n\t                            else if (thisOption.mode === 'path') {\n\t                                thisOption.targets = thisOption.paths;\n\t                            }\n\t\n\t                            if ('elementOrigin' in options) {\n\t                                thisOption.relativePoints = [options.elementOrigin];\n\t                            }\n\t                        }\n\t                    }\n\t                    else if (isBool(options)) {\n\t                        thisOption.enabled = options;\n\t                    }\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            var ret = {},\n\t                allActions = ['drag', 'resize', 'gesture'];\n\t\n\t            for (i = 0; i < allActions.length; i++) {\n\t                if (option in defaultOptions[allActions[i]]) {\n\t                    ret[allActions[i]] = this.options[allActions[i]][option];\n\t                }\n\t            }\n\t\n\t            return ret;\n\t        },\n\t\n\t\n\t        /*\\\n\t         * Interactable.inertia\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add an `inertia` property to the options object passed\n\t         * to @Interactable.draggable or @Interactable.resizable instead.\n\t         *\n\t         * Returns or sets if and how events continue to run after the pointer is released\n\t         **\n\t         = (boolean | object) `false` if inertia is disabled; `object` with inertia properties if inertia is enabled\n\t         **\n\t         * or\n\t         **\n\t         - options (object | boolean | null) #optional\n\t         = (Interactable) this Interactable\n\t         > Usage\n\t         | // enable and use default settings\n\t         | interact(element).inertia(true);\n\t         |\n\t         | // enable and use custom settings\n\t         | interact(element).inertia({\n\t         |     // value greater than 0\n\t         |     // high values slow the object down more quickly\n\t         |     resistance     : 16,\n\t         |\n\t         |     // the minimum launch speed (pixels per second) that results in inertia start\n\t         |     minSpeed       : 200,\n\t         |\n\t         |     // inertia will stop when the object slows down to this speed\n\t         |     endSpeed       : 20,\n\t         |\n\t         |     // boolean; should actions be resumed when the pointer goes down during inertia\n\t         |     allowResume    : true,\n\t         |\n\t         |     // boolean; should the jump when resuming from inertia be ignored in event.dx/dy\n\t         |     zeroResumeDelta: false,\n\t         |\n\t         |     // if snap/restrict are set to be endOnly and inertia is enabled, releasing\n\t         |     // the pointer without triggering inertia will animate from the release\n\t         |     // point to the snaped/restricted point in the given amount of time (ms)\n\t         |     smoothEndDuration: 300,\n\t         |\n\t         |     // an array of action types that can have inertia (no gesture)\n\t         |     actions        : ['drag', 'resize']\n\t         | });\n\t         |\n\t         | // reset custom settings and use all defaults\n\t         | interact(element).inertia(null);\n\t        \\*/\n\t        inertia: function (options) {\n\t            var ret = this.setOptions('inertia', options);\n\t\n\t            if (ret === this) { return this; }\n\t\n\t            return ret.drag;\n\t        },\n\t\n\t        getAction: function (pointer, event, interaction, element) {\n\t            var action = this.defaultActionChecker(pointer, interaction, element);\n\t\n\t            if (this.options.actionChecker) {\n\t                return this.options.actionChecker(pointer, event, action, this, element, interaction);\n\t            }\n\t\n\t            return action;\n\t        },\n\t\n\t        defaultActionChecker: defaultActionChecker,\n\t\n\t        /*\\\n\t         * Interactable.actionChecker\n\t         [ method ]\n\t         *\n\t         * Gets or sets the function used to check action to be performed on\n\t         * pointerDown\n\t         *\n\t         - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n\t         = (Function | Interactable) The checker function or this Interactable\n\t         *\n\t         | interact('.resize-drag')\n\t         |   .resizable(true)\n\t         |   .draggable(true)\n\t         |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n\t         |\n\t         |   if (interact.matchesSelector(event.target, '.drag-handle') {\n\t         |     // force drag with handle target\n\t         |     action.name = drag;\n\t         |   }\n\t         |   else {\n\t         |     // resize from the top and right edges\n\t         |     action.name  = 'resize';\n\t         |     action.edges = { top: true, right: true };\n\t         |   }\n\t         |\n\t         |   return action;\n\t         | });\n\t        \\*/\n\t        actionChecker: function (checker) {\n\t            if (isFunction(checker)) {\n\t                this.options.actionChecker = checker;\n\t\n\t                return this;\n\t            }\n\t\n\t            if (checker === null) {\n\t                delete this.options.actionChecker;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.actionChecker;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.getRect\n\t         [ method ]\n\t         *\n\t         * The default function to get an Interactables bounding rect. Can be\n\t         * overridden using @Interactable.rectChecker.\n\t         *\n\t         - element (Element) #optional The element to measure.\n\t         = (object) The object's bounding rectangle.\n\t         o {\n\t         o     top   : 0,\n\t         o     left  : 0,\n\t         o     bottom: 0,\n\t         o     right : 0,\n\t         o     width : 0,\n\t         o     height: 0\n\t         o }\n\t        \\*/\n\t        getRect: function rectCheck (element) {\n\t            element = element || this._element;\n\t\n\t            if (this.selector && !(isElement(element))) {\n\t                element = this._context.querySelector(this.selector);\n\t            }\n\t\n\t            return getElementRect(element);\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.rectChecker\n\t         [ method ]\n\t         *\n\t         * Returns or sets the function used to calculate the interactable's\n\t         * element's rectangle\n\t         *\n\t         - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n\t         = (function | object) The checker function or this Interactable\n\t        \\*/\n\t        rectChecker: function (checker) {\n\t            if (isFunction(checker)) {\n\t                this.getRect = checker;\n\t\n\t                return this;\n\t            }\n\t\n\t            if (checker === null) {\n\t                delete this.options.getRect;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.getRect;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.styleCursor\n\t         [ method ]\n\t         *\n\t         * Returns or sets whether the action that would be performed when the\n\t         * mouse on the element are checked on `mousemove` so that the cursor\n\t         * may be styled appropriately\n\t         *\n\t         - newValue (boolean) #optional\n\t         = (boolean | Interactable) The current setting or this Interactable\n\t        \\*/\n\t        styleCursor: function (newValue) {\n\t            if (isBool(newValue)) {\n\t                this.options.styleCursor = newValue;\n\t\n\t                return this;\n\t            }\n\t\n\t            if (newValue === null) {\n\t                delete this.options.styleCursor;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.styleCursor;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.preventDefault\n\t         [ method ]\n\t         *\n\t         * Returns or sets whether to prevent the browser's default behaviour\n\t         * in response to pointer events. Can be set to:\n\t         *  - `'always'` to always prevent\n\t         *  - `'never'` to never prevent\n\t         *  - `'auto'` to let interact.js try to determine what would be best\n\t         *\n\t         - newValue (string) #optional `true`, `false` or `'auto'`\n\t         = (string | Interactable) The current setting or this Interactable\n\t        \\*/\n\t        preventDefault: function (newValue) {\n\t            if (/^(always|never|auto)$/.test(newValue)) {\n\t                this.options.preventDefault = newValue;\n\t                return this;\n\t            }\n\t\n\t            if (isBool(newValue)) {\n\t                this.options.preventDefault = newValue? 'always' : 'never';\n\t                return this;\n\t            }\n\t\n\t            return this.options.preventDefault;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.origin\n\t         [ method ]\n\t         *\n\t         * Gets or sets the origin of the Interactable's element.  The x and y\n\t         * of the origin will be subtracted from action event coordinates.\n\t         *\n\t         - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n\t         * OR\n\t         - origin (Element) #optional An HTML or SVG Element whose rect will be used\n\t         **\n\t         = (object) The current origin or this Interactable\n\t        \\*/\n\t        origin: function (newValue) {\n\t            if (trySelector(newValue)) {\n\t                this.options.origin = newValue;\n\t                return this;\n\t            }\n\t            else if (isObject(newValue)) {\n\t                this.options.origin = newValue;\n\t                return this;\n\t            }\n\t\n\t            return this.options.origin;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.deltaSource\n\t         [ method ]\n\t         *\n\t         * Returns or sets the mouse coordinate types used to calculate the\n\t         * movement of the pointer.\n\t         *\n\t         - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n\t         = (string | object) The current deltaSource or this Interactable\n\t        \\*/\n\t        deltaSource: function (newValue) {\n\t            if (newValue === 'page' || newValue === 'client') {\n\t                this.options.deltaSource = newValue;\n\t\n\t                return this;\n\t            }\n\t\n\t            return this.options.deltaSource;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.restrict\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add a `restrict` property to the options object passed to\n\t         * @Interactable.draggable, @Interactable.resizable or @Interactable.gesturable instead.\n\t         *\n\t         * Returns or sets the rectangles within which actions on this\n\t         * interactable (after snap calculations) are restricted. By default,\n\t         * restricting is relative to the pointer coordinates. You can change\n\t         * this by setting the\n\t         * [`elementRect`](https://github.com/taye/interact.js/pull/72).\n\t         **\n\t         - options (object) #optional an object with keys drag, resize, and/or gesture whose values are rects, Elements, CSS selectors, or 'parent' or 'self'\n\t         = (object) The current restrictions object or this Interactable\n\t         **\n\t         | interact(element).restrict({\n\t         |     // the rect will be `interact.getElementRect(element.parentNode)`\n\t         |     drag: element.parentNode,\n\t         |\n\t         |     // x and y are relative to the the interactable's origin\n\t         |     resize: { x: 100, y: 100, width: 200, height: 200 }\n\t         | })\n\t         |\n\t         | interact('.draggable').restrict({\n\t         |     // the rect will be the selected element's parent\n\t         |     drag: 'parent',\n\t         |\n\t         |     // do not restrict during normal movement.\n\t         |     // Instead, trigger only one restricted move event\n\t         |     // immediately before the end event.\n\t         |     endOnly: true,\n\t         |\n\t         |     // https://github.com/taye/interact.js/pull/72#issue-41813493\n\t         |     elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n\t         | });\n\t        \\*/\n\t        restrict: function (options) {\n\t            if (!isObject(options)) {\n\t                return this.setOptions('restrict', options);\n\t            }\n\t\n\t            var actions = ['drag', 'resize', 'gesture'],\n\t                ret;\n\t\n\t            for (var i = 0; i < actions.length; i++) {\n\t                var action = actions[i];\n\t\n\t                if (action in options) {\n\t                    var perAction = extend({\n\t                            actions: [action],\n\t                            restriction: options[action]\n\t                        }, options);\n\t\n\t                    ret = this.setOptions('restrict', perAction);\n\t                }\n\t            }\n\t\n\t            return ret;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.context\n\t         [ method ]\n\t         *\n\t         * Gets the selector context Node of the Interactable. The default is `window.document`.\n\t         *\n\t         = (Node) The context Node of this Interactable\n\t         **\n\t        \\*/\n\t        context: function () {\n\t            return this._context;\n\t        },\n\t\n\t        _context: document,\n\t\n\t        /*\\\n\t         * Interactable.ignoreFrom\n\t         [ method ]\n\t         *\n\t         * If the target of the `mousedown`, `pointerdown` or `touchstart`\n\t         * event or any of it's parents match the given CSS selector or\n\t         * Element, no drag/resize/gesture is started.\n\t         *\n\t         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n\t         = (string | Element | object) The current ignoreFrom value or this Interactable\n\t         **\n\t         | interact(element, { ignoreFrom: document.getElementById('no-action') });\n\t         | // or\n\t         | interact(element).ignoreFrom('input, textarea, a');\n\t        \\*/\n\t        ignoreFrom: function (newValue) {\n\t            if (trySelector(newValue)) {            // CSS selector to match event.target\n\t                this.options.ignoreFrom = newValue;\n\t                return this;\n\t            }\n\t\n\t            if (isElement(newValue)) {              // specific element\n\t                this.options.ignoreFrom = newValue;\n\t                return this;\n\t            }\n\t\n\t            return this.options.ignoreFrom;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.allowFrom\n\t         [ method ]\n\t         *\n\t         * A drag/resize/gesture is started only If the target of the\n\t         * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n\t         * parents match the given CSS selector or Element.\n\t         *\n\t         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n\t         = (string | Element | object) The current allowFrom value or this Interactable\n\t         **\n\t         | interact(element, { allowFrom: document.getElementById('drag-handle') });\n\t         | // or\n\t         | interact(element).allowFrom('.handle');\n\t        \\*/\n\t        allowFrom: function (newValue) {\n\t            if (trySelector(newValue)) {            // CSS selector to match event.target\n\t                this.options.allowFrom = newValue;\n\t                return this;\n\t            }\n\t\n\t            if (isElement(newValue)) {              // specific element\n\t                this.options.allowFrom = newValue;\n\t                return this;\n\t            }\n\t\n\t            return this.options.allowFrom;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.element\n\t         [ method ]\n\t         *\n\t         * If this is not a selector Interactable, it returns the element this\n\t         * interactable represents\n\t         *\n\t         = (Element) HTML / SVG Element\n\t        \\*/\n\t        element: function () {\n\t            return this._element;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.fire\n\t         [ method ]\n\t         *\n\t         * Calls listeners for the given InteractEvent type bound globally\n\t         * and directly to this Interactable\n\t         *\n\t         - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n\t         = (Interactable) this Interactable\n\t        \\*/\n\t        fire: function (iEvent) {\n\t            if (!(iEvent && iEvent.type) || !contains(eventTypes, iEvent.type)) {\n\t                return this;\n\t            }\n\t\n\t            var listeners,\n\t                i,\n\t                len,\n\t                onEvent = 'on' + iEvent.type,\n\t                funcName = '';\n\t\n\t            // Interactable#on() listeners\n\t            if (iEvent.type in this._iEvents) {\n\t                listeners = this._iEvents[iEvent.type];\n\t\n\t                for (i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n\t                    funcName = listeners[i].name;\n\t                    listeners[i](iEvent);\n\t                }\n\t            }\n\t\n\t            // interactable.onevent listener\n\t            if (isFunction(this[onEvent])) {\n\t                funcName = this[onEvent].name;\n\t                this[onEvent](iEvent);\n\t            }\n\t\n\t            // interact.on() listeners\n\t            if (iEvent.type in globalEvents && (listeners = globalEvents[iEvent.type]))  {\n\t\n\t                for (i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n\t                    funcName = listeners[i].name;\n\t                    listeners[i](iEvent);\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.on\n\t         [ method ]\n\t         *\n\t         * Binds a listener for an InteractEvent or DOM event.\n\t         *\n\t         - eventType  (string | array | object) The types of events to listen for\n\t         - listener   (function) The function to be called on the given event(s)\n\t         - useCapture (boolean) #optional useCapture flag for addEventListener\n\t         = (object) This Interactable\n\t        \\*/\n\t        on: function (eventType, listener, useCapture) {\n\t            var i;\n\t\n\t            if (isString(eventType) && eventType.search(' ') !== -1) {\n\t                eventType = eventType.trim().split(/ +/);\n\t            }\n\t\n\t            if (isArray(eventType)) {\n\t                for (i = 0; i < eventType.length; i++) {\n\t                    this.on(eventType[i], listener, useCapture);\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            if (isObject(eventType)) {\n\t                for (var prop in eventType) {\n\t                    this.on(prop, eventType[prop], listener);\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            if (eventType === 'wheel') {\n\t                eventType = wheelEvent;\n\t            }\n\t\n\t            // convert to boolean\n\t            useCapture = useCapture? true: false;\n\t\n\t            if (contains(eventTypes, eventType)) {\n\t                // if this type of event was never bound to this Interactable\n\t                if (!(eventType in this._iEvents)) {\n\t                    this._iEvents[eventType] = [listener];\n\t                }\n\t                else {\n\t                    this._iEvents[eventType].push(listener);\n\t                }\n\t            }\n\t            // delegated event for selector\n\t            else if (this.selector) {\n\t                if (!delegatedEvents[eventType]) {\n\t                    delegatedEvents[eventType] = {\n\t                        selectors: [],\n\t                        contexts : [],\n\t                        listeners: []\n\t                    };\n\t\n\t                    // add delegate listener functions\n\t                    for (i = 0; i < documents.length; i++) {\n\t                        events.add(documents[i], eventType, delegateListener);\n\t                        events.add(documents[i], eventType, delegateUseCapture, true);\n\t                    }\n\t                }\n\t\n\t                var delegated = delegatedEvents[eventType],\n\t                    index;\n\t\n\t                for (index = delegated.selectors.length - 1; index >= 0; index--) {\n\t                    if (delegated.selectors[index] === this.selector\n\t                        && delegated.contexts[index] === this._context) {\n\t                        break;\n\t                    }\n\t                }\n\t\n\t                if (index === -1) {\n\t                    index = delegated.selectors.length;\n\t\n\t                    delegated.selectors.push(this.selector);\n\t                    delegated.contexts .push(this._context);\n\t                    delegated.listeners.push([]);\n\t                }\n\t\n\t                // keep listener and useCapture flag\n\t                delegated.listeners[index].push([listener, useCapture]);\n\t            }\n\t            else {\n\t                events.add(this._element, eventType, listener, useCapture);\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.off\n\t         [ method ]\n\t         *\n\t         * Removes an InteractEvent or DOM event listener\n\t         *\n\t         - eventType  (string | array | object) The types of events that were listened for\n\t         - listener   (function) The listener function to be removed\n\t         - useCapture (boolean) #optional useCapture flag for removeEventListener\n\t         = (object) This Interactable\n\t        \\*/\n\t        off: function (eventType, listener, useCapture) {\n\t            var i;\n\t\n\t            if (isString(eventType) && eventType.search(' ') !== -1) {\n\t                eventType = eventType.trim().split(/ +/);\n\t            }\n\t\n\t            if (isArray(eventType)) {\n\t                for (i = 0; i < eventType.length; i++) {\n\t                    this.off(eventType[i], listener, useCapture);\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            if (isObject(eventType)) {\n\t                for (var prop in eventType) {\n\t                    this.off(prop, eventType[prop], listener);\n\t                }\n\t\n\t                return this;\n\t            }\n\t\n\t            var eventList,\n\t                index = -1;\n\t\n\t            // convert to boolean\n\t            useCapture = useCapture? true: false;\n\t\n\t            if (eventType === 'wheel') {\n\t                eventType = wheelEvent;\n\t            }\n\t\n\t            // if it is an action event type\n\t            if (contains(eventTypes, eventType)) {\n\t                eventList = this._iEvents[eventType];\n\t\n\t                if (eventList && (index = indexOf(eventList, listener)) !== -1) {\n\t                    this._iEvents[eventType].splice(index, 1);\n\t                }\n\t            }\n\t            // delegated event\n\t            else if (this.selector) {\n\t                var delegated = delegatedEvents[eventType],\n\t                    matchFound = false;\n\t\n\t                if (!delegated) { return this; }\n\t\n\t                // count from last index of delegated to 0\n\t                for (index = delegated.selectors.length - 1; index >= 0; index--) {\n\t                    // look for matching selector and context Node\n\t                    if (delegated.selectors[index] === this.selector\n\t                        && delegated.contexts[index] === this._context) {\n\t\n\t                        var listeners = delegated.listeners[index];\n\t\n\t                        // each item of the listeners array is an array: [function, useCaptureFlag]\n\t                        for (i = listeners.length - 1; i >= 0; i--) {\n\t                            var fn = listeners[i][0],\n\t                                useCap = listeners[i][1];\n\t\n\t                            // check if the listener functions and useCapture flags match\n\t                            if (fn === listener && useCap === useCapture) {\n\t                                // remove the listener from the array of listeners\n\t                                listeners.splice(i, 1);\n\t\n\t                                // if all listeners for this interactable have been removed\n\t                                // remove the interactable from the delegated arrays\n\t                                if (!listeners.length) {\n\t                                    delegated.selectors.splice(index, 1);\n\t                                    delegated.contexts .splice(index, 1);\n\t                                    delegated.listeners.splice(index, 1);\n\t\n\t                                    // remove delegate function from context\n\t                                    events.remove(this._context, eventType, delegateListener);\n\t                                    events.remove(this._context, eventType, delegateUseCapture, true);\n\t\n\t                                    // remove the arrays if they are empty\n\t                                    if (!delegated.selectors.length) {\n\t                                        delegatedEvents[eventType] = null;\n\t                                    }\n\t                                }\n\t\n\t                                // only remove one listener\n\t                                matchFound = true;\n\t                                break;\n\t                            }\n\t                        }\n\t\n\t                        if (matchFound) { break; }\n\t                    }\n\t                }\n\t            }\n\t            // remove listener from this Interatable's element\n\t            else {\n\t                events.remove(this._element, eventType, listener, useCapture);\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.set\n\t         [ method ]\n\t         *\n\t         * Reset the options of this Interactable\n\t         - options (object) The new settings to apply\n\t         = (object) This Interactable\n\t        \\*/\n\t        set: function (options) {\n\t            if (!isObject(options)) {\n\t                options = {};\n\t            }\n\t\n\t            this.options = extend({}, defaultOptions.base);\n\t\n\t            var i,\n\t                actions = ['drag', 'drop', 'resize', 'gesture'],\n\t                methods = ['draggable', 'dropzone', 'resizable', 'gesturable'],\n\t                perActions = extend(extend({}, defaultOptions.perAction), options[action] || {});\n\t\n\t            for (i = 0; i < actions.length; i++) {\n\t                var action = actions[i];\n\t\n\t                this.options[action] = extend({}, defaultOptions[action]);\n\t\n\t                this.setPerAction(action, perActions);\n\t\n\t                this[methods[i]](options[action]);\n\t            }\n\t\n\t            var settings = [\n\t                    'accept', 'actionChecker', 'allowFrom', 'deltaSource',\n\t                    'dropChecker', 'ignoreFrom', 'origin', 'preventDefault',\n\t                    'rectChecker', 'styleCursor'\n\t                ];\n\t\n\t            for (i = 0, len = settings.length; i < len; i++) {\n\t                var setting = settings[i];\n\t\n\t                this.options[setting] = defaultOptions.base[setting];\n\t\n\t                if (setting in options) {\n\t                    this[setting](options[setting]);\n\t                }\n\t            }\n\t\n\t            return this;\n\t        },\n\t\n\t        /*\\\n\t         * Interactable.unset\n\t         [ method ]\n\t         *\n\t         * Remove this interactable from the list of interactables and remove\n\t         * it's drag, drop, resize and gesture capabilities\n\t         *\n\t         = (object) @interact\n\t        \\*/\n\t        unset: function () {\n\t            events.remove(this._element, 'all');\n\t\n\t            if (!isString(this.selector)) {\n\t                events.remove(this, 'all');\n\t                if (this.options.styleCursor) {\n\t                    this._element.style.cursor = '';\n\t                }\n\t            }\n\t            else {\n\t                // remove delegated events\n\t                for (var type in delegatedEvents) {\n\t                    var delegated = delegatedEvents[type];\n\t\n\t                    for (var i = 0; i < delegated.selectors.length; i++) {\n\t                        if (delegated.selectors[i] === this.selector\n\t                            && delegated.contexts[i] === this._context) {\n\t\n\t                            delegated.selectors.splice(i, 1);\n\t                            delegated.contexts .splice(i, 1);\n\t                            delegated.listeners.splice(i, 1);\n\t\n\t                            // remove the arrays if they are empty\n\t                            if (!delegated.selectors.length) {\n\t                                delegatedEvents[type] = null;\n\t                            }\n\t                        }\n\t\n\t                        events.remove(this._context, type, delegateListener);\n\t                        events.remove(this._context, type, delegateUseCapture, true);\n\t\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.dropzone(false);\n\t\n\t            interactables.splice(indexOf(interactables, this), 1);\n\t\n\t            return interact;\n\t        }\n\t    };\n\t\n\t    function warnOnce (method, message) {\n\t        var warned = false;\n\t\n\t        return function () {\n\t            if (!warned) {\n\t                window.console.warn(message);\n\t                warned = true;\n\t            }\n\t\n\t            return method.apply(this, arguments);\n\t        };\n\t    }\n\t\n\t    Interactable.prototype.snap = warnOnce(Interactable.prototype.snap,\n\t         'Interactable#snap is deprecated. See the new documentation for snapping at http://interactjs.io/docs/snapping');\n\t    Interactable.prototype.restrict = warnOnce(Interactable.prototype.restrict,\n\t         'Interactable#restrict is deprecated. See the new documentation for resticting at http://interactjs.io/docs/restriction');\n\t    Interactable.prototype.inertia = warnOnce(Interactable.prototype.inertia,\n\t         'Interactable#inertia is deprecated. See the new documentation for inertia at http://interactjs.io/docs/inertia');\n\t    Interactable.prototype.autoScroll = warnOnce(Interactable.prototype.autoScroll,\n\t         'Interactable#autoScroll is deprecated. See the new documentation for autoScroll at http://interactjs.io/docs/#autoscroll');\n\t    Interactable.prototype.squareResize = warnOnce(Interactable.prototype.squareResize,\n\t         'Interactable#squareResize is deprecated. See http://interactjs.io/docs/#resize-square');\n\t\n\t    Interactable.prototype.accept = warnOnce(Interactable.prototype.accept,\n\t         'Interactable#accept is deprecated. use Interactable#dropzone({ accept: target }) instead');\n\t    Interactable.prototype.dropChecker = warnOnce(Interactable.prototype.dropChecker,\n\t         'Interactable#dropChecker is deprecated. use Interactable#dropzone({ dropChecker: checkerFunction }) instead');\n\t    Interactable.prototype.context = warnOnce(Interactable.prototype.context,\n\t         'Interactable#context as a method is deprecated. It will soon be a DOM Node instead');\n\t\n\t    /*\\\n\t     * interact.isSet\n\t     [ method ]\n\t     *\n\t     * Check if an element has been set\n\t     - element (Element) The Element being searched for\n\t     = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\t    \\*/\n\t    interact.isSet = function(element, options) {\n\t        return interactables.indexOfElement(element, options && options.context) !== -1;\n\t    };\n\t\n\t    /*\\\n\t     * interact.on\n\t     [ method ]\n\t     *\n\t     * Adds a global listener for an InteractEvent or adds a DOM event to\n\t     * `document`\n\t     *\n\t     - type       (string | array | object) The types of events to listen for\n\t     - listener   (function) The function to be called on the given event(s)\n\t     - useCapture (boolean) #optional useCapture flag for addEventListener\n\t     = (object) interact\n\t    \\*/\n\t    interact.on = function (type, listener, useCapture) {\n\t        if (isString(type) && type.search(' ') !== -1) {\n\t            type = type.trim().split(/ +/);\n\t        }\n\t\n\t        if (isArray(type)) {\n\t            for (var i = 0; i < type.length; i++) {\n\t                interact.on(type[i], listener, useCapture);\n\t            }\n\t\n\t            return interact;\n\t        }\n\t\n\t        if (isObject(type)) {\n\t            for (var prop in type) {\n\t                interact.on(prop, type[prop], listener);\n\t            }\n\t\n\t            return interact;\n\t        }\n\t\n\t        // if it is an InteractEvent type, add listener to globalEvents\n\t        if (contains(eventTypes, type)) {\n\t            // if this type of event was never bound\n\t            if (!globalEvents[type]) {\n\t                globalEvents[type] = [listener];\n\t            }\n\t            else {\n\t                globalEvents[type].push(listener);\n\t            }\n\t        }\n\t        // If non InteractEvent type, addEventListener to document\n\t        else {\n\t            events.add(document, type, listener, useCapture);\n\t        }\n\t\n\t        return interact;\n\t    };\n\t\n\t    /*\\\n\t     * interact.off\n\t     [ method ]\n\t     *\n\t     * Removes a global InteractEvent listener or DOM event from `document`\n\t     *\n\t     - type       (string | array | object) The types of events that were listened for\n\t     - listener   (function) The listener function to be removed\n\t     - useCapture (boolean) #optional useCapture flag for removeEventListener\n\t     = (object) interact\n\t     \\*/\n\t    interact.off = function (type, listener, useCapture) {\n\t        if (isString(type) && type.search(' ') !== -1) {\n\t            type = type.trim().split(/ +/);\n\t        }\n\t\n\t        if (isArray(type)) {\n\t            for (var i = 0; i < type.length; i++) {\n\t                interact.off(type[i], listener, useCapture);\n\t            }\n\t\n\t            return interact;\n\t        }\n\t\n\t        if (isObject(type)) {\n\t            for (var prop in type) {\n\t                interact.off(prop, type[prop], listener);\n\t            }\n\t\n\t            return interact;\n\t        }\n\t\n\t        if (!contains(eventTypes, type)) {\n\t            events.remove(document, type, listener, useCapture);\n\t        }\n\t        else {\n\t            var index;\n\t\n\t            if (type in globalEvents\n\t                && (index = indexOf(globalEvents[type], listener)) !== -1) {\n\t                globalEvents[type].splice(index, 1);\n\t            }\n\t        }\n\t\n\t        return interact;\n\t    };\n\t\n\t    /*\\\n\t     * interact.enableDragging\n\t     [ method ]\n\t     *\n\t     * Deprecated.\n\t     *\n\t     * Returns or sets whether dragging is enabled for any Interactables\n\t     *\n\t     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n\t     = (boolean | object) The current setting or interact\n\t    \\*/\n\t    interact.enableDragging = warnOnce(function (newValue) {\n\t        if (newValue !== null && newValue !== undefined) {\n\t            actionIsEnabled.drag = newValue;\n\t\n\t            return interact;\n\t        }\n\t        return actionIsEnabled.drag;\n\t    }, 'interact.enableDragging is deprecated and will soon be removed.');\n\t\n\t    /*\\\n\t     * interact.enableResizing\n\t     [ method ]\n\t     *\n\t     * Deprecated.\n\t     *\n\t     * Returns or sets whether resizing is enabled for any Interactables\n\t     *\n\t     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n\t     = (boolean | object) The current setting or interact\n\t    \\*/\n\t    interact.enableResizing = warnOnce(function (newValue) {\n\t        if (newValue !== null && newValue !== undefined) {\n\t            actionIsEnabled.resize = newValue;\n\t\n\t            return interact;\n\t        }\n\t        return actionIsEnabled.resize;\n\t    }, 'interact.enableResizing is deprecated and will soon be removed.');\n\t\n\t    /*\\\n\t     * interact.enableGesturing\n\t     [ method ]\n\t     *\n\t     * Deprecated.\n\t     *\n\t     * Returns or sets whether gesturing is enabled for any Interactables\n\t     *\n\t     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n\t     = (boolean | object) The current setting or interact\n\t    \\*/\n\t    interact.enableGesturing = warnOnce(function (newValue) {\n\t        if (newValue !== null && newValue !== undefined) {\n\t            actionIsEnabled.gesture = newValue;\n\t\n\t            return interact;\n\t        }\n\t        return actionIsEnabled.gesture;\n\t    }, 'interact.enableGesturing is deprecated and will soon be removed.');\n\t\n\t    interact.eventTypes = eventTypes;\n\t\n\t    /*\\\n\t     * interact.debug\n\t     [ method ]\n\t     *\n\t     * Returns debugging data\n\t     = (object) An object with properties that outline the current state and expose internal functions and variables\n\t    \\*/\n\t    interact.debug = function () {\n\t        var interaction = interactions[0] || new Interaction();\n\t\n\t        return {\n\t            interactions          : interactions,\n\t            target                : interaction.target,\n\t            dragging              : interaction.dragging,\n\t            resizing              : interaction.resizing,\n\t            gesturing             : interaction.gesturing,\n\t            prepared              : interaction.prepared,\n\t            matches               : interaction.matches,\n\t            matchElements         : interaction.matchElements,\n\t\n\t            prevCoords            : interaction.prevCoords,\n\t            startCoords           : interaction.startCoords,\n\t\n\t            pointerIds            : interaction.pointerIds,\n\t            pointers              : interaction.pointers,\n\t            addPointer            : listeners.addPointer,\n\t            removePointer         : listeners.removePointer,\n\t            recordPointer        : listeners.recordPointer,\n\t\n\t            snap                  : interaction.snapStatus,\n\t            restrict              : interaction.restrictStatus,\n\t            inertia               : interaction.inertiaStatus,\n\t\n\t            downTime              : interaction.downTimes[0],\n\t            downEvent             : interaction.downEvent,\n\t            downPointer           : interaction.downPointer,\n\t            prevEvent             : interaction.prevEvent,\n\t\n\t            Interactable          : Interactable,\n\t            interactables         : interactables,\n\t            pointerIsDown         : interaction.pointerIsDown,\n\t            defaultOptions        : defaultOptions,\n\t            defaultActionChecker  : defaultActionChecker,\n\t\n\t            actionCursors         : actionCursors,\n\t            dragMove              : listeners.dragMove,\n\t            resizeMove            : listeners.resizeMove,\n\t            gestureMove           : listeners.gestureMove,\n\t            pointerUp             : listeners.pointerUp,\n\t            pointerDown           : listeners.pointerDown,\n\t            pointerMove           : listeners.pointerMove,\n\t            pointerHover          : listeners.pointerHover,\n\t\n\t            eventTypes            : eventTypes,\n\t\n\t            events                : events,\n\t            globalEvents          : globalEvents,\n\t            delegatedEvents       : delegatedEvents,\n\t\n\t            prefixedPropREs       : prefixedPropREs\n\t        };\n\t    };\n\t\n\t    // expose the functions used to calculate multi-touch properties\n\t    interact.getPointerAverage = pointerAverage;\n\t    interact.getTouchBBox     = touchBBox;\n\t    interact.getTouchDistance = touchDistance;\n\t    interact.getTouchAngle    = touchAngle;\n\t\n\t    interact.getElementRect         = getElementRect;\n\t    interact.getElementClientRect   = getElementClientRect;\n\t    interact.matchesSelector        = matchesSelector;\n\t    interact.closest                = closest;\n\t\n\t    /*\\\n\t     * interact.margin\n\t     [ method ]\n\t     *\n\t     * Deprecated. Use `interact(target).resizable({ margin: number });` instead.\n\t     * Returns or sets the margin for autocheck resizing used in\n\t     * @Interactable.getAction. That is the distance from the bottom and right\n\t     * edges of an element clicking in which will start resizing\n\t     *\n\t     - newValue (number) #optional\n\t     = (number | interact) The current margin value or interact\n\t    \\*/\n\t    interact.margin = warnOnce(function (newvalue) {\n\t        if (isNumber(newvalue)) {\n\t            margin = newvalue;\n\t\n\t            return interact;\n\t        }\n\t        return margin;\n\t    },\n\t    'interact.margin is deprecated. Use interact(target).resizable({ margin: number }); instead.') ;\n\t\n\t    /*\\\n\t     * interact.supportsTouch\n\t     [ method ]\n\t     *\n\t     = (boolean) Whether or not the browser supports touch input\n\t    \\*/\n\t    interact.supportsTouch = function () {\n\t        return supportsTouch;\n\t    };\n\t\n\t    /*\\\n\t     * interact.supportsPointerEvent\n\t     [ method ]\n\t     *\n\t     = (boolean) Whether or not the browser supports PointerEvents\n\t    \\*/\n\t    interact.supportsPointerEvent = function () {\n\t        return supportsPointerEvent;\n\t    };\n\t\n\t    /*\\\n\t     * interact.stop\n\t     [ method ]\n\t     *\n\t     * Cancels all interactions (end events are not fired)\n\t     *\n\t     - event (Event) An event on which to call preventDefault()\n\t     = (object) interact\n\t    \\*/\n\t    interact.stop = function (event) {\n\t        for (var i = interactions.length - 1; i >= 0; i--) {\n\t            interactions[i].stop(event);\n\t        }\n\t\n\t        return interact;\n\t    };\n\t\n\t    /*\\\n\t     * interact.dynamicDrop\n\t     [ method ]\n\t     *\n\t     * Returns or sets whether the dimensions of dropzone elements are\n\t     * calculated on every dragmove or only on dragstart for the default\n\t     * dropChecker\n\t     *\n\t     - newValue (boolean) #optional True to check on each move. False to check only before start\n\t     = (boolean | interact) The current setting or interact\n\t    \\*/\n\t    interact.dynamicDrop = function (newValue) {\n\t        if (isBool(newValue)) {\n\t            //if (dragging && dynamicDrop !== newValue && !newValue) {\n\t                //calcRects(dropzones);\n\t            //}\n\t\n\t            dynamicDrop = newValue;\n\t\n\t            return interact;\n\t        }\n\t        return dynamicDrop;\n\t    };\n\t\n\t    /*\\\n\t     * interact.pointerMoveTolerance\n\t     [ method ]\n\t     * Returns or sets the distance the pointer must be moved before an action\n\t     * sequence occurs. This also affects tolerance for tap events.\n\t     *\n\t     - newValue (number) #optional The movement from the start position must be greater than this value\n\t     = (number | Interactable) The current setting or interact\n\t    \\*/\n\t    interact.pointerMoveTolerance = function (newValue) {\n\t        if (isNumber(newValue)) {\n\t            pointerMoveTolerance = newValue;\n\t\n\t            return this;\n\t        }\n\t\n\t        return pointerMoveTolerance;\n\t    };\n\t\n\t    /*\\\n\t     * interact.maxInteractions\n\t     [ method ]\n\t     **\n\t     * Returns or sets the maximum number of concurrent interactions allowed.\n\t     * By default only 1 interaction is allowed at a time (for backwards\n\t     * compatibility). To allow multiple interactions on the same Interactables\n\t     * and elements, you need to enable it in the draggable, resizable and\n\t     * gesturable `'max'` and `'maxPerElement'` options.\n\t     **\n\t     - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\t    \\*/\n\t    interact.maxInteractions = function (newValue) {\n\t        if (isNumber(newValue)) {\n\t            maxInteractions = newValue;\n\t\n\t            return this;\n\t        }\n\t\n\t        return maxInteractions;\n\t    };\n\t\n\t    interact.createSnapGrid = function (grid) {\n\t        return function (x, y) {\n\t            var offsetX = 0,\n\t                offsetY = 0;\n\t\n\t            if (isObject(grid.offset)) {\n\t                offsetX = grid.offset.x;\n\t                offsetY = grid.offset.y;\n\t            }\n\t\n\t            var gridx = Math.round((x - offsetX) / grid.x),\n\t                gridy = Math.round((y - offsetY) / grid.y),\n\t\n\t                newX = gridx * grid.x + offsetX,\n\t                newY = gridy * grid.y + offsetY;\n\t\n\t            return {\n\t                x: newX,\n\t                y: newY,\n\t                range: grid.range\n\t            };\n\t        };\n\t    };\n\t\n\t    function endAllInteractions (event) {\n\t        for (var i = 0; i < interactions.length; i++) {\n\t            interactions[i].pointerEnd(event, event);\n\t        }\n\t    }\n\t\n\t    function listenToDocument (doc) {\n\t        if (contains(documents, doc)) { return; }\n\t\n\t        var win = doc.defaultView || doc.parentWindow;\n\t\n\t        // add delegate event listener\n\t        for (var eventType in delegatedEvents) {\n\t            events.add(doc, eventType, delegateListener);\n\t            events.add(doc, eventType, delegateUseCapture, true);\n\t        }\n\t\n\t        if (supportsPointerEvent) {\n\t            if (PointerEvent === win.MSPointerEvent) {\n\t                pEventTypes = {\n\t                    up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n\t                    out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' };\n\t            }\n\t            else {\n\t                pEventTypes = {\n\t                    up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n\t                    out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' };\n\t            }\n\t\n\t            events.add(doc, pEventTypes.down  , listeners.selectorDown );\n\t            events.add(doc, pEventTypes.move  , listeners.pointerMove  );\n\t            events.add(doc, pEventTypes.over  , listeners.pointerOver  );\n\t            events.add(doc, pEventTypes.out   , listeners.pointerOut   );\n\t            events.add(doc, pEventTypes.up    , listeners.pointerUp    );\n\t            events.add(doc, pEventTypes.cancel, listeners.pointerCancel);\n\t\n\t            // autoscroll\n\t            events.add(doc, pEventTypes.move, listeners.autoScrollMove);\n\t        }\n\t        else {\n\t            events.add(doc, 'mousedown', listeners.selectorDown);\n\t            events.add(doc, 'mousemove', listeners.pointerMove );\n\t            events.add(doc, 'mouseup'  , listeners.pointerUp   );\n\t            events.add(doc, 'mouseover', listeners.pointerOver );\n\t            events.add(doc, 'mouseout' , listeners.pointerOut  );\n\t\n\t            events.add(doc, 'touchstart' , listeners.selectorDown );\n\t            events.add(doc, 'touchmove'  , listeners.pointerMove  );\n\t            events.add(doc, 'touchend'   , listeners.pointerUp    );\n\t            events.add(doc, 'touchcancel', listeners.pointerCancel);\n\t\n\t            // autoscroll\n\t            events.add(doc, 'mousemove', listeners.autoScrollMove);\n\t            events.add(doc, 'touchmove', listeners.autoScrollMove);\n\t        }\n\t\n\t        events.add(win, 'blur', endAllInteractions);\n\t\n\t        try {\n\t            if (win.frameElement) {\n\t                var parentDoc = win.frameElement.ownerDocument,\n\t                    parentWindow = parentDoc.defaultView;\n\t\n\t                events.add(parentDoc   , 'mouseup'      , listeners.pointerEnd);\n\t                events.add(parentDoc   , 'touchend'     , listeners.pointerEnd);\n\t                events.add(parentDoc   , 'touchcancel'  , listeners.pointerEnd);\n\t                events.add(parentDoc   , 'pointerup'    , listeners.pointerEnd);\n\t                events.add(parentDoc   , 'MSPointerUp'  , listeners.pointerEnd);\n\t                events.add(parentWindow, 'blur'         , endAllInteractions );\n\t            }\n\t        }\n\t        catch (error) {\n\t            interact.windowParentError = error;\n\t        }\n\t\n\t        // prevent native HTML5 drag on interact.js target elements\n\t        events.add(doc, 'dragstart', function (event) {\n\t            for (var i = 0; i < interactions.length; i++) {\n\t                var interaction = interactions[i];\n\t\n\t                if (interaction.element\n\t                    && (interaction.element === event.target\n\t                        || nodeContains(interaction.element, event.target))) {\n\t\n\t                    interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n\t                    return;\n\t                }\n\t            }\n\t        });\n\t\n\t        if (events.useAttachEvent) {\n\t            // For IE's lack of Event#preventDefault\n\t            events.add(doc, 'selectstart', function (event) {\n\t                var interaction = interactions[0];\n\t\n\t                if (interaction.currentAction()) {\n\t                    interaction.checkAndPreventDefault(event);\n\t                }\n\t            });\n\t\n\t            // For IE's bad dblclick event sequence\n\t            events.add(doc, 'dblclick', doOnInteractions('ie8Dblclick'));\n\t        }\n\t\n\t        documents.push(doc);\n\t    }\n\t\n\t    listenToDocument(document);\n\t\n\t    function indexOf (array, target) {\n\t        for (var i = 0, len = array.length; i < len; i++) {\n\t            if (array[i] === target) {\n\t                return i;\n\t            }\n\t        }\n\t\n\t        return -1;\n\t    }\n\t\n\t    function contains (array, target) {\n\t        return indexOf(array, target) !== -1;\n\t    }\n\t\n\t    function matchesSelector (element, selector, nodeList) {\n\t        if (ie8MatchesSelector) {\n\t            return ie8MatchesSelector(element, selector, nodeList);\n\t        }\n\t\n\t        // remove /deep/ from selectors if shadowDOM polyfill is used\n\t        if (window !== realWindow) {\n\t            selector = selector.replace(/\\/deep\\//g, ' ');\n\t        }\n\t\n\t        return element[prefixedMatchesSelector](selector);\n\t    }\n\t\n\t    function matchesUpTo (element, selector, limit) {\n\t        while (isElement(element)) {\n\t            if (matchesSelector(element, selector)) {\n\t                return true;\n\t            }\n\t\n\t            element = parentElement(element);\n\t\n\t            if (element === limit) {\n\t                return matchesSelector(element, selector);\n\t            }\n\t        }\n\t\n\t        return false;\n\t    }\n\t\n\t    // For IE8's lack of an Element#matchesSelector\n\t    // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n\t    if (!(prefixedMatchesSelector in Element.prototype) || !isFunction(Element.prototype[prefixedMatchesSelector])) {\n\t        ie8MatchesSelector = function (element, selector, elems) {\n\t            elems = elems || element.parentNode.querySelectorAll(selector);\n\t\n\t            for (var i = 0, len = elems.length; i < len; i++) {\n\t                if (elems[i] === element) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            return false;\n\t        };\n\t    }\n\t\n\t    // requestAnimationFrame polyfill\n\t    (function() {\n\t        var lastTime = 0,\n\t            vendors = ['ms', 'moz', 'webkit', 'o'];\n\t\n\t        for(var x = 0; x < vendors.length && !realWindow.requestAnimationFrame; ++x) {\n\t            reqFrame = realWindow[vendors[x]+'RequestAnimationFrame'];\n\t            cancelFrame = realWindow[vendors[x]+'CancelAnimationFrame'] || realWindow[vendors[x]+'CancelRequestAnimationFrame'];\n\t        }\n\t\n\t        if (!reqFrame) {\n\t            reqFrame = function(callback) {\n\t                var currTime = new Date().getTime(),\n\t                    timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n\t                    id = setTimeout(function() { callback(currTime + timeToCall); },\n\t                  timeToCall);\n\t                lastTime = currTime + timeToCall;\n\t                return id;\n\t            };\n\t        }\n\t\n\t        if (!cancelFrame) {\n\t            cancelFrame = function(id) {\n\t                clearTimeout(id);\n\t            };\n\t        }\n\t    }());\n\t\n\t    /* global exports: true, module, define */\n\t\n\t    // http://documentcloud.github.io/underscore/docs/underscore.html#section-11\n\t    if (true) {\n\t        if (typeof module !== 'undefined' && module.exports) {\n\t            exports = module.exports = interact;\n\t        }\n\t        exports.interact = interact;\n\t    }\n\t    // AMD\n\t    else if (typeof define === 'function' && define.amd) {\n\t        define('interact', function() {\n\t            return interact;\n\t        });\n\t    }\n\t    else {\n\t        realWindow.interact = interact;\n\t    }\n\t\n\t} (typeof window === 'undefined'? undefined : window));\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(35)\n\t  , IE8_DOM_DEFINE = __webpack_require__(40)\n\t  , toPrimitive    = __webpack_require__(42)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(2) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v2.1.6\n\t * (c) 2014-2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\t/*  */\n\t\n\t/**\n\t * Convert a value to a string that is actually rendered.\n\t */\n\tfunction _toString (val) {\n\t  return val == null\n\t    ? ''\n\t    : typeof val === 'object'\n\t      ? JSON.stringify(val, null, 2)\n\t      : String(val)\n\t}\n\t\n\t/**\n\t * Convert a input value to a number for persistence.\n\t * If the conversion fails, return original string.\n\t */\n\tfunction toNumber (val) {\n\t  var n = parseFloat(val, 10);\n\t  return (n || n === 0) ? n : val\n\t}\n\t\n\t/**\n\t * Make a map and return a function for checking if a key\n\t * is in that map.\n\t */\n\tfunction makeMap (\n\t  str,\n\t  expectsLowerCase\n\t) {\n\t  var map = Object.create(null);\n\t  var list = str.split(',');\n\t  for (var i = 0; i < list.length; i++) {\n\t    map[list[i]] = true;\n\t  }\n\t  return expectsLowerCase\n\t    ? function (val) { return map[val.toLowerCase()]; }\n\t    : function (val) { return map[val]; }\n\t}\n\t\n\t/**\n\t * Check if a tag is a built-in tag.\n\t */\n\tvar isBuiltInTag = makeMap('slot,component', true);\n\t\n\t/**\n\t * Remove an item from an array\n\t */\n\tfunction remove$1 (arr, item) {\n\t  if (arr.length) {\n\t    var index = arr.indexOf(item);\n\t    if (index > -1) {\n\t      return arr.splice(index, 1)\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check whether the object has the property.\n\t */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tfunction hasOwn (obj, key) {\n\t  return hasOwnProperty.call(obj, key)\n\t}\n\t\n\t/**\n\t * Check if value is primitive\n\t */\n\tfunction isPrimitive (value) {\n\t  return typeof value === 'string' || typeof value === 'number'\n\t}\n\t\n\t/**\n\t * Create a cached version of a pure function.\n\t */\n\tfunction cached (fn) {\n\t  var cache = Object.create(null);\n\t  return function cachedFn (str) {\n\t    var hit = cache[str];\n\t    return hit || (cache[str] = fn(str))\n\t  }\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t */\n\tvar camelizeRE = /-(\\w)/g;\n\tvar camelize = cached(function (str) {\n\t  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n\t});\n\t\n\t/**\n\t * Capitalize a string.\n\t */\n\tvar capitalize = cached(function (str) {\n\t  return str.charAt(0).toUpperCase() + str.slice(1)\n\t});\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t */\n\tvar hyphenateRE = /([^-])([A-Z])/g;\n\tvar hyphenate = cached(function (str) {\n\t  return str\n\t    .replace(hyphenateRE, '$1-$2')\n\t    .replace(hyphenateRE, '$1-$2')\n\t    .toLowerCase()\n\t});\n\t\n\t/**\n\t * Simple bind, faster than native\n\t */\n\tfunction bind$1 (fn, ctx) {\n\t  function boundFn (a) {\n\t    var l = arguments.length;\n\t    return l\n\t      ? l > 1\n\t        ? fn.apply(ctx, arguments)\n\t        : fn.call(ctx, a)\n\t      : fn.call(ctx)\n\t  }\n\t  // record original fn length\n\t  boundFn._length = fn.length;\n\t  return boundFn\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t */\n\tfunction toArray (list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t */\n\tfunction extend (to, _from) {\n\t  for (var key in _from) {\n\t    to[key] = _from[key];\n\t  }\n\t  return to\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t */\n\tfunction isObject (obj) {\n\t  return obj !== null && typeof obj === 'object'\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t */\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\tfunction isPlainObject (obj) {\n\t  return toString.call(obj) === OBJECT_STRING\n\t}\n\t\n\t/**\n\t * Merge an Array of Objects into a single Object.\n\t */\n\tfunction toObject (arr) {\n\t  var res = {};\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (arr[i]) {\n\t      extend(res, arr[i]);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\t/**\n\t * Perform no operation.\n\t */\n\tfunction noop () {}\n\t\n\t/**\n\t * Always return false.\n\t */\n\tvar no = function () { return false; };\n\t\n\t/**\n\t * Return same value\n\t */\n\tvar identity = function (_) { return _; };\n\t\n\t/**\n\t * Generate a static keys string from compiler modules.\n\t */\n\tfunction genStaticKeys (modules) {\n\t  return modules.reduce(function (keys, m) {\n\t    return keys.concat(m.staticKeys || [])\n\t  }, []).join(',')\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t */\n\tfunction looseEqual (a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (\n\t    isObject(a) && isObject(b)\n\t      ? JSON.stringify(a) === JSON.stringify(b)\n\t      : false\n\t  )\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tfunction looseIndexOf (arr, val) {\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (looseEqual(arr[i], val)) { return i }\n\t  }\n\t  return -1\n\t}\n\t\n\t/*  */\n\t\n\tvar config = {\n\t  /**\n\t   * Option merge strategies (used in core/util/options)\n\t   */\n\t  optionMergeStrategies: Object.create(null),\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   */\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to enable devtools\n\t   */\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Error handler for watcher errors\n\t   */\n\t  errorHandler: null,\n\t\n\t  /**\n\t   * Ignore certain custom elements\n\t   */\n\t  ignoredElements: null,\n\t\n\t  /**\n\t   * Custom user key aliases for v-on\n\t   */\n\t  keyCodes: Object.create(null),\n\t\n\t  /**\n\t   * Check if a tag is reserved so that it cannot be registered as a\n\t   * component. This is platform-dependent and may be overwritten.\n\t   */\n\t  isReservedTag: no,\n\t\n\t  /**\n\t   * Check if a tag is an unknown element.\n\t   * Platform-dependent.\n\t   */\n\t  isUnknownElement: no,\n\t\n\t  /**\n\t   * Get the namespace of an element\n\t   */\n\t  getTagNamespace: noop,\n\t\n\t  /**\n\t   * Parse the real tag name for the specific platform.\n\t   */\n\t  parsePlatformTagName: identity,\n\t\n\t  /**\n\t   * Check if an attribute must be bound using property, e.g. value\n\t   * Platform-dependent.\n\t   */\n\t  mustUseProp: no,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   */\n\t  _assetTypes: [\n\t    'component',\n\t    'directive',\n\t    'filter'\n\t  ],\n\t\n\t  /**\n\t   * List of lifecycle hooks.\n\t   */\n\t  _lifecycleHooks: [\n\t    'beforeCreate',\n\t    'created',\n\t    'beforeMount',\n\t    'mounted',\n\t    'beforeUpdate',\n\t    'updated',\n\t    'beforeDestroy',\n\t    'destroyed',\n\t    'activated',\n\t    'deactivated'\n\t  ],\n\t\n\t  /**\n\t   * Max circular updates allowed in a scheduler flush cycle.\n\t   */\n\t  _maxUpdateCount: 100\n\t};\n\t\n\t/*  */\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t */\n\tfunction isReserved (str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F\n\t}\n\t\n\t/**\n\t * Define a property.\n\t */\n\tfunction def (obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Parse simple path.\n\t */\n\tvar bailRE = /[^\\w.$]/;\n\tfunction parsePath (path) {\n\t  if (bailRE.test(path)) {\n\t    return\n\t  } else {\n\t    var segments = path.split('.');\n\t    return function (obj) {\n\t      for (var i = 0; i < segments.length; i++) {\n\t        if (!obj) { return }\n\t        obj = obj[segments[i]];\n\t      }\n\t      return obj\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t/* globals MutationObserver */\n\t\n\t// can we use __proto__?\n\tvar hasProto = '__proto__' in {};\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined';\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && /msie|trident/.test(UA);\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isEdge = UA && UA.indexOf('edge/') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\t\n\t// this needs to be lazy-evaled because vue may be required before\n\t// vue-server-renderer can set VUE_ENV\n\tvar _isServer;\n\tvar isServerRendering = function () {\n\t  if (_isServer === undefined) {\n\t    /* istanbul ignore if */\n\t    if (!inBrowser && typeof global !== 'undefined') {\n\t      // detect presence of vue-server-renderer and avoid\n\t      // Webpack shimming the process\n\t      _isServer = global['process'].env.VUE_ENV === 'server';\n\t    } else {\n\t      _isServer = false;\n\t    }\n\t  }\n\t  return _isServer\n\t};\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t/* istanbul ignore next */\n\tfunction isNative (Ctor) {\n\t  return /native code/.test(Ctor.toString())\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously.\n\t */\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t\n\t  function nextTickHandler () {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks.length = 0;\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  // the nextTick behavior leverages the microtask queue, which can be accessed\n\t  // via either native Promise.then or MutationObserver.\n\t  // MutationObserver has wider support, however it is seriously bugged in\n\t  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n\t  // completely stops working after triggering a few times... so, if native\n\t  // Promise is available, we will use it:\n\t  /* istanbul ignore if */\n\t  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n\t    var p = Promise.resolve();\n\t    var logError = function (err) { console.error(err); };\n\t    timerFunc = function () {\n\t      p.then(nextTickHandler).catch(logError);\n\t      // in problematic UIWebViews, Promise.then doesn't completely break, but\n\t      // it can get stuck in a weird state where callbacks are pushed into the\n\t      // microtask queue but the queue isn't being flushed, until the browser\n\t      // needs to do some other work, e.g. handle a timer. Therefore we can\n\t      // \"force\" the microtask queue to be flushed by adding an empty timer.\n\t      if (isIOS) { setTimeout(noop); }\n\t    };\n\t  } else if (typeof MutationObserver !== 'undefined' && (\n\t    isNative(MutationObserver) ||\n\t    // PhantomJS and iOS 7.x\n\t    MutationObserver.toString() === '[object MutationObserverConstructor]'\n\t  )) {\n\t    // use MutationObserver where native Promise is not available,\n\t    // e.g. PhantomJS IE11, iOS7, Android 4.4\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(String(counter));\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = String(counter);\n\t    };\n\t  } else {\n\t    // fallback to setTimeout\n\t    /* istanbul ignore next */\n\t    timerFunc = function () {\n\t      setTimeout(nextTickHandler, 0);\n\t    };\n\t  }\n\t\n\t  return function queueNextTick (cb, ctx) {\n\t    var _resolve;\n\t    callbacks.push(function () {\n\t      if (cb) { cb.call(ctx); }\n\t      if (_resolve) { _resolve(ctx); }\n\t    });\n\t    if (!pending) {\n\t      pending = true;\n\t      timerFunc();\n\t    }\n\t    if (!cb && typeof Promise !== 'undefined') {\n\t      return new Promise(function (resolve) {\n\t        _resolve = resolve;\n\t      })\n\t    }\n\t  }\n\t})();\n\t\n\tvar _Set;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && isNative(Set)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = (function () {\n\t    function Set () {\n\t      this.set = Object.create(null);\n\t    }\n\t    Set.prototype.has = function has (key) {\n\t      return this.set[key] === true\n\t    };\n\t    Set.prototype.add = function add (key) {\n\t      this.set[key] = true;\n\t    };\n\t    Set.prototype.clear = function clear () {\n\t      this.set = Object.create(null);\n\t    };\n\t\n\t    return Set;\n\t  }());\n\t}\n\t\n\tvar warn = noop;\n\tvar formatComponentName;\n\t\n\tif (false) {\n\t  var hasConsole = typeof console !== 'undefined';\n\t\n\t  warn = function (msg, vm) {\n\t    if (hasConsole && (!config.silent)) {\n\t      console.error(\"[Vue warn]: \" + msg + \" \" + (\n\t        vm ? formatLocation(formatComponentName(vm)) : ''\n\t      ));\n\t    }\n\t  };\n\t\n\t  formatComponentName = function (vm) {\n\t    if (vm.$root === vm) {\n\t      return 'root instance'\n\t    }\n\t    var name = vm._isVue\n\t      ? vm.$options.name || vm.$options._componentTag\n\t      : vm.name;\n\t    return (\n\t      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n\t      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n\t    )\n\t  };\n\t\n\t  var formatLocation = function (str) {\n\t    if (str === 'anonymous component') {\n\t      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n\t    }\n\t    return (\"\\n(found in \" + str + \")\")\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t */\n\tvar Dep = function Dep () {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t};\n\t\n\tDep.prototype.addSub = function addSub (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\tDep.prototype.removeSub = function removeSub (sub) {\n\t  remove$1(this.subs, sub);\n\t};\n\t\n\tDep.prototype.depend = function depend () {\n\t  if (Dep.target) {\n\t    Dep.target.addDep(this);\n\t  }\n\t};\n\t\n\tDep.prototype.notify = function notify () {\n\t  // stablize the subscriber list first\n\t  var subs = this.subs.slice();\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\tvar targetStack = [];\n\t\n\tfunction pushTarget (_target) {\n\t  if (Dep.target) { targetStack.push(Dep.target); }\n\t  Dep.target = _target;\n\t}\n\t\n\tfunction popTarget () {\n\t  Dep.target = targetStack.pop();\n\t}\n\t\n\t/*\n\t * not type checking this file because flow doesn't play well with\n\t * dynamically accessing methods on Array prototype\n\t */\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto);[\n\t  'push',\n\t  'pop',\n\t  'shift',\n\t  'unshift',\n\t  'splice',\n\t  'sort',\n\t  'reverse'\n\t]\n\t.forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator () {\n\t    var arguments$1 = arguments;\n\t\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments$1[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break\n\t      case 'unshift':\n\t        inserted = args;\n\t        break\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break\n\t    }\n\t    if (inserted) { ob.observeArray(inserted); }\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result\n\t  });\n\t});\n\t\n\t/*  */\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However when passing down props,\n\t * we don't want to force conversion because the value may be a nested value\n\t * under a frozen data structure. Converting it would defeat the optimization.\n\t */\n\tvar observerState = {\n\t  shouldConvert: true,\n\t  isSettingProps: false\n\t};\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t */\n\tvar Observer = function Observer (value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  this.vmCount = 0;\n\t  def(value, '__ob__', this);\n\t  if (Array.isArray(value)) {\n\t    var augment = hasProto\n\t      ? protoAugment\n\t      : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t};\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t */\n\tObserver.prototype.walk = function walk (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t */\n\tObserver.prototype.observeArray = function observeArray (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t */\n\tfunction protoAugment (target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t */\n\t/* istanbul ignore next */\n\tfunction copyAugment (target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t */\n\tfunction observe (value) {\n\t  if (!isObject(value)) {\n\t    return\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (\n\t    observerState.shouldConvert &&\n\t    !isServerRendering() &&\n\t    (Array.isArray(value) || isPlainObject(value)) &&\n\t    Object.isExtensible(value) &&\n\t    !value._isVue\n\t  ) {\n\t    ob = new Observer(value);\n\t  }\n\t  return ob\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t */\n\tfunction defineReactive$$1 (\n\t  obj,\n\t  key,\n\t  val,\n\t  customSetter\n\t) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter () {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (Array.isArray(value)) {\n\t          dependArray(value);\n\t        }\n\t      }\n\t      return value\n\t    },\n\t    set: function reactiveSetter (newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      /* eslint-disable no-self-compare */\n\t      if (newVal === value || (newVal !== newVal && value !== value)) {\n\t        return\n\t      }\n\t      /* eslint-enable no-self-compare */\n\t      if (false) {\n\t        customSetter();\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Set a property on an object. Adds the new property and\n\t * triggers change notification if the property doesn't\n\t * already exist.\n\t */\n\tfunction set$1 (obj, key, val) {\n\t  if (Array.isArray(obj)) {\n\t    obj.length = Math.max(obj.length, key);\n\t    obj.splice(key, 1, val);\n\t    return val\n\t  }\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (obj._isVue || (ob && ob.vmCount)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n\t      'at runtime - declare it upfront in the data option.'\n\t    );\n\t    return\n\t  }\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return\n\t  }\n\t  defineReactive$$1(ob.value, key, val);\n\t  ob.dep.notify();\n\t  return val\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t */\n\tfunction del (obj, key) {\n\t  var ob = obj.__ob__;\n\t  if (obj._isVue || (ob && ob.vmCount)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Avoid deleting properties on a Vue instance or its root $data ' +\n\t      '- just set it to null.'\n\t    );\n\t    return\n\t  }\n\t  if (!hasOwn(obj, key)) {\n\t    return\n\t  }\n\t  delete obj[key];\n\t  if (!ob) {\n\t    return\n\t  }\n\t  ob.dep.notify();\n\t}\n\t\n\t/**\n\t * Collect dependencies on array elements when the array is touched, since\n\t * we cannot intercept array element access like property getters.\n\t */\n\tfunction dependArray (value) {\n\t  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n\t    e = value[i];\n\t    e && e.__ob__ && e.__ob__.dep.depend();\n\t    if (Array.isArray(e)) {\n\t      dependArray(e);\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t */\n\tvar strats = config.optionMergeStrategies;\n\t\n\t/**\n\t * Options with restrictions\n\t */\n\tif (false) {\n\t  strats.el = strats.propsData = function (parent, child, vm, key) {\n\t    if (!vm) {\n\t      warn(\n\t        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n\t        'creation with the `new` keyword.'\n\t      );\n\t    }\n\t    return defaultStrat(parent, child)\n\t  };\n\t}\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\tfunction mergeData (to, from) {\n\t  if (!from) { return to }\n\t  var key, toVal, fromVal;\n\t  var keys = Object.keys(from);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    key = keys[i];\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set$1(to, key, fromVal);\n\t    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\tstrats.data = function (\n\t  parentVal,\n\t  childVal,\n\t  vm\n\t) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn(\n\t        'The \"data\" option should be a function ' +\n\t        'that returns a per-instance value in component ' +\n\t        'definitions.',\n\t        vm\n\t      );\n\t      return parentVal\n\t    }\n\t    if (!parentVal) {\n\t      return childVal\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn () {\n\t      return mergeData(\n\t        childVal.call(this),\n\t        parentVal.call(this)\n\t      )\n\t    }\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn () {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function'\n\t        ? childVal.call(vm)\n\t        : childVal;\n\t      var defaultData = typeof parentVal === 'function'\n\t        ? parentVal.call(vm)\n\t        : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData)\n\t      } else {\n\t        return defaultData\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\tfunction mergeHook (\n\t  parentVal,\n\t  childVal\n\t) {\n\t  return childVal\n\t    ? parentVal\n\t      ? parentVal.concat(childVal)\n\t      : Array.isArray(childVal)\n\t        ? childVal\n\t        : [childVal]\n\t    : parentVal\n\t}\n\t\n\tconfig._lifecycleHooks.forEach(function (hook) {\n\t  strats[hook] = mergeHook;\n\t});\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\tfunction mergeAssets (parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal\n\t    ? extend(res, childVal)\n\t    : res\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Watchers.\n\t *\n\t * Watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\tstrats.watch = function (parentVal, childVal) {\n\t  /* istanbul ignore if */\n\t  if (!childVal) { return parentVal }\n\t  if (!parentVal) { return childVal }\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !Array.isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent\n\t      ? parent.concat(child)\n\t      : [child];\n\t  }\n\t  return ret\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\tstrats.props =\n\tstrats.methods =\n\tstrats.computed = function (parentVal, childVal) {\n\t  if (!childVal) { return parentVal }\n\t  if (!parentVal) { return childVal }\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\tvar defaultStrat = function (parentVal, childVal) {\n\t  return childVal === undefined\n\t    ? parentVal\n\t    : childVal\n\t};\n\t\n\t/**\n\t * Validate component names\n\t */\n\tfunction checkComponents (options) {\n\t  for (var key in options.components) {\n\t    var lower = key.toLowerCase();\n\t    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n\t      warn(\n\t        'Do not use built-in or reserved HTML elements as component ' +\n\t        'id: ' + key\n\t      );\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t */\n\tfunction normalizeProps (options) {\n\t  var props = options.props;\n\t  if (!props) { return }\n\t  var res = {};\n\t  var i, val, name;\n\t  if (Array.isArray(props)) {\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        name = camelize(val);\n\t        res[name] = { type: null };\n\t      } else if (false) {\n\t        warn('props must be strings when using array syntax.');\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    for (var key in props) {\n\t      val = props[key];\n\t      name = camelize(key);\n\t      res[name] = isPlainObject(val)\n\t        ? val\n\t        : { type: val };\n\t    }\n\t  }\n\t  options.props = res;\n\t}\n\t\n\t/**\n\t * Normalize raw function directives into object format.\n\t */\n\tfunction normalizeDirectives (options) {\n\t  var dirs = options.directives;\n\t  if (dirs) {\n\t    for (var key in dirs) {\n\t      var def = dirs[key];\n\t      if (typeof def === 'function') {\n\t        dirs[key] = { bind: def, update: def };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t */\n\tfunction mergeOptions (\n\t  parent,\n\t  child,\n\t  vm\n\t) {\n\t  if (false) {\n\t    checkComponents(child);\n\t  }\n\t  normalizeProps(child);\n\t  normalizeDirectives(child);\n\t  var extendsFrom = child.extends;\n\t  if (extendsFrom) {\n\t    parent = typeof extendsFrom === 'function'\n\t      ? mergeOptions(parent, extendsFrom.options, vm)\n\t      : mergeOptions(parent, extendsFrom, vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      if (mixin.prototype instanceof Vue$3) {\n\t        mixin = mixin.options;\n\t      }\n\t      parent = mergeOptions(parent, mixin, vm);\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField (key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t */\n\tfunction resolveAsset (\n\t  options,\n\t  type,\n\t  id,\n\t  warnMissing\n\t) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return\n\t  }\n\t  var assets = options[type];\n\t  // check local registration variations first\n\t  if (hasOwn(assets, id)) { return assets[id] }\n\t  var camelizedId = camelize(id);\n\t  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n\t  var PascalCaseId = capitalize(camelizedId);\n\t  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n\t  // fallback to prototype chain\n\t  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n\t  if (false) {\n\t    warn(\n\t      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n\t      options\n\t    );\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tfunction validateProp (\n\t  key,\n\t  propOptions,\n\t  propsData,\n\t  vm\n\t) {\n\t  var prop = propOptions[key];\n\t  var absent = !hasOwn(propsData, key);\n\t  var value = propsData[key];\n\t  // handle boolean props\n\t  if (isBooleanType(prop.type)) {\n\t    if (absent && !hasOwn(prop, 'default')) {\n\t      value = false;\n\t    } else if (value === '' || value === hyphenate(key)) {\n\t      value = true;\n\t    }\n\t  }\n\t  // check default value\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop, key);\n\t    // since the default value is a fresh copy,\n\t    // make sure to observe it.\n\t    var prevShouldConvert = observerState.shouldConvert;\n\t    observerState.shouldConvert = true;\n\t    observe(value);\n\t    observerState.shouldConvert = prevShouldConvert;\n\t  }\n\t  if (false) {\n\t    assertProp(prop, key, value, vm, absent);\n\t  }\n\t  return value\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t */\n\tfunction getPropDefaultValue (vm, prop, key) {\n\t  // no default, return undefined\n\t  if (!hasOwn(prop, 'default')) {\n\t    return undefined\n\t  }\n\t  var def = prop.default;\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Invalid default value for prop \"' + key + '\": ' +\n\t      'Props with type Object/Array must use a factory function ' +\n\t      'to return the default value.',\n\t      vm\n\t    );\n\t  }\n\t  // the raw prop value was also undefined from previous render,\n\t  // return previous default value to avoid unnecessary watcher trigger\n\t  if (vm && vm.$options.propsData &&\n\t    vm.$options.propsData[key] === undefined &&\n\t    vm[key] !== undefined) {\n\t    return vm[key]\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && prop.type !== Function\n\t    ? def.call(vm)\n\t    : def\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t */\n\tfunction assertProp (\n\t  prop,\n\t  name,\n\t  value,\n\t  vm,\n\t  absent\n\t) {\n\t  if (prop.required && absent) {\n\t    warn(\n\t      'Missing required prop: \"' + name + '\"',\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  if (value == null && !prop.required) {\n\t    return\n\t  }\n\t  var type = prop.type;\n\t  var valid = !type || type === true;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!Array.isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    warn(\n\t      'Invalid prop: type check failed for prop \"' + name + '\".' +\n\t      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n\t      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  var validator = prop.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      warn(\n\t        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t */\n\tfunction assertType (value, type) {\n\t  var valid;\n\t  var expectedType = getType(type);\n\t  if (expectedType === 'String') {\n\t    valid = typeof value === (expectedType = 'string');\n\t  } else if (expectedType === 'Number') {\n\t    valid = typeof value === (expectedType = 'number');\n\t  } else if (expectedType === 'Boolean') {\n\t    valid = typeof value === (expectedType = 'boolean');\n\t  } else if (expectedType === 'Function') {\n\t    valid = typeof value === (expectedType = 'function');\n\t  } else if (expectedType === 'Object') {\n\t    valid = isPlainObject(value);\n\t  } else if (expectedType === 'Array') {\n\t    valid = Array.isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  }\n\t}\n\t\n\t/**\n\t * Use function string name to check built-in types,\n\t * because a simple equality check will fail when running\n\t * across different vms / iframes.\n\t */\n\tfunction getType (fn) {\n\t  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n\t  return match && match[1]\n\t}\n\t\n\tfunction isBooleanType (fn) {\n\t  if (!Array.isArray(fn)) {\n\t    return getType(fn) === 'Boolean'\n\t  }\n\t  for (var i = 0, len = fn.length; i < len; i++) {\n\t    if (getType(fn[i]) === 'Boolean') {\n\t      return true\n\t    }\n\t  }\n\t  /* istanbul ignore next */\n\t  return false\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive$$1,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\tmakeMap: makeMap,\n\t\tisBuiltInTag: isBuiltInTag,\n\t\tremove: remove$1,\n\t\thasOwn: hasOwn,\n\t\tisPrimitive: isPrimitive,\n\t\tcached: cached,\n\t\tcamelize: camelize,\n\t\tcapitalize: capitalize,\n\t\thyphenate: hyphenate,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\ttoObject: toObject,\n\t\tnoop: noop,\n\t\tno: no,\n\t\tidentity: identity,\n\t\tgenStaticKeys: genStaticKeys,\n\t\tlooseEqual: looseEqual,\n\t\tlooseIndexOf: looseIndexOf,\n\t\tisReserved: isReserved,\n\t\tdef: def,\n\t\tparsePath: parsePath,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tUA: UA,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisEdge: isEdge,\n\t\tisAndroid: isAndroid,\n\t\tisIOS: isIOS,\n\t\tisServerRendering: isServerRendering,\n\t\tdevtools: devtools,\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tget warn () { return warn; },\n\t\tget formatComponentName () { return formatComponentName; },\n\t\tvalidateProp: validateProp\n\t});\n\t\n\t/* not type checking this file because flow doesn't play well with Proxy */\n\t\n\tvar initProxy;\n\t\n\tif (false) {\n\t  var allowedGlobals = makeMap(\n\t    'Infinity,undefined,NaN,isFinite,isNaN,' +\n\t    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n\t    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n\t    'require' // for Webpack/Browserify\n\t  );\n\t\n\t  var warnNonPresent = function (target, key) {\n\t    warn(\n\t      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n\t      \"referenced during render. Make sure to declare reactive data \" +\n\t      \"properties in the data option.\",\n\t      target\n\t    );\n\t  };\n\t\n\t  var hasProxy =\n\t    typeof Proxy !== 'undefined' &&\n\t    Proxy.toString().match(/native code/);\n\t\n\t  if (hasProxy) {\n\t    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n\t    config.keyCodes = new Proxy(config.keyCodes, {\n\t      set: function set (target, key, value) {\n\t        if (isBuiltInModifier(key)) {\n\t          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n\t          return false\n\t        } else {\n\t          target[key] = value;\n\t          return true\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  var hasHandler = {\n\t    has: function has (target, key) {\n\t      var has = key in target;\n\t      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n\t      if (!has && !isAllowed) {\n\t        warnNonPresent(target, key);\n\t      }\n\t      return has || !isAllowed\n\t    }\n\t  };\n\t\n\t  var getHandler = {\n\t    get: function get (target, key) {\n\t      if (typeof key === 'string' && !(key in target)) {\n\t        warnNonPresent(target, key);\n\t      }\n\t      return target[key]\n\t    }\n\t  };\n\t\n\t  initProxy = function initProxy (vm) {\n\t    if (hasProxy) {\n\t      // determine which proxy handler to use\n\t      var options = vm.$options;\n\t      var handlers = options.render && options.render._withStripped\n\t        ? getHandler\n\t        : hasHandler;\n\t      vm._renderProxy = new Proxy(vm, handlers);\n\t    } else {\n\t      vm._renderProxy = vm;\n\t    }\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar queue = [];\n\tvar has$1 = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar flushing = false;\n\tvar index = 0;\n\t\n\t/**\n\t * Reset the scheduler's state.\n\t */\n\tfunction resetSchedulerState () {\n\t  queue.length = 0;\n\t  has$1 = {};\n\t  if (false) {\n\t    circular = {};\n\t  }\n\t  waiting = flushing = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\tfunction flushSchedulerQueue () {\n\t  flushing = true;\n\t\n\t  // Sort queue before flush.\n\t  // This ensures that:\n\t  // 1. Components are updated from parent to child. (because parent is always\n\t  //    created before the child)\n\t  // 2. A component's user watchers are run before its render watcher (because\n\t  //    user watchers are created before the render watcher)\n\t  // 3. If a component is destroyed during a parent component's watcher run,\n\t  //    its watchers can be skipped.\n\t  queue.sort(function (a, b) { return a.id - b.id; });\n\t\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (index = 0; index < queue.length; index++) {\n\t    var watcher = queue[index];\n\t    var id = watcher.id;\n\t    has$1[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn(\n\t          'You may have an infinite update loop ' + (\n\t            watcher.user\n\t              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n\t              : \"in a component render function.\"\n\t          ),\n\t          watcher.vm\n\t        );\n\t        break\n\t      }\n\t    }\n\t  }\n\t\n\t  // devtool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t\n\t  resetSchedulerState();\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t */\n\tfunction queueWatcher (watcher) {\n\t  var id = watcher.id;\n\t  if (has$1[id] == null) {\n\t    has$1[id] = true;\n\t    if (!flushing) {\n\t      queue.push(watcher);\n\t    } else {\n\t      // if already flushing, splice the watcher based on its id\n\t      // if already past its id, it will be run next immediately.\n\t      var i = queue.length - 1;\n\t      while (i >= 0 && queue[i].id > watcher.id) {\n\t        i--;\n\t      }\n\t      queue.splice(Math.max(i, index) + 1, 0, watcher);\n\t    }\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushSchedulerQueue);\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t */\n\tvar Watcher = function Watcher (\n\t  vm,\n\t  expOrFn,\n\t  cb,\n\t  options\n\t) {\n\t  if ( options === void 0 ) options = {};\n\t\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  // options\n\t  this.deep = !!options.deep;\n\t  this.user = !!options.user;\n\t  this.lazy = !!options.lazy;\n\t  this.sync = !!options.sync;\n\t  this.expression = expOrFn.toString();\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  // parse expression for getter\n\t  if (typeof expOrFn === 'function') {\n\t    this.getter = expOrFn;\n\t  } else {\n\t    this.getter = parsePath(expOrFn);\n\t    if (!this.getter) {\n\t      this.getter = function () {};\n\t      (\"production\") !== 'production' && warn(\n\t        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n\t        'Watcher only accepts simple dot-delimited paths. ' +\n\t        'For full control, use a function instead.',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t  this.value = this.lazy\n\t    ? undefined\n\t    : this.get();\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\tWatcher.prototype.get = function get () {\n\t  pushTarget(this);\n\t  var value = this.getter.call(this.vm, this.vm);\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  popTarget();\n\t  this.cleanupDeps();\n\t  return value\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t */\n\tWatcher.prototype.addDep = function addDep (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\tWatcher.prototype.cleanupDeps = function cleanupDeps () {\n\t    var this$1 = this;\n\t\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this$1.deps[i];\n\t    if (!this$1.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this$1);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t */\n\tWatcher.prototype.update = function update () {\n\t  /* istanbul ignore else */\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync) {\n\t    this.run();\n\t  } else {\n\t    queueWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Scheduler job interface.\n\t * Will be called by the scheduler.\n\t */\n\tWatcher.prototype.run = function run () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t      if (\n\t        value !== this.value ||\n\t      // Deep watchers and watchers on Object/Arrays should fire even\n\t      // when the value is the same, because the value may\n\t      // have mutated.\n\t      isObject(value) ||\n\t      this.deep\n\t    ) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      if (this.user) {\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          /* istanbul ignore else */\n\t          if (config.errorHandler) {\n\t            config.errorHandler.call(null, e, this.vm);\n\t          } else {\n\t            (\"production\") !== 'production' && warn(\n\t              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n\t              this.vm\n\t            );\n\t            throw e\n\t          }\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\tWatcher.prototype.evaluate = function evaluate () {\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\tWatcher.prototype.depend = function depend () {\n\t    var this$1 = this;\n\t\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this$1.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subscriber list.\n\t */\n\tWatcher.prototype.teardown = function teardown () {\n\t    var this$1 = this;\n\t\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      remove$1(this.vm._watchers, this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this$1.deps[i].removeSub(this$1);\n\t    }\n\t    this.active = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Recursively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t */\n\tvar seenObjects = new _Set();\n\tfunction traverse (val) {\n\t  seenObjects.clear();\n\t  _traverse(val, seenObjects);\n\t}\n\t\n\tfunction _traverse (val, seen) {\n\t  var i, keys;\n\t  var isA = Array.isArray(val);\n\t  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n\t    return\n\t  }\n\t  if (val.__ob__) {\n\t    var depId = val.__ob__.dep.id;\n\t    if (seen.has(depId)) {\n\t      return\n\t    }\n\t    seen.add(depId);\n\t  }\n\t  if (isA) {\n\t    i = val.length;\n\t    while (i--) { _traverse(val[i], seen); }\n\t  } else {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) { _traverse(val[keys[i]], seen); }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction initState (vm) {\n\t  vm._watchers = [];\n\t  initProps(vm);\n\t  initMethods(vm);\n\t  initData(vm);\n\t  initComputed(vm);\n\t  initWatch(vm);\n\t}\n\t\n\tvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\t\n\tfunction initProps (vm) {\n\t  var props = vm.$options.props;\n\t  if (props) {\n\t    var propsData = vm.$options.propsData || {};\n\t    var keys = vm.$options._propKeys = Object.keys(props);\n\t    var isRoot = !vm.$parent;\n\t    // root instance props should be converted\n\t    observerState.shouldConvert = isRoot;\n\t    var loop = function ( i ) {\n\t      var key = keys[i];\n\t      /* istanbul ignore else */\n\t      if (false) {\n\t        if (isReservedProp[key]) {\n\t          warn(\n\t            (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n\t            vm\n\t          );\n\t        }\n\t        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n\t          if (vm.$parent && !observerState.isSettingProps) {\n\t            warn(\n\t              \"Avoid mutating a prop directly since the value will be \" +\n\t              \"overwritten whenever the parent component re-renders. \" +\n\t              \"Instead, use a data or computed property based on the prop's \" +\n\t              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n\t              vm\n\t            );\n\t          }\n\t        });\n\t      } else {\n\t        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n\t      }\n\t    };\n\t\n\t    for (var i = 0; i < keys.length; i++) loop( i );\n\t    observerState.shouldConvert = true;\n\t  }\n\t}\n\t\n\tfunction initData (vm) {\n\t  var data = vm.$options.data;\n\t  data = vm._data = typeof data === 'function'\n\t    ? data.call(vm)\n\t    : data || {};\n\t  if (!isPlainObject(data)) {\n\t    data = {};\n\t    (\"production\") !== 'production' && warn(\n\t      'data functions should return an object:\\n' +\n\t      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n\t      vm\n\t    );\n\t  }\n\t  // proxy data on instance\n\t  var keys = Object.keys(data);\n\t  var props = vm.$options.props;\n\t  var i = keys.length;\n\t  while (i--) {\n\t    if (props && hasOwn(props, keys[i])) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n\t        \"Use prop default value instead.\",\n\t        vm\n\t      );\n\t    } else {\n\t      proxy(vm, keys[i]);\n\t    }\n\t  }\n\t  // observe data\n\t  observe(data);\n\t  data.__ob__ && data.__ob__.vmCount++;\n\t}\n\t\n\tvar computedSharedDefinition = {\n\t  enumerable: true,\n\t  configurable: true,\n\t  get: noop,\n\t  set: noop\n\t};\n\t\n\tfunction initComputed (vm) {\n\t  var computed = vm.$options.computed;\n\t  if (computed) {\n\t    for (var key in computed) {\n\t      var userDef = computed[key];\n\t      if (typeof userDef === 'function') {\n\t        computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n\t        computedSharedDefinition.set = noop;\n\t      } else {\n\t        computedSharedDefinition.get = userDef.get\n\t          ? userDef.cache !== false\n\t            ? makeComputedGetter(userDef.get, vm)\n\t            : bind$1(userDef.get, vm)\n\t          : noop;\n\t        computedSharedDefinition.set = userDef.set\n\t          ? bind$1(userDef.set, vm)\n\t          : noop;\n\t      }\n\t      Object.defineProperty(vm, key, computedSharedDefinition);\n\t    }\n\t  }\n\t}\n\t\n\tfunction makeComputedGetter (getter, owner) {\n\t  var watcher = new Watcher(owner, getter, noop, {\n\t    lazy: true\n\t  });\n\t  return function computedGetter () {\n\t    if (watcher.dirty) {\n\t      watcher.evaluate();\n\t    }\n\t    if (Dep.target) {\n\t      watcher.depend();\n\t    }\n\t    return watcher.value\n\t  }\n\t}\n\t\n\tfunction initMethods (vm) {\n\t  var methods = vm.$options.methods;\n\t  if (methods) {\n\t    for (var key in methods) {\n\t      vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n\t      if (false) {\n\t        warn(\n\t          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n\t          \"Did you reference the function correctly?\",\n\t          vm\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction initWatch (vm) {\n\t  var watch = vm.$options.watch;\n\t  if (watch) {\n\t    for (var key in watch) {\n\t      var handler = watch[key];\n\t      if (Array.isArray(handler)) {\n\t        for (var i = 0; i < handler.length; i++) {\n\t          createWatcher(vm, key, handler[i]);\n\t        }\n\t      } else {\n\t        createWatcher(vm, key, handler);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction createWatcher (vm, key, handler) {\n\t  var options;\n\t  if (isPlainObject(handler)) {\n\t    options = handler;\n\t    handler = handler.handler;\n\t  }\n\t  if (typeof handler === 'string') {\n\t    handler = vm[handler];\n\t  }\n\t  vm.$watch(key, handler, options);\n\t}\n\t\n\tfunction stateMixin (Vue) {\n\t  // flow somehow has problems with directly declared definition object\n\t  // when using Object.defineProperty, so we have to procedurally build up\n\t  // the object here.\n\t  var dataDef = {};\n\t  dataDef.get = function () {\n\t    return this._data\n\t  };\n\t  if (false) {\n\t    dataDef.set = function (newData) {\n\t      warn(\n\t        'Avoid replacing instance root $data. ' +\n\t        'Use nested data properties instead.',\n\t        this\n\t      );\n\t    };\n\t  }\n\t  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\t\n\t  Vue.prototype.$set = set$1;\n\t  Vue.prototype.$delete = del;\n\t\n\t  Vue.prototype.$watch = function (\n\t    expOrFn,\n\t    cb,\n\t    options\n\t  ) {\n\t    var vm = this;\n\t    options = options || {};\n\t    options.user = true;\n\t    var watcher = new Watcher(vm, expOrFn, cb, options);\n\t    if (options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn () {\n\t      watcher.teardown();\n\t    }\n\t  };\n\t}\n\t\n\tfunction proxy (vm, key) {\n\t  if (!isReserved(key)) {\n\t    Object.defineProperty(vm, key, {\n\t      configurable: true,\n\t      enumerable: true,\n\t      get: function proxyGetter () {\n\t        return vm._data[key]\n\t      },\n\t      set: function proxySetter (val) {\n\t        vm._data[key] = val;\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar VNode = function VNode (\n\t  tag,\n\t  data,\n\t  children,\n\t  text,\n\t  elm,\n\t  context,\n\t  componentOptions\n\t) {\n\t  this.tag = tag;\n\t  this.data = data;\n\t  this.children = children;\n\t  this.text = text;\n\t  this.elm = elm;\n\t  this.ns = undefined;\n\t  this.context = context;\n\t  this.functionalContext = undefined;\n\t  this.key = data && data.key;\n\t  this.componentOptions = componentOptions;\n\t  this.child = undefined;\n\t  this.parent = undefined;\n\t  this.raw = false;\n\t  this.isStatic = false;\n\t  this.isRootInsert = true;\n\t  this.isComment = false;\n\t  this.isCloned = false;\n\t  this.isOnce = false;\n\t};\n\t\n\tvar createEmptyVNode = function () {\n\t  var node = new VNode();\n\t  node.text = '';\n\t  node.isComment = true;\n\t  return node\n\t};\n\t\n\tfunction createTextVNode (val) {\n\t  return new VNode(undefined, undefined, undefined, String(val))\n\t}\n\t\n\t// optimized shallow clone\n\t// used for static nodes and slot nodes because they may be reused across\n\t// multiple renders, cloning them avoids errors when DOM manipulations rely\n\t// on their elm reference.\n\tfunction cloneVNode (vnode) {\n\t  var cloned = new VNode(\n\t    vnode.tag,\n\t    vnode.data,\n\t    vnode.children,\n\t    vnode.text,\n\t    vnode.elm,\n\t    vnode.context,\n\t    vnode.componentOptions\n\t  );\n\t  cloned.ns = vnode.ns;\n\t  cloned.isStatic = vnode.isStatic;\n\t  cloned.key = vnode.key;\n\t  cloned.isCloned = true;\n\t  return cloned\n\t}\n\t\n\tfunction cloneVNodes (vnodes) {\n\t  var res = new Array(vnodes.length);\n\t  for (var i = 0; i < vnodes.length; i++) {\n\t    res[i] = cloneVNode(vnodes[i]);\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tvar activeInstance = null;\n\t\n\tfunction initLifecycle (vm) {\n\t  var options = vm.$options;\n\t\n\t  // locate first non-abstract parent\n\t  var parent = options.parent;\n\t  if (parent && !options.abstract) {\n\t    while (parent.$options.abstract && parent.$parent) {\n\t      parent = parent.$parent;\n\t    }\n\t    parent.$children.push(vm);\n\t  }\n\t\n\t  vm.$parent = parent;\n\t  vm.$root = parent ? parent.$root : vm;\n\t\n\t  vm.$children = [];\n\t  vm.$refs = {};\n\t\n\t  vm._watcher = null;\n\t  vm._inactive = false;\n\t  vm._isMounted = false;\n\t  vm._isDestroyed = false;\n\t  vm._isBeingDestroyed = false;\n\t}\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  Vue.prototype._mount = function (\n\t    el,\n\t    hydrating\n\t  ) {\n\t    var vm = this;\n\t    vm.$el = el;\n\t    if (!vm.$options.render) {\n\t      vm.$options.render = createEmptyVNode;\n\t      if (false) {\n\t        /* istanbul ignore if */\n\t        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n\t          warn(\n\t            'You are using the runtime-only build of Vue where the template ' +\n\t            'option is not available. Either pre-compile the templates into ' +\n\t            'render functions, or use the compiler-included build.',\n\t            vm\n\t          );\n\t        } else {\n\t          warn(\n\t            'Failed to mount component: template or render function not defined.',\n\t            vm\n\t          );\n\t        }\n\t      }\n\t    }\n\t    callHook(vm, 'beforeMount');\n\t    vm._watcher = new Watcher(vm, function () {\n\t      vm._update(vm._render(), hydrating);\n\t    }, noop);\n\t    hydrating = false;\n\t    // manually mounted instance, call mounted on self\n\t    // mounted is called for render-created child components in its inserted hook\n\t    if (vm.$vnode == null) {\n\t      vm._isMounted = true;\n\t      callHook(vm, 'mounted');\n\t    }\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype._update = function (vnode, hydrating) {\n\t    var vm = this;\n\t    if (vm._isMounted) {\n\t      callHook(vm, 'beforeUpdate');\n\t    }\n\t    var prevEl = vm.$el;\n\t    var prevVnode = vm._vnode;\n\t    var prevActiveInstance = activeInstance;\n\t    activeInstance = vm;\n\t    vm._vnode = vnode;\n\t    // Vue.prototype.__patch__ is injected in entry points\n\t    // based on the rendering backend used.\n\t    if (!prevVnode) {\n\t      // initial render\n\t      vm.$el = vm.__patch__(\n\t        vm.$el, vnode, hydrating, false /* removeOnly */,\n\t        vm.$options._parentElm,\n\t        vm.$options._refElm\n\t      );\n\t    } else {\n\t      // updates\n\t      vm.$el = vm.__patch__(prevVnode, vnode);\n\t    }\n\t    activeInstance = prevActiveInstance;\n\t    // update __vue__ reference\n\t    if (prevEl) {\n\t      prevEl.__vue__ = null;\n\t    }\n\t    if (vm.$el) {\n\t      vm.$el.__vue__ = vm;\n\t    }\n\t    // if parent is an HOC, update its $el as well\n\t    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n\t      vm.$parent.$el = vm.$el;\n\t    }\n\t    if (vm._isMounted) {\n\t      callHook(vm, 'updated');\n\t    }\n\t  };\n\t\n\t  Vue.prototype._updateFromParent = function (\n\t    propsData,\n\t    listeners,\n\t    parentVnode,\n\t    renderChildren\n\t  ) {\n\t    var vm = this;\n\t    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n\t    vm.$options._parentVnode = parentVnode;\n\t    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\t    if (vm._vnode) { // update child tree's parent\n\t      vm._vnode.parent = parentVnode;\n\t    }\n\t    vm.$options._renderChildren = renderChildren;\n\t    // update props\n\t    if (propsData && vm.$options.props) {\n\t      observerState.shouldConvert = false;\n\t      if (false) {\n\t        observerState.isSettingProps = true;\n\t      }\n\t      var propKeys = vm.$options._propKeys || [];\n\t      for (var i = 0; i < propKeys.length; i++) {\n\t        var key = propKeys[i];\n\t        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n\t      }\n\t      observerState.shouldConvert = true;\n\t      if (false) {\n\t        observerState.isSettingProps = false;\n\t      }\n\t      vm.$options.propsData = propsData;\n\t    }\n\t    // update listeners\n\t    if (listeners) {\n\t      var oldListeners = vm.$options._parentListeners;\n\t      vm.$options._parentListeners = listeners;\n\t      vm._updateListeners(listeners, oldListeners);\n\t    }\n\t    // resolve slots + force update if has children\n\t    if (hasChildren) {\n\t      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n\t      vm.$forceUpdate();\n\t    }\n\t  };\n\t\n\t  Vue.prototype.$forceUpdate = function () {\n\t    var vm = this;\n\t    if (vm._watcher) {\n\t      vm._watcher.update();\n\t    }\n\t  };\n\t\n\t  Vue.prototype.$destroy = function () {\n\t    var vm = this;\n\t    if (vm._isBeingDestroyed) {\n\t      return\n\t    }\n\t    callHook(vm, 'beforeDestroy');\n\t    vm._isBeingDestroyed = true;\n\t    // remove self from parent\n\t    var parent = vm.$parent;\n\t    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n\t      remove$1(parent.$children, vm);\n\t    }\n\t    // teardown watchers\n\t    if (vm._watcher) {\n\t      vm._watcher.teardown();\n\t    }\n\t    var i = vm._watchers.length;\n\t    while (i--) {\n\t      vm._watchers[i].teardown();\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (vm._data.__ob__) {\n\t      vm._data.__ob__.vmCount--;\n\t    }\n\t    // call the last hook...\n\t    vm._isDestroyed = true;\n\t    callHook(vm, 'destroyed');\n\t    // turn off all instance listeners.\n\t    vm.$off();\n\t    // remove __vue__ reference\n\t    if (vm.$el) {\n\t      vm.$el.__vue__ = null;\n\t    }\n\t    // invoke destroy hooks on current rendered tree\n\t    vm.__patch__(vm._vnode, null);\n\t  };\n\t}\n\t\n\tfunction callHook (vm, hook) {\n\t  var handlers = vm.$options[hook];\n\t  if (handlers) {\n\t    for (var i = 0, j = handlers.length; i < j; i++) {\n\t      handlers[i].call(vm);\n\t    }\n\t  }\n\t  vm.$emit('hook:' + hook);\n\t}\n\t\n\t/*  */\n\t\n\tvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\n\tvar hooksToMerge = Object.keys(hooks);\n\t\n\tfunction createComponent (\n\t  Ctor,\n\t  data,\n\t  context,\n\t  children,\n\t  tag\n\t) {\n\t  if (!Ctor) {\n\t    return\n\t  }\n\t\n\t  var baseCtor = context.$options._base;\n\t  if (isObject(Ctor)) {\n\t    Ctor = baseCtor.extend(Ctor);\n\t  }\n\t\n\t  if (typeof Ctor !== 'function') {\n\t    if (false) {\n\t      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n\t    }\n\t    return\n\t  }\n\t\n\t  // async component\n\t  if (!Ctor.cid) {\n\t    if (Ctor.resolved) {\n\t      Ctor = Ctor.resolved;\n\t    } else {\n\t      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n\t        // it's ok to queue this on every render because\n\t        // $forceUpdate is buffered by the scheduler.\n\t        context.$forceUpdate();\n\t      });\n\t      if (!Ctor) {\n\t        // return nothing if this is indeed an async component\n\t        // wait for the callback to trigger parent update.\n\t        return\n\t      }\n\t    }\n\t  }\n\t\n\t  // resolve constructor options in case global mixins are applied after\n\t  // component constructor creation\n\t  resolveConstructorOptions(Ctor);\n\t\n\t  data = data || {};\n\t\n\t  // extract props\n\t  var propsData = extractProps(data, Ctor);\n\t\n\t  // functional component\n\t  if (Ctor.options.functional) {\n\t    return createFunctionalComponent(Ctor, propsData, data, context, children)\n\t  }\n\t\n\t  // extract listeners, since these needs to be treated as\n\t  // child component listeners instead of DOM listeners\n\t  var listeners = data.on;\n\t  // replace with listeners with .native modifier\n\t  data.on = data.nativeOn;\n\t\n\t  if (Ctor.options.abstract) {\n\t    // abstract components do not keep anything\n\t    // other than props & listeners\n\t    data = {};\n\t  }\n\t\n\t  // merge component management hooks onto the placeholder node\n\t  mergeHooks(data);\n\t\n\t  // return a placeholder vnode\n\t  var name = Ctor.options.name || tag;\n\t  var vnode = new VNode(\n\t    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n\t    data, undefined, undefined, undefined, context,\n\t    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n\t  );\n\t  return vnode\n\t}\n\t\n\tfunction createFunctionalComponent (\n\t  Ctor,\n\t  propsData,\n\t  data,\n\t  context,\n\t  children\n\t) {\n\t  var props = {};\n\t  var propOptions = Ctor.options.props;\n\t  if (propOptions) {\n\t    for (var key in propOptions) {\n\t      props[key] = validateProp(key, propOptions, propsData);\n\t    }\n\t  }\n\t  // ensure the createElement function in functional components\n\t  // gets a unique context - this is necessary for correct named slot check\n\t  var _context = Object.create(context);\n\t  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n\t  var vnode = Ctor.options.render.call(null, h, {\n\t    props: props,\n\t    data: data,\n\t    parent: context,\n\t    children: children,\n\t    slots: function () { return resolveSlots(children, context); }\n\t  });\n\t  if (vnode instanceof VNode) {\n\t    vnode.functionalContext = context;\n\t    if (data.slot) {\n\t      (vnode.data || (vnode.data = {})).slot = data.slot;\n\t    }\n\t  }\n\t  return vnode\n\t}\n\t\n\tfunction createComponentInstanceForVnode (\n\t  vnode, // we know it's MountedComponentVNode but flow doesn't\n\t  parent, // activeInstance in lifecycle state\n\t  parentElm,\n\t  refElm\n\t) {\n\t  var vnodeComponentOptions = vnode.componentOptions;\n\t  var options = {\n\t    _isComponent: true,\n\t    parent: parent,\n\t    propsData: vnodeComponentOptions.propsData,\n\t    _componentTag: vnodeComponentOptions.tag,\n\t    _parentVnode: vnode,\n\t    _parentListeners: vnodeComponentOptions.listeners,\n\t    _renderChildren: vnodeComponentOptions.children,\n\t    _parentElm: parentElm || null,\n\t    _refElm: refElm || null\n\t  };\n\t  // check inline-template render functions\n\t  var inlineTemplate = vnode.data.inlineTemplate;\n\t  if (inlineTemplate) {\n\t    options.render = inlineTemplate.render;\n\t    options.staticRenderFns = inlineTemplate.staticRenderFns;\n\t  }\n\t  return new vnodeComponentOptions.Ctor(options)\n\t}\n\t\n\tfunction init (\n\t  vnode,\n\t  hydrating,\n\t  parentElm,\n\t  refElm\n\t) {\n\t  if (!vnode.child || vnode.child._isDestroyed) {\n\t    var child = vnode.child = createComponentInstanceForVnode(\n\t      vnode,\n\t      activeInstance,\n\t      parentElm,\n\t      refElm\n\t    );\n\t    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n\t  } else if (vnode.data.keepAlive) {\n\t    // kept-alive components, treat as a patch\n\t    var mountedNode = vnode; // work around flow\n\t    prepatch(mountedNode, mountedNode);\n\t  }\n\t}\n\t\n\tfunction prepatch (\n\t  oldVnode,\n\t  vnode\n\t) {\n\t  var options = vnode.componentOptions;\n\t  var child = vnode.child = oldVnode.child;\n\t  child._updateFromParent(\n\t    options.propsData, // updated props\n\t    options.listeners, // updated listeners\n\t    vnode, // new parent vnode\n\t    options.children // new children\n\t  );\n\t}\n\t\n\tfunction insert (vnode) {\n\t  if (!vnode.child._isMounted) {\n\t    vnode.child._isMounted = true;\n\t    callHook(vnode.child, 'mounted');\n\t  }\n\t  if (vnode.data.keepAlive) {\n\t    vnode.child._inactive = false;\n\t    callHook(vnode.child, 'activated');\n\t  }\n\t}\n\t\n\tfunction destroy$1 (vnode) {\n\t  if (!vnode.child._isDestroyed) {\n\t    if (!vnode.data.keepAlive) {\n\t      vnode.child.$destroy();\n\t    } else {\n\t      vnode.child._inactive = true;\n\t      callHook(vnode.child, 'deactivated');\n\t    }\n\t  }\n\t}\n\t\n\tfunction resolveAsyncComponent (\n\t  factory,\n\t  baseCtor,\n\t  cb\n\t) {\n\t  if (factory.requested) {\n\t    // pool callbacks\n\t    factory.pendingCallbacks.push(cb);\n\t  } else {\n\t    factory.requested = true;\n\t    var cbs = factory.pendingCallbacks = [cb];\n\t    var sync = true;\n\t\n\t    var resolve = function (res) {\n\t      if (isObject(res)) {\n\t        res = baseCtor.extend(res);\n\t      }\n\t      // cache resolved\n\t      factory.resolved = res;\n\t      // invoke callbacks only if this is not a synchronous resolve\n\t      // (async resolves are shimmed as synchronous during SSR)\n\t      if (!sync) {\n\t        for (var i = 0, l = cbs.length; i < l; i++) {\n\t          cbs[i](res);\n\t        }\n\t      }\n\t    };\n\t\n\t    var reject = function (reason) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"Failed to resolve async component: \" + (String(factory)) +\n\t        (reason ? (\"\\nReason: \" + reason) : '')\n\t      );\n\t    };\n\t\n\t    var res = factory(resolve, reject);\n\t\n\t    // handle promise\n\t    if (res && typeof res.then === 'function' && !factory.resolved) {\n\t      res.then(resolve, reject);\n\t    }\n\t\n\t    sync = false;\n\t    // return in case resolved synchronously\n\t    return factory.resolved\n\t  }\n\t}\n\t\n\tfunction extractProps (data, Ctor) {\n\t  // we are only extracting raw values here.\n\t  // validation and default values are handled in the child\n\t  // component itself.\n\t  var propOptions = Ctor.options.props;\n\t  if (!propOptions) {\n\t    return\n\t  }\n\t  var res = {};\n\t  var attrs = data.attrs;\n\t  var props = data.props;\n\t  var domProps = data.domProps;\n\t  if (attrs || props || domProps) {\n\t    for (var key in propOptions) {\n\t      var altKey = hyphenate(key);\n\t      checkProp(res, props, key, altKey, true) ||\n\t      checkProp(res, attrs, key, altKey) ||\n\t      checkProp(res, domProps, key, altKey);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\tfunction checkProp (\n\t  res,\n\t  hash,\n\t  key,\n\t  altKey,\n\t  preserve\n\t) {\n\t  if (hash) {\n\t    if (hasOwn(hash, key)) {\n\t      res[key] = hash[key];\n\t      if (!preserve) {\n\t        delete hash[key];\n\t      }\n\t      return true\n\t    } else if (hasOwn(hash, altKey)) {\n\t      res[key] = hash[altKey];\n\t      if (!preserve) {\n\t        delete hash[altKey];\n\t      }\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t}\n\t\n\tfunction mergeHooks (data) {\n\t  if (!data.hook) {\n\t    data.hook = {};\n\t  }\n\t  for (var i = 0; i < hooksToMerge.length; i++) {\n\t    var key = hooksToMerge[i];\n\t    var fromParent = data.hook[key];\n\t    var ours = hooks[key];\n\t    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n\t  }\n\t}\n\t\n\tfunction mergeHook$1 (one, two) {\n\t  return function (a, b, c, d) {\n\t    one(a, b, c, d);\n\t    two(a, b, c, d);\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction mergeVNodeHook (def, hookKey, hook, key) {\n\t  key = key + hookKey;\n\t  var injectedHash = def.__injected || (def.__injected = {});\n\t  if (!injectedHash[key]) {\n\t    injectedHash[key] = true;\n\t    var oldHook = def[hookKey];\n\t    if (oldHook) {\n\t      def[hookKey] = function () {\n\t        oldHook.apply(this, arguments);\n\t        hook.apply(this, arguments);\n\t      };\n\t    } else {\n\t      def[hookKey] = hook;\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction updateListeners (\n\t  on,\n\t  oldOn,\n\t  add,\n\t  remove$$1,\n\t  vm\n\t) {\n\t  var name, cur, old, fn, event, capture, once;\n\t  for (name in on) {\n\t    cur = on[name];\n\t    old = oldOn[name];\n\t    if (!cur) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n\t        vm\n\t      );\n\t    } else if (!old) {\n\t      once = name.charAt(0) === '~'; // Prefixed last, checked first\n\t      event = once ? name.slice(1) : name;\n\t      capture = event.charAt(0) === '!';\n\t      event = capture ? event.slice(1) : event;\n\t      if (Array.isArray(cur)) {\n\t        add(event, (cur.invoker = arrInvoker(cur)), once, capture);\n\t      } else {\n\t        if (!cur.invoker) {\n\t          fn = cur;\n\t          cur = on[name] = {};\n\t          cur.fn = fn;\n\t          cur.invoker = fnInvoker(cur);\n\t        }\n\t        add(event, cur.invoker, once, capture);\n\t      }\n\t    } else if (cur !== old) {\n\t      if (Array.isArray(old)) {\n\t        old.length = cur.length;\n\t        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n\t        on[name] = old;\n\t      } else {\n\t        old.fn = cur;\n\t        on[name] = old;\n\t      }\n\t    }\n\t  }\n\t  for (name in oldOn) {\n\t    if (!on[name]) {\n\t      once = name.charAt(0) === '~'; // Prefixed last, checked first\n\t      event = once ? name.slice(1) : name;\n\t      capture = event.charAt(0) === '!';\n\t      event = capture ? event.slice(1) : event;\n\t      remove$$1(event, oldOn[name].invoker, capture);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrInvoker (arr) {\n\t  return function (ev) {\n\t    var arguments$1 = arguments;\n\t\n\t    var single = arguments.length === 1;\n\t    for (var i = 0; i < arr.length; i++) {\n\t      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fnInvoker (o) {\n\t  return function (ev) {\n\t    var single = arguments.length === 1;\n\t    single ? o.fn(ev) : o.fn.apply(null, arguments);\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction normalizeChildren (children) {\n\t  return isPrimitive(children)\n\t    ? [createTextVNode(children)]\n\t    : Array.isArray(children)\n\t      ? normalizeArrayChildren(children)\n\t      : undefined\n\t}\n\t\n\tfunction normalizeArrayChildren (children, nestedIndex) {\n\t  var res = [];\n\t  var i, c, last;\n\t  for (i = 0; i < children.length; i++) {\n\t    c = children[i];\n\t    if (c == null || typeof c === 'boolean') { continue }\n\t    last = res[res.length - 1];\n\t    //  nested\n\t    if (Array.isArray(c)) {\n\t      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n\t    } else if (isPrimitive(c)) {\n\t      if (last && last.text) {\n\t        last.text += String(c);\n\t      } else if (c !== '') {\n\t        // convert primitive to vnode\n\t        res.push(createTextVNode(c));\n\t      }\n\t    } else {\n\t      if (c.text && last && last.text) {\n\t        res[res.length - 1] = createTextVNode(last.text + c.text);\n\t      } else {\n\t        // default key for nested array children (likely generated by v-for)\n\t        if (c.tag && c.key == null && nestedIndex != null) {\n\t          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n\t        }\n\t        res.push(c);\n\t      }\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tfunction getFirstComponentChild (children) {\n\t  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n\t}\n\t\n\t/*  */\n\t\n\t// wrapper function for providing a more flexible interface\n\t// without getting yelled at by flow\n\tfunction createElement (\n\t  context,\n\t  tag,\n\t  data,\n\t  children,\n\t  needNormalization,\n\t  alwaysNormalize\n\t) {\n\t  if (Array.isArray(data) || isPrimitive(data)) {\n\t    needNormalization = children;\n\t    children = data;\n\t    data = undefined;\n\t  }\n\t  if (alwaysNormalize) { needNormalization = true; }\n\t  return _createElement(context, tag, data, children, needNormalization)\n\t}\n\t\n\tfunction _createElement (\n\t  context,\n\t  tag,\n\t  data,\n\t  children,\n\t  needNormalization\n\t) {\n\t  if (data && data.__ob__) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n\t      'Always create fresh vnode data objects in each render!',\n\t      context\n\t    );\n\t    return createEmptyVNode()\n\t  }\n\t  if (!tag) {\n\t    // in case of component :is set to falsy value\n\t    return createEmptyVNode()\n\t  }\n\t  // support single function children as default scoped slot\n\t  if (Array.isArray(children) &&\n\t      typeof children[0] === 'function') {\n\t    data = data || {};\n\t    data.scopedSlots = { default: children[0] };\n\t    children.length = 0;\n\t  }\n\t  if (needNormalization) {\n\t    children = normalizeChildren(children);\n\t  }\n\t  var vnode, ns;\n\t  if (typeof tag === 'string') {\n\t    var Ctor;\n\t    ns = config.getTagNamespace(tag);\n\t    if (config.isReservedTag(tag)) {\n\t      // platform built-in elements\n\t      vnode = new VNode(\n\t        config.parsePlatformTagName(tag), data, children,\n\t        undefined, undefined, context\n\t      );\n\t    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n\t      // component\n\t      vnode = createComponent(Ctor, data, context, children, tag);\n\t    } else {\n\t      // unknown or unlisted namespaced elements\n\t      // check at runtime because it may get assigned a namespace when its\n\t      // parent normalizes children\n\t      ns = tag === 'foreignObject' ? 'xhtml' : ns;\n\t      vnode = new VNode(\n\t        tag, data, children,\n\t        undefined, undefined, context\n\t      );\n\t    }\n\t  } else {\n\t    // direct component options / constructor\n\t    vnode = createComponent(tag, data, context, children);\n\t  }\n\t  if (vnode) {\n\t    if (ns) { applyNS(vnode, ns); }\n\t    return vnode\n\t  } else {\n\t    return createEmptyVNode()\n\t  }\n\t}\n\t\n\tfunction applyNS (vnode, ns) {\n\t  vnode.ns = ns;\n\t  if (vnode.children) {\n\t    for (var i = 0, l = vnode.children.length; i < l; i++) {\n\t      var child = vnode.children[i];\n\t      if (child.tag && !child.ns) {\n\t        applyNS(child, ns);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction initRender (vm) {\n\t  vm.$vnode = null; // the placeholder node in parent tree\n\t  vm._vnode = null; // the root of the child tree\n\t  vm._staticTrees = null;\n\t  var parentVnode = vm.$options._parentVnode;\n\t  var renderContext = parentVnode && parentVnode.context;\n\t  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n\t  vm.$scopedSlots = {};\n\t  // bind the createElement fn to this instance\n\t  // so that we get proper render context inside it.\n\t  // args order: tag, data, children, needNormalization, alwaysNormalize\n\t  // internal version is used by render functions compiled from templates\n\t  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n\t  // normalization is always applied for the public version, used in\n\t  // user-written render functions.\n\t  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\t  if (vm.$options.el) {\n\t    vm.$mount(vm.$options.el);\n\t  }\n\t}\n\t\n\tfunction renderMixin (Vue) {\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    return nextTick(fn, this)\n\t  };\n\t\n\t  Vue.prototype._render = function () {\n\t    var vm = this;\n\t    var ref = vm.$options;\n\t    var render = ref.render;\n\t    var staticRenderFns = ref.staticRenderFns;\n\t    var _parentVnode = ref._parentVnode;\n\t\n\t    if (vm._isMounted) {\n\t      // clone slot nodes on re-renders\n\t      for (var key in vm.$slots) {\n\t        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n\t      }\n\t    }\n\t\n\t    if (_parentVnode && _parentVnode.data.scopedSlots) {\n\t      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n\t    }\n\t\n\t    if (staticRenderFns && !vm._staticTrees) {\n\t      vm._staticTrees = [];\n\t    }\n\t    // set parent vnode. this allows render functions to have access\n\t    // to the data on the placeholder node.\n\t    vm.$vnode = _parentVnode;\n\t    // render self\n\t    var vnode;\n\t    try {\n\t      vnode = render.call(vm._renderProxy, vm.$createElement);\n\t    } catch (e) {\n\t      /* istanbul ignore else */\n\t      if (config.errorHandler) {\n\t        config.errorHandler.call(null, e, vm);\n\t      } else {\n\t        if (false) {\n\t          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n\t        }\n\t        throw e\n\t      }\n\t      // return previous vnode to prevent render error causing blank component\n\t      vnode = vm._vnode;\n\t    }\n\t    // return empty vnode in case the render function errored out\n\t    if (!(vnode instanceof VNode)) {\n\t      if (false) {\n\t        warn(\n\t          'Multiple root nodes returned from render function. Render function ' +\n\t          'should return a single root node.',\n\t          vm\n\t        );\n\t      }\n\t      vnode = createEmptyVNode();\n\t    }\n\t    // set parent\n\t    vnode.parent = _parentVnode;\n\t    return vnode\n\t  };\n\t\n\t  // toString for mustaches\n\t  Vue.prototype._s = _toString;\n\t  // convert text to vnode\n\t  Vue.prototype._v = createTextVNode;\n\t  // number conversion\n\t  Vue.prototype._n = toNumber;\n\t  // empty vnode\n\t  Vue.prototype._e = createEmptyVNode;\n\t  // loose equal\n\t  Vue.prototype._q = looseEqual;\n\t  // loose indexOf\n\t  Vue.prototype._i = looseIndexOf;\n\t\n\t  // render static tree by index\n\t  Vue.prototype._m = function renderStatic (\n\t    index,\n\t    isInFor\n\t  ) {\n\t    var tree = this._staticTrees[index];\n\t    // if has already-rendered static tree and not inside v-for,\n\t    // we can reuse the same tree by doing a shallow clone.\n\t    if (tree && !isInFor) {\n\t      return Array.isArray(tree)\n\t        ? cloneVNodes(tree)\n\t        : cloneVNode(tree)\n\t    }\n\t    // otherwise, render a fresh tree.\n\t    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n\t    markStatic(tree, (\"__static__\" + index), false);\n\t    return tree\n\t  };\n\t\n\t  // mark node as static (v-once)\n\t  Vue.prototype._o = function markOnce (\n\t    tree,\n\t    index,\n\t    key\n\t  ) {\n\t    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n\t    return tree\n\t  };\n\t\n\t  function markStatic (tree, key, isOnce) {\n\t    if (Array.isArray(tree)) {\n\t      for (var i = 0; i < tree.length; i++) {\n\t        if (tree[i] && typeof tree[i] !== 'string') {\n\t          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n\t        }\n\t      }\n\t    } else {\n\t      markStaticNode(tree, key, isOnce);\n\t    }\n\t  }\n\t\n\t  function markStaticNode (node, key, isOnce) {\n\t    node.isStatic = true;\n\t    node.key = key;\n\t    node.isOnce = isOnce;\n\t  }\n\t\n\t  // filter resolution helper\n\t  Vue.prototype._f = function resolveFilter (id) {\n\t    return resolveAsset(this.$options, 'filters', id, true) || identity\n\t  };\n\t\n\t  // render v-for\n\t  Vue.prototype._l = function renderList (\n\t    val,\n\t    render\n\t  ) {\n\t    var ret, i, l, keys, key;\n\t    if (Array.isArray(val)) {\n\t      ret = new Array(val.length);\n\t      for (i = 0, l = val.length; i < l; i++) {\n\t        ret[i] = render(val[i], i);\n\t      }\n\t    } else if (typeof val === 'number') {\n\t      ret = new Array(val);\n\t      for (i = 0; i < val; i++) {\n\t        ret[i] = render(i + 1, i);\n\t      }\n\t    } else if (isObject(val)) {\n\t      keys = Object.keys(val);\n\t      ret = new Array(keys.length);\n\t      for (i = 0, l = keys.length; i < l; i++) {\n\t        key = keys[i];\n\t        ret[i] = render(val[key], key, i);\n\t      }\n\t    }\n\t    return ret\n\t  };\n\t\n\t  // renderSlot\n\t  Vue.prototype._t = function (\n\t    name,\n\t    fallback,\n\t    props\n\t  ) {\n\t    var scopedSlotFn = this.$scopedSlots[name];\n\t    if (scopedSlotFn) { // scoped slot\n\t      return scopedSlotFn(props || {}) || fallback\n\t    } else {\n\t      var slotNodes = this.$slots[name];\n\t      // warn duplicate slot usage\n\t      if (slotNodes && (\"production\") !== 'production') {\n\t        slotNodes._rendered && warn(\n\t          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n\t          \"- this will likely cause render errors.\",\n\t          this\n\t        );\n\t        slotNodes._rendered = true;\n\t      }\n\t      return slotNodes || fallback\n\t    }\n\t  };\n\t\n\t  // apply v-bind object\n\t  Vue.prototype._b = function bindProps (\n\t    data,\n\t    tag,\n\t    value,\n\t    asProp\n\t  ) {\n\t    if (value) {\n\t      if (!isObject(value)) {\n\t        (\"production\") !== 'production' && warn(\n\t          'v-bind without argument expects an Object or Array value',\n\t          this\n\t        );\n\t      } else {\n\t        if (Array.isArray(value)) {\n\t          value = toObject(value);\n\t        }\n\t        for (var key in value) {\n\t          if (key === 'class' || key === 'style') {\n\t            data[key] = value[key];\n\t          } else {\n\t            var hash = asProp || config.mustUseProp(tag, key)\n\t              ? data.domProps || (data.domProps = {})\n\t              : data.attrs || (data.attrs = {});\n\t            hash[key] = value[key];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return data\n\t  };\n\t\n\t  // check v-on keyCodes\n\t  Vue.prototype._k = function checkKeyCodes (\n\t    eventKeyCode,\n\t    key,\n\t    builtInAlias\n\t  ) {\n\t    var keyCodes = config.keyCodes[key] || builtInAlias;\n\t    if (Array.isArray(keyCodes)) {\n\t      return keyCodes.indexOf(eventKeyCode) === -1\n\t    } else {\n\t      return keyCodes !== eventKeyCode\n\t    }\n\t  };\n\t}\n\t\n\tfunction resolveSlots (\n\t  children,\n\t  context\n\t) {\n\t  var slots = {};\n\t  if (!children) {\n\t    return slots\n\t  }\n\t  var defaultSlot = [];\n\t  var name, child;\n\t  for (var i = 0, l = children.length; i < l; i++) {\n\t    child = children[i];\n\t    // named slots should only be respected if the vnode was rendered in the\n\t    // same context.\n\t    if ((child.context === context || child.functionalContext === context) &&\n\t        child.data && (name = child.data.slot)) {\n\t      var slot = (slots[name] || (slots[name] = []));\n\t      if (child.tag === 'template') {\n\t        slot.push.apply(slot, child.children);\n\t      } else {\n\t        slot.push(child);\n\t      }\n\t    } else {\n\t      defaultSlot.push(child);\n\t    }\n\t  }\n\t  // ignore single whitespace\n\t  if (defaultSlot.length && !(\n\t    defaultSlot.length === 1 &&\n\t    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n\t  )) {\n\t    slots.default = defaultSlot;\n\t  }\n\t  return slots\n\t}\n\t\n\t/*  */\n\t\n\tfunction initEvents (vm) {\n\t  vm._events = Object.create(null);\n\t  // init parent attached events\n\t  var listeners = vm.$options._parentListeners;\n\t  var add = function (event, fn, once) {\n\t    once ? vm.$once(event, fn) : vm.$on(event, fn);\n\t  };\n\t  var remove$$1 = bind$1(vm.$off, vm);\n\t  vm._updateListeners = function (listeners, oldListeners) {\n\t    updateListeners(listeners, oldListeners || {}, add, remove$$1, vm);\n\t  };\n\t  if (listeners) {\n\t    vm._updateListeners(listeners);\n\t  }\n\t}\n\t\n\tfunction eventsMixin (Vue) {\n\t  Vue.prototype.$on = function (event, fn) {\n\t    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var vm = this;\n\t    function on () {\n\t      vm.$off(event, on);\n\t      fn.apply(vm, arguments);\n\t    }\n\t    on.fn = fn;\n\t    vm.$on(event, on);\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var vm = this;\n\t    // all\n\t    if (!arguments.length) {\n\t      vm._events = Object.create(null);\n\t      return vm\n\t    }\n\t    // specific event\n\t    var cbs = vm._events[event];\n\t    if (!cbs) {\n\t      return vm\n\t    }\n\t    if (arguments.length === 1) {\n\t      vm._events[event] = null;\n\t      return vm\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        cbs.splice(i, 1);\n\t        break\n\t      }\n\t    }\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var vm = this;\n\t    var cbs = vm._events[event];\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        cbs[i].apply(vm, args);\n\t      }\n\t    }\n\t    return vm\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  Vue.prototype._init = function (options) {\n\t    var vm = this;\n\t    // a uid\n\t    vm._uid = uid++;\n\t    // a flag to avoid this being observed\n\t    vm._isVue = true;\n\t    // merge options\n\t    if (options && options._isComponent) {\n\t      // optimize internal component instantiation\n\t      // since dynamic options merging is pretty slow, and none of the\n\t      // internal component options needs special treatment.\n\t      initInternalComponent(vm, options);\n\t    } else {\n\t      vm.$options = mergeOptions(\n\t        resolveConstructorOptions(vm.constructor),\n\t        options || {},\n\t        vm\n\t      );\n\t    }\n\t    /* istanbul ignore else */\n\t    if (false) {\n\t      initProxy(vm);\n\t    } else {\n\t      vm._renderProxy = vm;\n\t    }\n\t    // expose real self\n\t    vm._self = vm;\n\t    initLifecycle(vm);\n\t    initEvents(vm);\n\t    callHook(vm, 'beforeCreate');\n\t    initState(vm);\n\t    callHook(vm, 'created');\n\t    initRender(vm);\n\t  };\n\t}\n\t\n\tfunction initInternalComponent (vm, options) {\n\t  var opts = vm.$options = Object.create(vm.constructor.options);\n\t  // doing this because it's faster than dynamic enumeration.\n\t  opts.parent = options.parent;\n\t  opts.propsData = options.propsData;\n\t  opts._parentVnode = options._parentVnode;\n\t  opts._parentListeners = options._parentListeners;\n\t  opts._renderChildren = options._renderChildren;\n\t  opts._componentTag = options._componentTag;\n\t  opts._parentElm = options._parentElm;\n\t  opts._refElm = options._refElm;\n\t  if (options.render) {\n\t    opts.render = options.render;\n\t    opts.staticRenderFns = options.staticRenderFns;\n\t  }\n\t}\n\t\n\tfunction resolveConstructorOptions (Ctor) {\n\t  var options = Ctor.options;\n\t  if (Ctor.super) {\n\t    var superOptions = Ctor.super.options;\n\t    var cachedSuperOptions = Ctor.superOptions;\n\t    var extendOptions = Ctor.extendOptions;\n\t    if (superOptions !== cachedSuperOptions) {\n\t      // super option changed\n\t      Ctor.superOptions = superOptions;\n\t      extendOptions.render = options.render;\n\t      extendOptions.staticRenderFns = options.staticRenderFns;\n\t      extendOptions._scopeId = options._scopeId;\n\t      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n\t      if (options.name) {\n\t        options.components[options.name] = Ctor;\n\t      }\n\t    }\n\t  }\n\t  return options\n\t}\n\t\n\tfunction Vue$3 (options) {\n\t  if (false) {\n\t    warn('Vue is a constructor and should be called with the `new` keyword');\n\t  }\n\t  this._init(options);\n\t}\n\t\n\tinitMixin(Vue$3);\n\tstateMixin(Vue$3);\n\teventsMixin(Vue$3);\n\tlifecycleMixin(Vue$3);\n\trenderMixin(Vue$3);\n\t\n\t/*  */\n\t\n\tfunction initUse (Vue) {\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initMixin$1 (Vue) {\n\t  Vue.mixin = function (mixin) {\n\t    this.options = mergeOptions(this.options, mixin);\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initExtend (Vue) {\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   */\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var SuperId = Super.cid;\n\t    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n\t    if (cachedCtors[SuperId]) {\n\t      return cachedCtors[SuperId]\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn(\n\t          'Invalid component name: \"' + name + '\". Component names ' +\n\t          'can only contain alphanumeric characters and the hyphen, ' +\n\t          'and must start with a letter.'\n\t        );\n\t      }\n\t    }\n\t    var Sub = function VueComponent (options) {\n\t      this._init(options);\n\t    };\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(\n\t      Super.options,\n\t      extendOptions\n\t    );\n\t    Sub['super'] = Super;\n\t    // allow further extension/mixin/plugin usage\n\t    Sub.extend = Super.extend;\n\t    Sub.mixin = Super.mixin;\n\t    Sub.use = Super.use;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // keep a reference to the super options at extension time.\n\t    // later at instantiation we can check if Super's options have\n\t    // been updated.\n\t    Sub.superOptions = Super.options;\n\t    Sub.extendOptions = extendOptions;\n\t    // cache constructor\n\t    cachedCtors[SuperId] = Sub;\n\t    return Sub\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initAssetRegisters (Vue) {\n\t  /**\n\t   * Create asset registration methods.\n\t   */\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (\n\t      id,\n\t      definition\n\t    ) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id]\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && config.isReservedTag(id)) {\n\t            warn(\n\t              'Do not use built-in or reserved HTML elements as component ' +\n\t              'id: ' + id\n\t            );\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = definition.name || id;\n\t          definition = this.options._base.extend(definition);\n\t        }\n\t        if (type === 'directive' && typeof definition === 'function') {\n\t          definition = { bind: definition, update: definition };\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\t/*  */\n\t\n\tvar patternTypes = [String, RegExp];\n\t\n\tfunction matches (pattern, name) {\n\t  if (typeof pattern === 'string') {\n\t    return pattern.split(',').indexOf(name) > -1\n\t  } else {\n\t    return pattern.test(name)\n\t  }\n\t}\n\t\n\tvar KeepAlive = {\n\t  name: 'keep-alive',\n\t  abstract: true,\n\t  props: {\n\t    include: patternTypes,\n\t    exclude: patternTypes\n\t  },\n\t  created: function created () {\n\t    this.cache = Object.create(null);\n\t  },\n\t  render: function render () {\n\t    var vnode = getFirstComponentChild(this.$slots.default);\n\t    if (vnode && vnode.componentOptions) {\n\t      var opts = vnode.componentOptions;\n\t      // check pattern\n\t      var name = opts.Ctor.options.name || opts.tag;\n\t      if (name && (\n\t        (this.include && !matches(this.include, name)) ||\n\t        (this.exclude && matches(this.exclude, name))\n\t      )) {\n\t        return vnode\n\t      }\n\t      var key = vnode.key == null\n\t        // same constructor may get registered as different local components\n\t        // so cid alone is not enough (#3269)\n\t        ? opts.Ctor.cid + (opts.tag ? (\"::\" + (opts.tag)) : '')\n\t        : vnode.key;\n\t      if (this.cache[key]) {\n\t        vnode.child = this.cache[key].child;\n\t      } else {\n\t        this.cache[key] = vnode;\n\t      }\n\t      vnode.data.keepAlive = true;\n\t    }\n\t    return vnode\n\t  },\n\t  destroyed: function destroyed () {\n\t    var this$1 = this;\n\t\n\t    for (var key in this.cache) {\n\t      var vnode = this$1.cache[key];\n\t      callHook(vnode.child, 'deactivated');\n\t      vnode.child.$destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar builtInComponents = {\n\t  KeepAlive: KeepAlive\n\t};\n\t\n\t/*  */\n\t\n\tfunction initGlobalAPI (Vue) {\n\t  // config\n\t  var configDef = {};\n\t  configDef.get = function () { return config; };\n\t  if (false) {\n\t    configDef.set = function () {\n\t      warn(\n\t        'Do not replace the Vue.config object, set individual fields instead.'\n\t      );\n\t    };\n\t  }\n\t  Object.defineProperty(Vue, 'config', configDef);\n\t  Vue.util = util;\n\t  Vue.set = set$1;\n\t  Vue.delete = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  Vue.options = Object.create(null);\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue.options[type + 's'] = Object.create(null);\n\t  });\n\t\n\t  // this is used to identify the \"base\" constructor to extend all plain-object\n\t  // components with in Weex's multi-instance scenarios.\n\t  Vue.options._base = Vue;\n\t\n\t  extend(Vue.options.components, builtInComponents);\n\t\n\t  initUse(Vue);\n\t  initMixin$1(Vue);\n\t  initExtend(Vue);\n\t  initAssetRegisters(Vue);\n\t}\n\t\n\tinitGlobalAPI(Vue$3);\n\t\n\tObject.defineProperty(Vue$3.prototype, '$isServer', {\n\t  get: isServerRendering\n\t});\n\t\n\tVue$3.version = '2.1.6';\n\t\n\t/*  */\n\t\n\t// attributes that should be using props for binding\n\tvar acceptValue = makeMap('input,textarea,option,select');\n\tvar mustUseProp = function (tag, attr) {\n\t  return (\n\t    (attr === 'value' && acceptValue(tag)) ||\n\t    (attr === 'selected' && tag === 'option') ||\n\t    (attr === 'checked' && tag === 'input') ||\n\t    (attr === 'muted' && tag === 'video')\n\t  )\n\t};\n\t\n\tvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\t\n\tvar isBooleanAttr = makeMap(\n\t  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n\t  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n\t  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n\t  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n\t  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n\t  'truespeed,typemustmatch,visible'\n\t);\n\t\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\t\n\tvar isXlink = function (name) {\n\t  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n\t};\n\t\n\tvar getXlinkProp = function (name) {\n\t  return isXlink(name) ? name.slice(6, name.length) : ''\n\t};\n\t\n\tvar isFalsyAttrValue = function (val) {\n\t  return val == null || val === false\n\t};\n\t\n\t/*  */\n\t\n\tfunction genClassForVnode (vnode) {\n\t  var data = vnode.data;\n\t  var parentNode = vnode;\n\t  var childNode = vnode;\n\t  while (childNode.child) {\n\t    childNode = childNode.child._vnode;\n\t    if (childNode.data) {\n\t      data = mergeClassData(childNode.data, data);\n\t    }\n\t  }\n\t  while ((parentNode = parentNode.parent)) {\n\t    if (parentNode.data) {\n\t      data = mergeClassData(data, parentNode.data);\n\t    }\n\t  }\n\t  return genClassFromData(data)\n\t}\n\t\n\tfunction mergeClassData (child, parent) {\n\t  return {\n\t    staticClass: concat(child.staticClass, parent.staticClass),\n\t    class: child.class\n\t      ? [child.class, parent.class]\n\t      : parent.class\n\t  }\n\t}\n\t\n\tfunction genClassFromData (data) {\n\t  var dynamicClass = data.class;\n\t  var staticClass = data.staticClass;\n\t  if (staticClass || dynamicClass) {\n\t    return concat(staticClass, stringifyClass(dynamicClass))\n\t  }\n\t  /* istanbul ignore next */\n\t  return ''\n\t}\n\t\n\tfunction concat (a, b) {\n\t  return a ? b ? (a + ' ' + b) : a : (b || '')\n\t}\n\t\n\tfunction stringifyClass (value) {\n\t  var res = '';\n\t  if (!value) {\n\t    return res\n\t  }\n\t  if (typeof value === 'string') {\n\t    return value\n\t  }\n\t  if (Array.isArray(value)) {\n\t    var stringified;\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        if ((stringified = stringifyClass(value[i]))) {\n\t          res += stringified + ' ';\n\t        }\n\t      }\n\t    }\n\t    return res.slice(0, -1)\n\t  }\n\t  if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) { res += key + ' '; }\n\t    }\n\t    return res.slice(0, -1)\n\t  }\n\t  /* istanbul ignore next */\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tvar namespaceMap = {\n\t  svg: 'http://www.w3.org/2000/svg',\n\t  math: 'http://www.w3.org/1998/Math/MathML',\n\t  xhtml: 'http://www.w3.org/1999/xhtml'\n\t};\n\t\n\tvar isHTMLTag = makeMap(\n\t  'html,body,base,head,link,meta,style,title,' +\n\t  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n\t  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n\t  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n\t  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n\t  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n\t  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n\t  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n\t  'output,progress,select,textarea,' +\n\t  'details,dialog,menu,menuitem,summary,' +\n\t  'content,element,shadow,template'\n\t);\n\t\n\t// this map is intentionally selective, only covering SVG elements that may\n\t// contain child elements.\n\tvar isSVG = makeMap(\n\t  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n\t  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n\t  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n\t  true\n\t);\n\t\n\tvar isPreTag = function (tag) { return tag === 'pre'; };\n\t\n\tvar isReservedTag = function (tag) {\n\t  return isHTMLTag(tag) || isSVG(tag)\n\t};\n\t\n\tfunction getTagNamespace (tag) {\n\t  if (isSVG(tag)) {\n\t    return 'svg'\n\t  }\n\t  // basic support for MathML\n\t  // note it doesn't support other MathML elements being component roots\n\t  if (tag === 'math') {\n\t    return 'math'\n\t  }\n\t}\n\t\n\tvar unknownElementCache = Object.create(null);\n\tfunction isUnknownElement (tag) {\n\t  /* istanbul ignore if */\n\t  if (!inBrowser) {\n\t    return true\n\t  }\n\t  if (isReservedTag(tag)) {\n\t    return false\n\t  }\n\t  tag = tag.toLowerCase();\n\t  /* istanbul ignore if */\n\t  if (unknownElementCache[tag] != null) {\n\t    return unknownElementCache[tag]\n\t  }\n\t  var el = document.createElement(tag);\n\t  if (tag.indexOf('-') > -1) {\n\t    // http://stackoverflow.com/a/28210364/1070244\n\t    return (unknownElementCache[tag] = (\n\t      el.constructor === window.HTMLUnknownElement ||\n\t      el.constructor === window.HTMLElement\n\t    ))\n\t  } else {\n\t    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t */\n\tfunction query (el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn(\n\t        'Cannot find element: ' + selector\n\t      );\n\t      return document.createElement('div')\n\t    }\n\t  }\n\t  return el\n\t}\n\t\n\t/*  */\n\t\n\tfunction createElement$1 (tagName, vnode) {\n\t  var elm = document.createElement(tagName);\n\t  if (tagName !== 'select') {\n\t    return elm\n\t  }\n\t  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n\t    elm.setAttribute('multiple', 'multiple');\n\t  }\n\t  return elm\n\t}\n\t\n\tfunction createElementNS (namespace, tagName) {\n\t  return document.createElementNS(namespaceMap[namespace], tagName)\n\t}\n\t\n\tfunction createTextNode (text) {\n\t  return document.createTextNode(text)\n\t}\n\t\n\tfunction createComment (text) {\n\t  return document.createComment(text)\n\t}\n\t\n\tfunction insertBefore (parentNode, newNode, referenceNode) {\n\t  parentNode.insertBefore(newNode, referenceNode);\n\t}\n\t\n\tfunction removeChild (node, child) {\n\t  node.removeChild(child);\n\t}\n\t\n\tfunction appendChild (node, child) {\n\t  node.appendChild(child);\n\t}\n\t\n\tfunction parentNode (node) {\n\t  return node.parentNode\n\t}\n\t\n\tfunction nextSibling (node) {\n\t  return node.nextSibling\n\t}\n\t\n\tfunction tagName (node) {\n\t  return node.tagName\n\t}\n\t\n\tfunction setTextContent (node, text) {\n\t  node.textContent = text;\n\t}\n\t\n\tfunction setAttribute (node, key, val) {\n\t  node.setAttribute(key, val);\n\t}\n\t\n\t\n\tvar nodeOps = Object.freeze({\n\t\tcreateElement: createElement$1,\n\t\tcreateElementNS: createElementNS,\n\t\tcreateTextNode: createTextNode,\n\t\tcreateComment: createComment,\n\t\tinsertBefore: insertBefore,\n\t\tremoveChild: removeChild,\n\t\tappendChild: appendChild,\n\t\tparentNode: parentNode,\n\t\tnextSibling: nextSibling,\n\t\ttagName: tagName,\n\t\tsetTextContent: setTextContent,\n\t\tsetAttribute: setAttribute\n\t});\n\t\n\t/*  */\n\t\n\tvar ref = {\n\t  create: function create (_, vnode) {\n\t    registerRef(vnode);\n\t  },\n\t  update: function update (oldVnode, vnode) {\n\t    if (oldVnode.data.ref !== vnode.data.ref) {\n\t      registerRef(oldVnode, true);\n\t      registerRef(vnode);\n\t    }\n\t  },\n\t  destroy: function destroy (vnode) {\n\t    registerRef(vnode, true);\n\t  }\n\t};\n\t\n\tfunction registerRef (vnode, isRemoval) {\n\t  var key = vnode.data.ref;\n\t  if (!key) { return }\n\t\n\t  var vm = vnode.context;\n\t  var ref = vnode.child || vnode.elm;\n\t  var refs = vm.$refs;\n\t  if (isRemoval) {\n\t    if (Array.isArray(refs[key])) {\n\t      remove$1(refs[key], ref);\n\t    } else if (refs[key] === ref) {\n\t      refs[key] = undefined;\n\t    }\n\t  } else {\n\t    if (vnode.data.refInFor) {\n\t      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n\t        refs[key].push(ref);\n\t      } else {\n\t        refs[key] = [ref];\n\t      }\n\t    } else {\n\t      refs[key] = ref;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Virtual DOM patching algorithm based on Snabbdom by\n\t * Simon Friis Vindum (@paldepind)\n\t * Licensed under the MIT License\n\t * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n\t *\n\t * modified by Evan You (@yyx990803)\n\t *\n\t\n\t/*\n\t * Not type-checking this because this file is perf-critical and the cost\n\t * of making flow understand it is not worth it.\n\t */\n\t\n\tvar emptyNode = new VNode('', {}, []);\n\t\n\tvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\t\n\tfunction isUndef (s) {\n\t  return s == null\n\t}\n\t\n\tfunction isDef (s) {\n\t  return s != null\n\t}\n\t\n\tfunction sameVnode (vnode1, vnode2) {\n\t  return (\n\t    vnode1.key === vnode2.key &&\n\t    vnode1.tag === vnode2.tag &&\n\t    vnode1.isComment === vnode2.isComment &&\n\t    !vnode1.data === !vnode2.data\n\t  )\n\t}\n\t\n\tfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n\t  var i, key;\n\t  var map = {};\n\t  for (i = beginIdx; i <= endIdx; ++i) {\n\t    key = children[i].key;\n\t    if (isDef(key)) { map[key] = i; }\n\t  }\n\t  return map\n\t}\n\t\n\tfunction createPatchFunction (backend) {\n\t  var i, j;\n\t  var cbs = {};\n\t\n\t  var modules = backend.modules;\n\t  var nodeOps = backend.nodeOps;\n\t\n\t  for (i = 0; i < hooks$1.length; ++i) {\n\t    cbs[hooks$1[i]] = [];\n\t    for (j = 0; j < modules.length; ++j) {\n\t      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n\t    }\n\t  }\n\t\n\t  function emptyNodeAt (elm) {\n\t    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n\t  }\n\t\n\t  function createRmCb (childElm, listeners) {\n\t    function remove$$1 () {\n\t      if (--remove$$1.listeners === 0) {\n\t        removeElement(childElm);\n\t      }\n\t    }\n\t    remove$$1.listeners = listeners;\n\t    return remove$$1\n\t  }\n\t\n\t  function removeElement (el) {\n\t    var parent = nodeOps.parentNode(el);\n\t    // element may have already been removed due to v-html\n\t    if (parent) {\n\t      nodeOps.removeChild(parent, el);\n\t    }\n\t  }\n\t\n\t  var inPre = 0;\n\t  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n\t    vnode.isRootInsert = !nested; // for transition enter check\n\t    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n\t      return\n\t    }\n\t\n\t    var data = vnode.data;\n\t    var children = vnode.children;\n\t    var tag = vnode.tag;\n\t    if (isDef(tag)) {\n\t      if (false) {\n\t        if (data && data.pre) {\n\t          inPre++;\n\t        }\n\t        if (\n\t          !inPre &&\n\t          !vnode.ns &&\n\t          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\n\t          config.isUnknownElement(tag)\n\t        ) {\n\t          warn(\n\t            'Unknown custom element: <' + tag + '> - did you ' +\n\t            'register the component correctly? For recursive components, ' +\n\t            'make sure to provide the \"name\" option.',\n\t            vnode.context\n\t          );\n\t        }\n\t      }\n\t      vnode.elm = vnode.ns\n\t        ? nodeOps.createElementNS(vnode.ns, tag)\n\t        : nodeOps.createElement(tag, vnode);\n\t      setScope(vnode);\n\t\n\t      /* istanbul ignore if */\n\t      {\n\t        createChildren(vnode, children, insertedVnodeQueue);\n\t        if (isDef(data)) {\n\t          invokeCreateHooks(vnode, insertedVnodeQueue);\n\t        }\n\t        insert(parentElm, vnode.elm, refElm);\n\t      }\n\t\n\t      if (false) {\n\t        inPre--;\n\t      }\n\t    } else if (vnode.isComment) {\n\t      vnode.elm = nodeOps.createComment(vnode.text);\n\t      insert(parentElm, vnode.elm, refElm);\n\t    } else {\n\t      vnode.elm = nodeOps.createTextNode(vnode.text);\n\t      insert(parentElm, vnode.elm, refElm);\n\t    }\n\t  }\n\t\n\t  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n\t    var i = vnode.data;\n\t    if (isDef(i)) {\n\t      var isReactivated = isDef(vnode.child) && i.keepAlive;\n\t      if (isDef(i = i.hook) && isDef(i = i.init)) {\n\t        i(vnode, false /* hydrating */, parentElm, refElm);\n\t      }\n\t      // after calling the init hook, if the vnode is a child component\n\t      // it should've created a child instance and mounted it. the child\n\t      // component also has set the placeholder vnode's elm.\n\t      // in that case we can just return the element and be done.\n\t      if (isDef(vnode.child)) {\n\t        initComponent(vnode, insertedVnodeQueue);\n\t        if (isReactivated) {\n\t          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n\t        }\n\t        return true\n\t      }\n\t    }\n\t  }\n\t\n\t  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n\t    var i;\n\t    // hack for #4339: a reactivated component with inner transition\n\t    // does not trigger because the inner node's created hooks are not called\n\t    // again. It's not ideal to involve module-specific logic in here but\n\t    // there doesn't seem to be a better way to do it.\n\t    var innerNode = vnode;\n\t    while (innerNode.child) {\n\t      innerNode = innerNode.child._vnode;\n\t      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n\t        for (i = 0; i < cbs.activate.length; ++i) {\n\t          cbs.activate[i](emptyNode, innerNode);\n\t        }\n\t        insertedVnodeQueue.push(innerNode);\n\t        break\n\t      }\n\t    }\n\t    // unlike a newly created component,\n\t    // a reactivated keep-alive component doesn't insert itself\n\t    insert(parentElm, vnode.elm, refElm);\n\t  }\n\t\n\t  function insert (parent, elm, ref) {\n\t    if (parent) {\n\t      if (ref) {\n\t        nodeOps.insertBefore(parent, elm, ref);\n\t      } else {\n\t        nodeOps.appendChild(parent, elm);\n\t      }\n\t    }\n\t  }\n\t\n\t  function createChildren (vnode, children, insertedVnodeQueue) {\n\t    if (Array.isArray(children)) {\n\t      for (var i = 0; i < children.length; ++i) {\n\t        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n\t      }\n\t    } else if (isPrimitive(vnode.text)) {\n\t      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n\t    }\n\t  }\n\t\n\t  function isPatchable (vnode) {\n\t    while (vnode.child) {\n\t      vnode = vnode.child._vnode;\n\t    }\n\t    return isDef(vnode.tag)\n\t  }\n\t\n\t  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n\t    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n\t      cbs.create[i$1](emptyNode, vnode);\n\t    }\n\t    i = vnode.data.hook; // Reuse variable\n\t    if (isDef(i)) {\n\t      if (i.create) { i.create(emptyNode, vnode); }\n\t      if (i.insert) { insertedVnodeQueue.push(vnode); }\n\t    }\n\t  }\n\t\n\t  function initComponent (vnode, insertedVnodeQueue) {\n\t    if (vnode.data.pendingInsert) {\n\t      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n\t    }\n\t    vnode.elm = vnode.child.$el;\n\t    if (isPatchable(vnode)) {\n\t      invokeCreateHooks(vnode, insertedVnodeQueue);\n\t      setScope(vnode);\n\t    } else {\n\t      // empty component root.\n\t      // skip all element-related modules except for ref (#3455)\n\t      registerRef(vnode);\n\t      // make sure to invoke the insert hook\n\t      insertedVnodeQueue.push(vnode);\n\t    }\n\t  }\n\t\n\t  // set scope id attribute for scoped CSS.\n\t  // this is implemented as a special case to avoid the overhead\n\t  // of going through the normal attribute patching process.\n\t  function setScope (vnode) {\n\t    var i;\n\t    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n\t      nodeOps.setAttribute(vnode.elm, i, '');\n\t    }\n\t    if (isDef(i = activeInstance) &&\n\t        i !== vnode.context &&\n\t        isDef(i = i.$options._scopeId)) {\n\t      nodeOps.setAttribute(vnode.elm, i, '');\n\t    }\n\t  }\n\t\n\t  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n\t    for (; startIdx <= endIdx; ++startIdx) {\n\t      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n\t    }\n\t  }\n\t\n\t  function invokeDestroyHook (vnode) {\n\t    var i, j;\n\t    var data = vnode.data;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n\t      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n\t    }\n\t    if (isDef(i = vnode.children)) {\n\t      for (j = 0; j < vnode.children.length; ++j) {\n\t        invokeDestroyHook(vnode.children[j]);\n\t      }\n\t    }\n\t  }\n\t\n\t  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n\t    for (; startIdx <= endIdx; ++startIdx) {\n\t      var ch = vnodes[startIdx];\n\t      if (isDef(ch)) {\n\t        if (isDef(ch.tag)) {\n\t          removeAndInvokeRemoveHook(ch);\n\t          invokeDestroyHook(ch);\n\t        } else { // Text node\n\t          nodeOps.removeChild(parentElm, ch.elm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function removeAndInvokeRemoveHook (vnode, rm) {\n\t    if (rm || isDef(vnode.data)) {\n\t      var listeners = cbs.remove.length + 1;\n\t      if (!rm) {\n\t        // directly removing\n\t        rm = createRmCb(vnode.elm, listeners);\n\t      } else {\n\t        // we have a recursively passed down rm callback\n\t        // increase the listeners count\n\t        rm.listeners += listeners;\n\t      }\n\t      // recursively invoke hooks on child component root node\n\t      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n\t        removeAndInvokeRemoveHook(i, rm);\n\t      }\n\t      for (i = 0; i < cbs.remove.length; ++i) {\n\t        cbs.remove[i](vnode, rm);\n\t      }\n\t      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n\t        i(vnode, rm);\n\t      } else {\n\t        rm();\n\t      }\n\t    } else {\n\t      removeElement(vnode.elm);\n\t    }\n\t  }\n\t\n\t  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n\t    var oldStartIdx = 0;\n\t    var newStartIdx = 0;\n\t    var oldEndIdx = oldCh.length - 1;\n\t    var oldStartVnode = oldCh[0];\n\t    var oldEndVnode = oldCh[oldEndIdx];\n\t    var newEndIdx = newCh.length - 1;\n\t    var newStartVnode = newCh[0];\n\t    var newEndVnode = newCh[newEndIdx];\n\t    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\t\n\t    // removeOnly is a special flag used only by <transition-group>\n\t    // to ensure removed elements stay in correct relative positions\n\t    // during leaving transitions\n\t    var canMove = !removeOnly;\n\t\n\t    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n\t      if (isUndef(oldStartVnode)) {\n\t        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n\t      } else if (isUndef(oldEndVnode)) {\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n\t        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n\t        oldStartVnode = oldCh[++oldStartIdx];\n\t        newStartVnode = newCh[++newStartIdx];\n\t      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n\t        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t        newEndVnode = newCh[--newEndIdx];\n\t      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n\t        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n\t        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n\t        oldStartVnode = oldCh[++oldStartIdx];\n\t        newEndVnode = newCh[--newEndIdx];\n\t      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n\t        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n\t        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t        newStartVnode = newCh[++newStartIdx];\n\t      } else {\n\t        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n\t        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n\t        if (isUndef(idxInOld)) { // New element\n\t          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n\t          newStartVnode = newCh[++newStartIdx];\n\t        } else {\n\t          elmToMove = oldCh[idxInOld];\n\t          /* istanbul ignore if */\n\t          if (false) {\n\t            warn(\n\t              'It seems there are duplicate keys that is causing an update error. ' +\n\t              'Make sure each v-for item has a unique key.'\n\t            );\n\t          }\n\t          if (sameVnode(elmToMove, newStartVnode)) {\n\t            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n\t            oldCh[idxInOld] = undefined;\n\t            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n\t            newStartVnode = newCh[++newStartIdx];\n\t          } else {\n\t            // same key but different element. treat as new element\n\t            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n\t            newStartVnode = newCh[++newStartIdx];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (oldStartIdx > oldEndIdx) {\n\t      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n\t      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n\t    } else if (newStartIdx > newEndIdx) {\n\t      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n\t    }\n\t  }\n\t\n\t  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n\t    if (oldVnode === vnode) {\n\t      return\n\t    }\n\t    // reuse element for static trees.\n\t    // note we only do this if the vnode is cloned -\n\t    // if the new node is not cloned it means the render functions have been\n\t    // reset by the hot-reload-api and we need to do a proper re-render.\n\t    if (vnode.isStatic &&\n\t        oldVnode.isStatic &&\n\t        vnode.key === oldVnode.key &&\n\t        (vnode.isCloned || vnode.isOnce)) {\n\t      vnode.elm = oldVnode.elm;\n\t      vnode.child = oldVnode.child;\n\t      return\n\t    }\n\t    var i;\n\t    var data = vnode.data;\n\t    var hasData = isDef(data);\n\t    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n\t      i(oldVnode, vnode);\n\t    }\n\t    var elm = vnode.elm = oldVnode.elm;\n\t    var oldCh = oldVnode.children;\n\t    var ch = vnode.children;\n\t    if (hasData && isPatchable(vnode)) {\n\t      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n\t      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n\t    }\n\t    if (isUndef(vnode.text)) {\n\t      if (isDef(oldCh) && isDef(ch)) {\n\t        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n\t      } else if (isDef(ch)) {\n\t        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n\t        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n\t      } else if (isDef(oldCh)) {\n\t        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n\t      } else if (isDef(oldVnode.text)) {\n\t        nodeOps.setTextContent(elm, '');\n\t      }\n\t    } else if (oldVnode.text !== vnode.text) {\n\t      nodeOps.setTextContent(elm, vnode.text);\n\t    }\n\t    if (hasData) {\n\t      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n\t    }\n\t  }\n\t\n\t  function invokeInsertHook (vnode, queue, initial) {\n\t    // delay insert hooks for component root nodes, invoke them after the\n\t    // element is really inserted\n\t    if (initial && vnode.parent) {\n\t      vnode.parent.data.pendingInsert = queue;\n\t    } else {\n\t      for (var i = 0; i < queue.length; ++i) {\n\t        queue[i].data.hook.insert(queue[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var bailed = false;\n\t  // list of modules that can skip create hook during hydration because they\n\t  // are already rendered on the client or has no need for initialization\n\t  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\t\n\t  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n\t  function hydrate (elm, vnode, insertedVnodeQueue) {\n\t    if (false) {\n\t      if (!assertNodeMatch(elm, vnode)) {\n\t        return false\n\t      }\n\t    }\n\t    vnode.elm = elm;\n\t    var tag = vnode.tag;\n\t    var data = vnode.data;\n\t    var children = vnode.children;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n\t      if (isDef(i = vnode.child)) {\n\t        // child component. it should have hydrated its own tree.\n\t        initComponent(vnode, insertedVnodeQueue);\n\t        return true\n\t      }\n\t    }\n\t    if (isDef(tag)) {\n\t      if (isDef(children)) {\n\t        // empty element, allow client to pick up and populate children\n\t        if (!elm.hasChildNodes()) {\n\t          createChildren(vnode, children, insertedVnodeQueue);\n\t        } else {\n\t          var childrenMatch = true;\n\t          var childNode = elm.firstChild;\n\t          for (var i$1 = 0; i$1 < children.length; i$1++) {\n\t            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n\t              childrenMatch = false;\n\t              break\n\t            }\n\t            childNode = childNode.nextSibling;\n\t          }\n\t          // if childNode is not null, it means the actual childNodes list is\n\t          // longer than the virtual children list.\n\t          if (!childrenMatch || childNode) {\n\t            if (false) {\n\t              bailed = true;\n\t              console.warn('Parent: ', elm);\n\t              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n\t            }\n\t            return false\n\t          }\n\t        }\n\t      }\n\t      if (isDef(data)) {\n\t        for (var key in data) {\n\t          if (!isRenderedModule(key)) {\n\t            invokeCreateHooks(vnode, insertedVnodeQueue);\n\t            break\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return true\n\t  }\n\t\n\t  function assertNodeMatch (node, vnode) {\n\t    if (vnode.tag) {\n\t      return (\n\t        vnode.tag.indexOf('vue-component') === 0 ||\n\t        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n\t      )\n\t    } else {\n\t      return _toString(vnode.text) === node.data\n\t    }\n\t  }\n\t\n\t  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n\t    if (!vnode) {\n\t      if (oldVnode) { invokeDestroyHook(oldVnode); }\n\t      return\n\t    }\n\t\n\t    var elm, parent;\n\t    var isInitialPatch = false;\n\t    var insertedVnodeQueue = [];\n\t\n\t    if (!oldVnode) {\n\t      // empty mount (likely as component), create new root element\n\t      isInitialPatch = true;\n\t      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n\t    } else {\n\t      var isRealElement = isDef(oldVnode.nodeType);\n\t      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n\t        // patch existing root node\n\t        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n\t      } else {\n\t        if (isRealElement) {\n\t          // mounting to a real element\n\t          // check if this is server-rendered content and if we can perform\n\t          // a successful hydration.\n\t          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n\t            oldVnode.removeAttribute('server-rendered');\n\t            hydrating = true;\n\t          }\n\t          if (hydrating) {\n\t            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n\t              invokeInsertHook(vnode, insertedVnodeQueue, true);\n\t              return oldVnode\n\t            } else if (false) {\n\t              warn(\n\t                'The client-side rendered virtual DOM tree is not matching ' +\n\t                'server-rendered content. This is likely caused by incorrect ' +\n\t                'HTML markup, for example nesting block-level elements inside ' +\n\t                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n\t                'full client-side render.'\n\t              );\n\t            }\n\t          }\n\t          // either not server-rendered, or hydration failed.\n\t          // create an empty node and replace it\n\t          oldVnode = emptyNodeAt(oldVnode);\n\t        }\n\t\n\t        // replacing existing element\n\t        elm = oldVnode.elm;\n\t        parent = nodeOps.parentNode(elm);\n\t        createElm(vnode, insertedVnodeQueue, parent, nodeOps.nextSibling(elm));\n\t\n\t        if (vnode.parent) {\n\t          // component root element replaced.\n\t          // update parent placeholder node element, recursively\n\t          var ancestor = vnode.parent;\n\t          while (ancestor) {\n\t            ancestor.elm = vnode.elm;\n\t            ancestor = ancestor.parent;\n\t          }\n\t          if (isPatchable(vnode)) {\n\t            for (var i = 0; i < cbs.create.length; ++i) {\n\t              cbs.create[i](emptyNode, vnode.parent);\n\t            }\n\t          }\n\t        }\n\t\n\t        if (parent !== null) {\n\t          removeVnodes(parent, [oldVnode], 0, 0);\n\t        } else if (isDef(oldVnode.tag)) {\n\t          invokeDestroyHook(oldVnode);\n\t        }\n\t      }\n\t    }\n\t\n\t    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n\t    return vnode.elm\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar directives = {\n\t  create: updateDirectives,\n\t  update: updateDirectives,\n\t  destroy: function unbindDirectives (vnode) {\n\t    updateDirectives(vnode, emptyNode);\n\t  }\n\t};\n\t\n\tfunction updateDirectives (oldVnode, vnode) {\n\t  if (oldVnode.data.directives || vnode.data.directives) {\n\t    _update(oldVnode, vnode);\n\t  }\n\t}\n\t\n\tfunction _update (oldVnode, vnode) {\n\t  var isCreate = oldVnode === emptyNode;\n\t  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n\t  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\t\n\t  var dirsWithInsert = [];\n\t  var dirsWithPostpatch = [];\n\t\n\t  var key, oldDir, dir;\n\t  for (key in newDirs) {\n\t    oldDir = oldDirs[key];\n\t    dir = newDirs[key];\n\t    if (!oldDir) {\n\t      // new directive, bind\n\t      callHook$1(dir, 'bind', vnode, oldVnode);\n\t      if (dir.def && dir.def.inserted) {\n\t        dirsWithInsert.push(dir);\n\t      }\n\t    } else {\n\t      // existing directive, update\n\t      dir.oldValue = oldDir.value;\n\t      callHook$1(dir, 'update', vnode, oldVnode);\n\t      if (dir.def && dir.def.componentUpdated) {\n\t        dirsWithPostpatch.push(dir);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dirsWithInsert.length) {\n\t    var callInsert = function () {\n\t      for (var i = 0; i < dirsWithInsert.length; i++) {\n\t        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n\t      }\n\t    };\n\t    if (isCreate) {\n\t      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n\t    } else {\n\t      callInsert();\n\t    }\n\t  }\n\t\n\t  if (dirsWithPostpatch.length) {\n\t    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n\t      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n\t        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n\t      }\n\t    }, 'dir-postpatch');\n\t  }\n\t\n\t  if (!isCreate) {\n\t    for (key in oldDirs) {\n\t      if (!newDirs[key]) {\n\t        // no longer present, unbind\n\t        callHook$1(oldDirs[key], 'unbind', oldVnode);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar emptyModifiers = Object.create(null);\n\t\n\tfunction normalizeDirectives$1 (\n\t  dirs,\n\t  vm\n\t) {\n\t  var res = Object.create(null);\n\t  if (!dirs) {\n\t    return res\n\t  }\n\t  var i, dir;\n\t  for (i = 0; i < dirs.length; i++) {\n\t    dir = dirs[i];\n\t    if (!dir.modifiers) {\n\t      dir.modifiers = emptyModifiers;\n\t    }\n\t    res[getRawDirName(dir)] = dir;\n\t    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n\t  }\n\t  return res\n\t}\n\t\n\tfunction getRawDirName (dir) {\n\t  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n\t}\n\t\n\tfunction callHook$1 (dir, hook, vnode, oldVnode) {\n\t  var fn = dir.def && dir.def[hook];\n\t  if (fn) {\n\t    fn(vnode.elm, dir, vnode, oldVnode);\n\t  }\n\t}\n\t\n\tvar baseModules = [\n\t  ref,\n\t  directives\n\t];\n\t\n\t/*  */\n\t\n\tfunction updateAttrs (oldVnode, vnode) {\n\t  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n\t    return\n\t  }\n\t  var key, cur, old;\n\t  var elm = vnode.elm;\n\t  var oldAttrs = oldVnode.data.attrs || {};\n\t  var attrs = vnode.data.attrs || {};\n\t  // clone observed objects, as the user probably wants to mutate it\n\t  if (attrs.__ob__) {\n\t    attrs = vnode.data.attrs = extend({}, attrs);\n\t  }\n\t\n\t  for (key in attrs) {\n\t    cur = attrs[key];\n\t    old = oldAttrs[key];\n\t    if (old !== cur) {\n\t      setAttr(elm, key, cur);\n\t    }\n\t  }\n\t  // #4391: in IE9, setting type can reset value for input[type=radio]\n\t  /* istanbul ignore if */\n\t  if (isIE9 && attrs.value !== oldAttrs.value) {\n\t    setAttr(elm, 'value', attrs.value);\n\t  }\n\t  for (key in oldAttrs) {\n\t    if (attrs[key] == null) {\n\t      if (isXlink(key)) {\n\t        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n\t      } else if (!isEnumeratedAttr(key)) {\n\t        elm.removeAttribute(key);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction setAttr (el, key, value) {\n\t  if (isBooleanAttr(key)) {\n\t    // set attribute for blank value\n\t    // e.g. <option disabled>Select one</option>\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttribute(key);\n\t    } else {\n\t      el.setAttribute(key, key);\n\t    }\n\t  } else if (isEnumeratedAttr(key)) {\n\t    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n\t  } else if (isXlink(key)) {\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n\t    } else {\n\t      el.setAttributeNS(xlinkNS, key, value);\n\t    }\n\t  } else {\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttribute(key);\n\t    } else {\n\t      el.setAttribute(key, value);\n\t    }\n\t  }\n\t}\n\t\n\tvar attrs = {\n\t  create: updateAttrs,\n\t  update: updateAttrs\n\t};\n\t\n\t/*  */\n\t\n\tfunction updateClass (oldVnode, vnode) {\n\t  var el = vnode.elm;\n\t  var data = vnode.data;\n\t  var oldData = oldVnode.data;\n\t  if (!data.staticClass && !data.class &&\n\t      (!oldData || (!oldData.staticClass && !oldData.class))) {\n\t    return\n\t  }\n\t\n\t  var cls = genClassForVnode(vnode);\n\t\n\t  // handle transition classes\n\t  var transitionClass = el._transitionClasses;\n\t  if (transitionClass) {\n\t    cls = concat(cls, stringifyClass(transitionClass));\n\t  }\n\t\n\t  // set the class\n\t  if (cls !== el._prevClass) {\n\t    el.setAttribute('class', cls);\n\t    el._prevClass = cls;\n\t  }\n\t}\n\t\n\tvar klass = {\n\t  create: updateClass,\n\t  update: updateClass\n\t};\n\t\n\t/*  */\n\t\n\tvar target;\n\t\n\tfunction add$1 (event, handler, once, capture) {\n\t  if (once) {\n\t    var oldHandler = handler;\n\t    handler = function (ev) {\n\t      remove$2(event, handler, capture);\n\t      arguments.length === 1\n\t        ? oldHandler(ev)\n\t        : oldHandler.apply(null, arguments);\n\t    };\n\t  }\n\t  target.addEventListener(event, handler, capture);\n\t}\n\t\n\tfunction remove$2 (event, handler, capture) {\n\t  target.removeEventListener(event, handler, capture);\n\t}\n\t\n\tfunction updateDOMListeners (oldVnode, vnode) {\n\t  if (!oldVnode.data.on && !vnode.data.on) {\n\t    return\n\t  }\n\t  var on = vnode.data.on || {};\n\t  var oldOn = oldVnode.data.on || {};\n\t  target = vnode.elm;\n\t  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n\t}\n\t\n\tvar events = {\n\t  create: updateDOMListeners,\n\t  update: updateDOMListeners\n\t};\n\t\n\t/*  */\n\t\n\tfunction updateDOMProps (oldVnode, vnode) {\n\t  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n\t    return\n\t  }\n\t  var key, cur;\n\t  var elm = vnode.elm;\n\t  var oldProps = oldVnode.data.domProps || {};\n\t  var props = vnode.data.domProps || {};\n\t  // clone observed objects, as the user probably wants to mutate it\n\t  if (props.__ob__) {\n\t    props = vnode.data.domProps = extend({}, props);\n\t  }\n\t\n\t  for (key in oldProps) {\n\t    if (props[key] == null) {\n\t      elm[key] = '';\n\t    }\n\t  }\n\t  for (key in props) {\n\t    cur = props[key];\n\t    // ignore children if the node has textContent or innerHTML,\n\t    // as these will throw away existing DOM nodes and cause removal errors\n\t    // on subsequent patches (#3360)\n\t    if (key === 'textContent' || key === 'innerHTML') {\n\t      if (vnode.children) { vnode.children.length = 0; }\n\t      if (cur === oldProps[key]) { continue }\n\t    }\n\t    if (key === 'value') {\n\t      // store value as _value as well since\n\t      // non-string values will be stringified\n\t      elm._value = cur;\n\t      // avoid resetting cursor position when value is the same\n\t      var strCur = cur == null ? '' : String(cur);\n\t      if (!elm.composing && (\n\t        (document.activeElement !== elm && elm.value !== strCur) ||\n\t        isValueChanged(vnode, strCur)\n\t      )) {\n\t        elm.value = strCur;\n\t      }\n\t    } else {\n\t      elm[key] = cur;\n\t    }\n\t  }\n\t}\n\t\n\tfunction isValueChanged (vnode, newVal) {\n\t  var value = vnode.elm.value;\n\t  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n\t  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n\t    return toNumber(value) !== toNumber(newVal)\n\t  }\n\t  if (modifiers && modifiers.trim) {\n\t    return value.trim() !== newVal.trim()\n\t  }\n\t  return value !== newVal\n\t}\n\t\n\tvar domProps = {\n\t  create: updateDOMProps,\n\t  update: updateDOMProps\n\t};\n\t\n\t/*  */\n\t\n\tvar parseStyleText = cached(function (cssText) {\n\t  var res = {};\n\t  var listDelimiter = /;(?![^(]*\\))/g;\n\t  var propertyDelimiter = /:(.+)/;\n\t  cssText.split(listDelimiter).forEach(function (item) {\n\t    if (item) {\n\t      var tmp = item.split(propertyDelimiter);\n\t      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n\t    }\n\t  });\n\t  return res\n\t});\n\t\n\t// merge static and dynamic style data on the same vnode\n\tfunction normalizeStyleData (data) {\n\t  var style = normalizeStyleBinding(data.style);\n\t  // static style is pre-processed into an object during compilation\n\t  // and is always a fresh object, so it's safe to merge into it\n\t  return data.staticStyle\n\t    ? extend(data.staticStyle, style)\n\t    : style\n\t}\n\t\n\t// normalize possible array / string values into Object\n\tfunction normalizeStyleBinding (bindingStyle) {\n\t  if (Array.isArray(bindingStyle)) {\n\t    return toObject(bindingStyle)\n\t  }\n\t  if (typeof bindingStyle === 'string') {\n\t    return parseStyleText(bindingStyle)\n\t  }\n\t  return bindingStyle\n\t}\n\t\n\t/**\n\t * parent component style should be after child's\n\t * so that parent component's style could override it\n\t */\n\tfunction getStyle (vnode, checkChild) {\n\t  var res = {};\n\t  var styleData;\n\t\n\t  if (checkChild) {\n\t    var childNode = vnode;\n\t    while (childNode.child) {\n\t      childNode = childNode.child._vnode;\n\t      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n\t        extend(res, styleData);\n\t      }\n\t    }\n\t  }\n\t\n\t  if ((styleData = normalizeStyleData(vnode.data))) {\n\t    extend(res, styleData);\n\t  }\n\t\n\t  var parentNode = vnode;\n\t  while ((parentNode = parentNode.parent)) {\n\t    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n\t      extend(res, styleData);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tvar cssVarRE = /^--/;\n\tvar importantRE = /\\s*!important$/;\n\tvar setProp = function (el, name, val) {\n\t  /* istanbul ignore if */\n\t  if (cssVarRE.test(name)) {\n\t    el.style.setProperty(name, val);\n\t  } else if (importantRE.test(val)) {\n\t    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n\t  } else {\n\t    el.style[normalize(name)] = val;\n\t  }\n\t};\n\t\n\tvar prefixes = ['Webkit', 'Moz', 'ms'];\n\t\n\tvar testEl;\n\tvar normalize = cached(function (prop) {\n\t  testEl = testEl || document.createElement('div');\n\t  prop = camelize(prop);\n\t  if (prop !== 'filter' && (prop in testEl.style)) {\n\t    return prop\n\t  }\n\t  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    var prefixed = prefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixed\n\t    }\n\t  }\n\t});\n\t\n\tfunction updateStyle (oldVnode, vnode) {\n\t  var data = vnode.data;\n\t  var oldData = oldVnode.data;\n\t\n\t  if (!data.staticStyle && !data.style &&\n\t      !oldData.staticStyle && !oldData.style) {\n\t    return\n\t  }\n\t\n\t  var cur, name;\n\t  var el = vnode.elm;\n\t  var oldStaticStyle = oldVnode.data.staticStyle;\n\t  var oldStyleBinding = oldVnode.data.style || {};\n\t\n\t  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n\t  var oldStyle = oldStaticStyle || oldStyleBinding;\n\t\n\t  var style = normalizeStyleBinding(vnode.data.style) || {};\n\t\n\t  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\t\n\t  var newStyle = getStyle(vnode, true);\n\t\n\t  for (name in oldStyle) {\n\t    if (newStyle[name] == null) {\n\t      setProp(el, name, '');\n\t    }\n\t  }\n\t  for (name in newStyle) {\n\t    cur = newStyle[name];\n\t    if (cur !== oldStyle[name]) {\n\t      // ie9 setting to null has no effect, must use empty string\n\t      setProp(el, name, cur == null ? '' : cur);\n\t    }\n\t  }\n\t}\n\t\n\tvar style = {\n\t  create: updateStyle,\n\t  update: updateStyle\n\t};\n\t\n\t/*  */\n\t\n\t/**\n\t * Add class with compatibility for SVG since classList is not supported on\n\t * SVG elements in IE\n\t */\n\tfunction addClass (el, cls) {\n\t  /* istanbul ignore if */\n\t  if (!cls || !cls.trim()) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore else */\n\t  if (el.classList) {\n\t    if (cls.indexOf(' ') > -1) {\n\t      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n\t    } else {\n\t      el.classList.add(cls);\n\t    }\n\t  } else {\n\t    var cur = ' ' + el.getAttribute('class') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      el.setAttribute('class', (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for SVG since classList is not supported on\n\t * SVG elements in IE\n\t */\n\tfunction removeClass (el, cls) {\n\t  /* istanbul ignore if */\n\t  if (!cls || !cls.trim()) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore else */\n\t  if (el.classList) {\n\t    if (cls.indexOf(' ') > -1) {\n\t      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n\t    } else {\n\t      el.classList.remove(cls);\n\t    }\n\t  } else {\n\t    var cur = ' ' + el.getAttribute('class') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    el.setAttribute('class', cur.trim());\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar hasTransition = inBrowser && !isIE9;\n\tvar TRANSITION = 'transition';\n\tvar ANIMATION = 'animation';\n\t\n\t// Transition property/event sniffing\n\tvar transitionProp = 'transition';\n\tvar transitionEndEvent = 'transitionend';\n\tvar animationProp = 'animation';\n\tvar animationEndEvent = 'animationend';\n\tif (hasTransition) {\n\t  /* istanbul ignore if */\n\t  if (window.ontransitionend === undefined &&\n\t    window.onwebkittransitionend !== undefined) {\n\t    transitionProp = 'WebkitTransition';\n\t    transitionEndEvent = 'webkitTransitionEnd';\n\t  }\n\t  if (window.onanimationend === undefined &&\n\t    window.onwebkitanimationend !== undefined) {\n\t    animationProp = 'WebkitAnimation';\n\t    animationEndEvent = 'webkitAnimationEnd';\n\t  }\n\t}\n\t\n\tvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\n\tfunction nextFrame (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t}\n\t\n\tfunction addTransitionClass (el, cls) {\n\t  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n\t  addClass(el, cls);\n\t}\n\t\n\tfunction removeTransitionClass (el, cls) {\n\t  if (el._transitionClasses) {\n\t    remove$1(el._transitionClasses, cls);\n\t  }\n\t  removeClass(el, cls);\n\t}\n\t\n\tfunction whenTransitionEnds (\n\t  el,\n\t  expectedType,\n\t  cb\n\t) {\n\t  var ref = getTransitionInfo(el, expectedType);\n\t  var type = ref.type;\n\t  var timeout = ref.timeout;\n\t  var propCount = ref.propCount;\n\t  if (!type) { return cb() }\n\t  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n\t  var ended = 0;\n\t  var end = function () {\n\t    el.removeEventListener(event, onEnd);\n\t    cb();\n\t  };\n\t  var onEnd = function (e) {\n\t    if (e.target === el) {\n\t      if (++ended >= propCount) {\n\t        end();\n\t      }\n\t    }\n\t  };\n\t  setTimeout(function () {\n\t    if (ended < propCount) {\n\t      end();\n\t    }\n\t  }, timeout + 1);\n\t  el.addEventListener(event, onEnd);\n\t}\n\t\n\tvar transformRE = /\\b(transform|all)(,|$)/;\n\t\n\tfunction getTransitionInfo (el, expectedType) {\n\t  var styles = window.getComputedStyle(el);\n\t  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n\t  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n\t  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n\t  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n\t  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n\t  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\t\n\t  var type;\n\t  var timeout = 0;\n\t  var propCount = 0;\n\t  /* istanbul ignore if */\n\t  if (expectedType === TRANSITION) {\n\t    if (transitionTimeout > 0) {\n\t      type = TRANSITION;\n\t      timeout = transitionTimeout;\n\t      propCount = transitionDurations.length;\n\t    }\n\t  } else if (expectedType === ANIMATION) {\n\t    if (animationTimeout > 0) {\n\t      type = ANIMATION;\n\t      timeout = animationTimeout;\n\t      propCount = animationDurations.length;\n\t    }\n\t  } else {\n\t    timeout = Math.max(transitionTimeout, animationTimeout);\n\t    type = timeout > 0\n\t      ? transitionTimeout > animationTimeout\n\t        ? TRANSITION\n\t        : ANIMATION\n\t      : null;\n\t    propCount = type\n\t      ? type === TRANSITION\n\t        ? transitionDurations.length\n\t        : animationDurations.length\n\t      : 0;\n\t  }\n\t  var hasTransform =\n\t    type === TRANSITION &&\n\t    transformRE.test(styles[transitionProp + 'Property']);\n\t  return {\n\t    type: type,\n\t    timeout: timeout,\n\t    propCount: propCount,\n\t    hasTransform: hasTransform\n\t  }\n\t}\n\t\n\tfunction getTimeout (delays, durations) {\n\t  /* istanbul ignore next */\n\t  while (delays.length < durations.length) {\n\t    delays = delays.concat(delays);\n\t  }\n\t\n\t  return Math.max.apply(null, durations.map(function (d, i) {\n\t    return toMs(d) + toMs(delays[i])\n\t  }))\n\t}\n\t\n\tfunction toMs (s) {\n\t  return Number(s.slice(0, -1)) * 1000\n\t}\n\t\n\t/*  */\n\t\n\tfunction enter (vnode, toggleDisplay) {\n\t  var el = vnode.elm;\n\t\n\t  // call leave callback now\n\t  if (el._leaveCb) {\n\t    el._leaveCb.cancelled = true;\n\t    el._leaveCb();\n\t  }\n\t\n\t  var data = resolveTransition(vnode.data.transition);\n\t  if (!data) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (el._enterCb || el.nodeType !== 1) {\n\t    return\n\t  }\n\t\n\t  var css = data.css;\n\t  var type = data.type;\n\t  var enterClass = data.enterClass;\n\t  var enterActiveClass = data.enterActiveClass;\n\t  var appearClass = data.appearClass;\n\t  var appearActiveClass = data.appearActiveClass;\n\t  var beforeEnter = data.beforeEnter;\n\t  var enter = data.enter;\n\t  var afterEnter = data.afterEnter;\n\t  var enterCancelled = data.enterCancelled;\n\t  var beforeAppear = data.beforeAppear;\n\t  var appear = data.appear;\n\t  var afterAppear = data.afterAppear;\n\t  var appearCancelled = data.appearCancelled;\n\t\n\t  // activeInstance will always be the <transition> component managing this\n\t  // transition. One edge case to check is when the <transition> is placed\n\t  // as the root node of a child component. In that case we need to check\n\t  // <transition>'s parent for appear check.\n\t  var context = activeInstance;\n\t  var transitionNode = activeInstance.$vnode;\n\t  while (transitionNode && transitionNode.parent) {\n\t    transitionNode = transitionNode.parent;\n\t    context = transitionNode.context;\n\t  }\n\t\n\t  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\t\n\t  if (isAppear && !appear && appear !== '') {\n\t    return\n\t  }\n\t\n\t  var startClass = isAppear ? appearClass : enterClass;\n\t  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n\t  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n\t  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n\t  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n\t  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\t\n\t  var expectsCSS = css !== false && !isIE9;\n\t  var userWantsControl =\n\t    enterHook &&\n\t    // enterHook may be a bound method which exposes\n\t    // the length of original fn as _length\n\t    (enterHook._length || enterHook.length) > 1;\n\t\n\t  var cb = el._enterCb = once(function () {\n\t    if (expectsCSS) {\n\t      removeTransitionClass(el, activeClass);\n\t    }\n\t    if (cb.cancelled) {\n\t      if (expectsCSS) {\n\t        removeTransitionClass(el, startClass);\n\t      }\n\t      enterCancelledHook && enterCancelledHook(el);\n\t    } else {\n\t      afterEnterHook && afterEnterHook(el);\n\t    }\n\t    el._enterCb = null;\n\t  });\n\t\n\t  if (!vnode.data.show) {\n\t    // remove pending leave element on enter by injecting an insert hook\n\t    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n\t      var parent = el.parentNode;\n\t      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n\t      if (pendingNode &&\n\t          pendingNode.context === vnode.context &&\n\t          pendingNode.tag === vnode.tag &&\n\t          pendingNode.elm._leaveCb) {\n\t        pendingNode.elm._leaveCb();\n\t      }\n\t      enterHook && enterHook(el, cb);\n\t    }, 'transition-insert');\n\t  }\n\t\n\t  // start enter transition\n\t  beforeEnterHook && beforeEnterHook(el);\n\t  if (expectsCSS) {\n\t    addTransitionClass(el, startClass);\n\t    addTransitionClass(el, activeClass);\n\t    nextFrame(function () {\n\t      removeTransitionClass(el, startClass);\n\t      if (!cb.cancelled && !userWantsControl) {\n\t        whenTransitionEnds(el, type, cb);\n\t      }\n\t    });\n\t  }\n\t\n\t  if (vnode.data.show) {\n\t    toggleDisplay && toggleDisplay();\n\t    enterHook && enterHook(el, cb);\n\t  }\n\t\n\t  if (!expectsCSS && !userWantsControl) {\n\t    cb();\n\t  }\n\t}\n\t\n\tfunction leave (vnode, rm) {\n\t  var el = vnode.elm;\n\t\n\t  // call enter callback now\n\t  if (el._enterCb) {\n\t    el._enterCb.cancelled = true;\n\t    el._enterCb();\n\t  }\n\t\n\t  var data = resolveTransition(vnode.data.transition);\n\t  if (!data) {\n\t    return rm()\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (el._leaveCb || el.nodeType !== 1) {\n\t    return\n\t  }\n\t\n\t  var css = data.css;\n\t  var type = data.type;\n\t  var leaveClass = data.leaveClass;\n\t  var leaveActiveClass = data.leaveActiveClass;\n\t  var beforeLeave = data.beforeLeave;\n\t  var leave = data.leave;\n\t  var afterLeave = data.afterLeave;\n\t  var leaveCancelled = data.leaveCancelled;\n\t  var delayLeave = data.delayLeave;\n\t\n\t  var expectsCSS = css !== false && !isIE9;\n\t  var userWantsControl =\n\t    leave &&\n\t    // leave hook may be a bound method which exposes\n\t    // the length of original fn as _length\n\t    (leave._length || leave.length) > 1;\n\t\n\t  var cb = el._leaveCb = once(function () {\n\t    if (el.parentNode && el.parentNode._pending) {\n\t      el.parentNode._pending[vnode.key] = null;\n\t    }\n\t    if (expectsCSS) {\n\t      removeTransitionClass(el, leaveActiveClass);\n\t    }\n\t    if (cb.cancelled) {\n\t      if (expectsCSS) {\n\t        removeTransitionClass(el, leaveClass);\n\t      }\n\t      leaveCancelled && leaveCancelled(el);\n\t    } else {\n\t      rm();\n\t      afterLeave && afterLeave(el);\n\t    }\n\t    el._leaveCb = null;\n\t  });\n\t\n\t  if (delayLeave) {\n\t    delayLeave(performLeave);\n\t  } else {\n\t    performLeave();\n\t  }\n\t\n\t  function performLeave () {\n\t    // the delayed leave may have already been cancelled\n\t    if (cb.cancelled) {\n\t      return\n\t    }\n\t    // record leaving element\n\t    if (!vnode.data.show) {\n\t      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n\t    }\n\t    beforeLeave && beforeLeave(el);\n\t    if (expectsCSS) {\n\t      addTransitionClass(el, leaveClass);\n\t      addTransitionClass(el, leaveActiveClass);\n\t      nextFrame(function () {\n\t        removeTransitionClass(el, leaveClass);\n\t        if (!cb.cancelled && !userWantsControl) {\n\t          whenTransitionEnds(el, type, cb);\n\t        }\n\t      });\n\t    }\n\t    leave && leave(el, cb);\n\t    if (!expectsCSS && !userWantsControl) {\n\t      cb();\n\t    }\n\t  }\n\t}\n\t\n\tfunction resolveTransition (def$$1) {\n\t  if (!def$$1) {\n\t    return\n\t  }\n\t  /* istanbul ignore else */\n\t  if (typeof def$$1 === 'object') {\n\t    var res = {};\n\t    if (def$$1.css !== false) {\n\t      extend(res, autoCssTransition(def$$1.name || 'v'));\n\t    }\n\t    extend(res, def$$1);\n\t    return res\n\t  } else if (typeof def$$1 === 'string') {\n\t    return autoCssTransition(def$$1)\n\t  }\n\t}\n\t\n\tvar autoCssTransition = cached(function (name) {\n\t  return {\n\t    enterClass: (name + \"-enter\"),\n\t    leaveClass: (name + \"-leave\"),\n\t    appearClass: (name + \"-enter\"),\n\t    enterActiveClass: (name + \"-enter-active\"),\n\t    leaveActiveClass: (name + \"-leave-active\"),\n\t    appearActiveClass: (name + \"-enter-active\")\n\t  }\n\t});\n\t\n\tfunction once (fn) {\n\t  var called = false;\n\t  return function () {\n\t    if (!called) {\n\t      called = true;\n\t      fn();\n\t    }\n\t  }\n\t}\n\t\n\tfunction _enter (_, vnode) {\n\t  if (!vnode.data.show) {\n\t    enter(vnode);\n\t  }\n\t}\n\t\n\tvar transition = inBrowser ? {\n\t  create: _enter,\n\t  activate: _enter,\n\t  remove: function remove (vnode, rm) {\n\t    /* istanbul ignore else */\n\t    if (!vnode.data.show) {\n\t      leave(vnode, rm);\n\t    } else {\n\t      rm();\n\t    }\n\t  }\n\t} : {};\n\t\n\tvar platformModules = [\n\t  attrs,\n\t  klass,\n\t  events,\n\t  domProps,\n\t  style,\n\t  transition\n\t];\n\t\n\t/*  */\n\t\n\t// the directive module should be applied last, after all\n\t// built-in modules have been applied.\n\tvar modules = platformModules.concat(baseModules);\n\t\n\tvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\t\n\t/**\n\t * Not type checking this file because flow doesn't like attaching\n\t * properties to Elements.\n\t */\n\t\n\tvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\t\n\t/* istanbul ignore if */\n\tif (isIE9) {\n\t  // http://www.matts411.com/post/internet-explorer-9-oninput/\n\t  document.addEventListener('selectionchange', function () {\n\t    var el = document.activeElement;\n\t    if (el && el.vmodel) {\n\t      trigger(el, 'input');\n\t    }\n\t  });\n\t}\n\t\n\tvar model = {\n\t  inserted: function inserted (el, binding, vnode) {\n\t    if (false) {\n\t      if (!modelableTagRE.test(vnode.tag)) {\n\t        warn(\n\t          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n\t          'If you are working with contenteditable, it\\'s recommended to ' +\n\t          'wrap a library dedicated for that purpose inside a custom component.',\n\t          vnode.context\n\t        );\n\t      }\n\t    }\n\t    if (vnode.tag === 'select') {\n\t      var cb = function () {\n\t        setSelected(el, binding, vnode.context);\n\t      };\n\t      cb();\n\t      /* istanbul ignore if */\n\t      if (isIE || isEdge) {\n\t        setTimeout(cb, 0);\n\t      }\n\t    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n\t      el._vModifiers = binding.modifiers;\n\t      if (!binding.modifiers.lazy) {\n\t        if (!isAndroid) {\n\t          el.addEventListener('compositionstart', onCompositionStart);\n\t          el.addEventListener('compositionend', onCompositionEnd);\n\t        }\n\t        /* istanbul ignore if */\n\t        if (isIE9) {\n\t          el.vmodel = true;\n\t        }\n\t      }\n\t    }\n\t  },\n\t  componentUpdated: function componentUpdated (el, binding, vnode) {\n\t    if (vnode.tag === 'select') {\n\t      setSelected(el, binding, vnode.context);\n\t      // in case the options rendered by v-for have changed,\n\t      // it's possible that the value is out-of-sync with the rendered options.\n\t      // detect such cases and filter out values that no longer has a matching\n\t      // option in the DOM.\n\t      var needReset = el.multiple\n\t        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n\t        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n\t      if (needReset) {\n\t        trigger(el, 'change');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setSelected (el, binding, vm) {\n\t  var value = binding.value;\n\t  var isMultiple = el.multiple;\n\t  if (isMultiple && !Array.isArray(value)) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n\t      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  var selected, option;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    option = el.options[i];\n\t    if (isMultiple) {\n\t      selected = looseIndexOf(value, getValue(option)) > -1;\n\t      if (option.selected !== selected) {\n\t        option.selected = selected;\n\t      }\n\t    } else {\n\t      if (looseEqual(getValue(option), value)) {\n\t        if (el.selectedIndex !== i) {\n\t          el.selectedIndex = i;\n\t        }\n\t        return\n\t      }\n\t    }\n\t  }\n\t  if (!isMultiple) {\n\t    el.selectedIndex = -1;\n\t  }\n\t}\n\t\n\tfunction hasNoMatchingOption (value, options) {\n\t  for (var i = 0, l = options.length; i < l; i++) {\n\t    if (looseEqual(getValue(options[i]), value)) {\n\t      return false\n\t    }\n\t  }\n\t  return true\n\t}\n\t\n\tfunction getValue (option) {\n\t  return '_value' in option\n\t    ? option._value\n\t    : option.value\n\t}\n\t\n\tfunction onCompositionStart (e) {\n\t  e.target.composing = true;\n\t}\n\t\n\tfunction onCompositionEnd (e) {\n\t  e.target.composing = false;\n\t  trigger(e.target, 'input');\n\t}\n\t\n\tfunction trigger (el, type) {\n\t  var e = document.createEvent('HTMLEvents');\n\t  e.initEvent(type, true, true);\n\t  el.dispatchEvent(e);\n\t}\n\t\n\t/*  */\n\t\n\t// recursively search for possible transition defined inside the component root\n\tfunction locateNode (vnode) {\n\t  return vnode.child && (!vnode.data || !vnode.data.transition)\n\t    ? locateNode(vnode.child._vnode)\n\t    : vnode\n\t}\n\t\n\tvar show = {\n\t  bind: function bind (el, ref, vnode) {\n\t    var value = ref.value;\n\t\n\t    vnode = locateNode(vnode);\n\t    var transition = vnode.data && vnode.data.transition;\n\t    var originalDisplay = el.__vOriginalDisplay =\n\t      el.style.display === 'none' ? '' : el.style.display;\n\t    if (value && transition && !isIE9) {\n\t      vnode.data.show = true;\n\t      enter(vnode, function () {\n\t        el.style.display = originalDisplay;\n\t      });\n\t    } else {\n\t      el.style.display = value ? originalDisplay : 'none';\n\t    }\n\t  },\n\t  update: function update (el, ref, vnode) {\n\t    var value = ref.value;\n\t    var oldValue = ref.oldValue;\n\t\n\t    /* istanbul ignore if */\n\t    if (value === oldValue) { return }\n\t    vnode = locateNode(vnode);\n\t    var transition = vnode.data && vnode.data.transition;\n\t    if (transition && !isIE9) {\n\t      vnode.data.show = true;\n\t      if (value) {\n\t        enter(vnode, function () {\n\t          el.style.display = el.__vOriginalDisplay;\n\t        });\n\t      } else {\n\t        leave(vnode, function () {\n\t          el.style.display = 'none';\n\t        });\n\t      }\n\t    } else {\n\t      el.style.display = value ? el.__vOriginalDisplay : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar platformDirectives = {\n\t  model: model,\n\t  show: show\n\t};\n\t\n\t/*  */\n\t\n\t// Provides transition support for a single element/component.\n\t// supports transition mode (out-in / in-out)\n\t\n\tvar transitionProps = {\n\t  name: String,\n\t  appear: Boolean,\n\t  css: Boolean,\n\t  mode: String,\n\t  type: String,\n\t  enterClass: String,\n\t  leaveClass: String,\n\t  enterActiveClass: String,\n\t  leaveActiveClass: String,\n\t  appearClass: String,\n\t  appearActiveClass: String\n\t};\n\t\n\t// in case the child is also an abstract component, e.g. <keep-alive>\n\t// we want to recursively retrieve the real component to be rendered\n\tfunction getRealChild (vnode) {\n\t  var compOptions = vnode && vnode.componentOptions;\n\t  if (compOptions && compOptions.Ctor.options.abstract) {\n\t    return getRealChild(getFirstComponentChild(compOptions.children))\n\t  } else {\n\t    return vnode\n\t  }\n\t}\n\t\n\tfunction extractTransitionData (comp) {\n\t  var data = {};\n\t  var options = comp.$options;\n\t  // props\n\t  for (var key in options.propsData) {\n\t    data[key] = comp[key];\n\t  }\n\t  // events.\n\t  // extract listeners and pass them directly to the transition methods\n\t  var listeners = options._parentListeners;\n\t  for (var key$1 in listeners) {\n\t    data[camelize(key$1)] = listeners[key$1].fn;\n\t  }\n\t  return data\n\t}\n\t\n\tfunction placeholder (h, rawChild) {\n\t  return /\\d-keep-alive$/.test(rawChild.tag)\n\t    ? h('keep-alive')\n\t    : null\n\t}\n\t\n\tfunction hasParentTransition (vnode) {\n\t  while ((vnode = vnode.parent)) {\n\t    if (vnode.data.transition) {\n\t      return true\n\t    }\n\t  }\n\t}\n\t\n\tvar Transition = {\n\t  name: 'transition',\n\t  props: transitionProps,\n\t  abstract: true,\n\t  render: function render (h) {\n\t    var this$1 = this;\n\t\n\t    var children = this.$slots.default;\n\t    if (!children) {\n\t      return\n\t    }\n\t\n\t    // filter out text nodes (possible whitespaces)\n\t    children = children.filter(function (c) { return c.tag; });\n\t    /* istanbul ignore if */\n\t    if (!children.length) {\n\t      return\n\t    }\n\t\n\t    // warn multiple elements\n\t    if (false) {\n\t      warn(\n\t        '<transition> can only be used on a single element. Use ' +\n\t        '<transition-group> for lists.',\n\t        this.$parent\n\t      );\n\t    }\n\t\n\t    var mode = this.mode;\n\t\n\t    // warn invalid mode\n\t    if (false) {\n\t      warn(\n\t        'invalid <transition> mode: ' + mode,\n\t        this.$parent\n\t      );\n\t    }\n\t\n\t    var rawChild = children[0];\n\t\n\t    // if this is a component root node and the component's\n\t    // parent container node also has transition, skip.\n\t    if (hasParentTransition(this.$vnode)) {\n\t      return rawChild\n\t    }\n\t\n\t    // apply transition data to child\n\t    // use getRealChild() to ignore abstract components e.g. keep-alive\n\t    var child = getRealChild(rawChild);\n\t    /* istanbul ignore if */\n\t    if (!child) {\n\t      return rawChild\n\t    }\n\t\n\t    if (this._leaving) {\n\t      return placeholder(h, rawChild)\n\t    }\n\t\n\t    var key = child.key = child.key == null || child.isStatic\n\t      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n\t      : child.key;\n\t    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n\t    var oldRawChild = this._vnode;\n\t    var oldChild = getRealChild(oldRawChild);\n\t\n\t    // mark v-show\n\t    // so that the transition module can hand over the control to the directive\n\t    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n\t      child.data.show = true;\n\t    }\n\t\n\t    if (oldChild && oldChild.data && oldChild.key !== key) {\n\t      // replace old child transition data with fresh one\n\t      // important for dynamic transitions!\n\t      var oldData = oldChild.data.transition = extend({}, data);\n\t\n\t      // handle transition mode\n\t      if (mode === 'out-in') {\n\t        // return placeholder node and queue update when leave finishes\n\t        this._leaving = true;\n\t        mergeVNodeHook(oldData, 'afterLeave', function () {\n\t          this$1._leaving = false;\n\t          this$1.$forceUpdate();\n\t        }, key);\n\t        return placeholder(h, rawChild)\n\t      } else if (mode === 'in-out') {\n\t        var delayedLeave;\n\t        var performLeave = function () { delayedLeave(); };\n\t        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n\t        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n\t        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n\t          delayedLeave = leave;\n\t        }, key);\n\t      }\n\t    }\n\t\n\t    return rawChild\n\t  }\n\t};\n\t\n\t/*  */\n\t\n\t// Provides transition support for list items.\n\t// supports move transitions using the FLIP technique.\n\t\n\t// Because the vdom's children update algorithm is \"unstable\" - i.e.\n\t// it doesn't guarantee the relative positioning of removed elements,\n\t// we force transition-group to update its children into two passes:\n\t// in the first pass, we remove all nodes that need to be removed,\n\t// triggering their leaving transition; in the second pass, we insert/move\n\t// into the final disired state. This way in the second pass removed\n\t// nodes will remain where they should be.\n\t\n\tvar props = extend({\n\t  tag: String,\n\t  moveClass: String\n\t}, transitionProps);\n\t\n\tdelete props.mode;\n\t\n\tvar TransitionGroup = {\n\t  props: props,\n\t\n\t  render: function render (h) {\n\t    var tag = this.tag || this.$vnode.data.tag || 'span';\n\t    var map = Object.create(null);\n\t    var prevChildren = this.prevChildren = this.children;\n\t    var rawChildren = this.$slots.default || [];\n\t    var children = this.children = [];\n\t    var transitionData = extractTransitionData(this);\n\t\n\t    for (var i = 0; i < rawChildren.length; i++) {\n\t      var c = rawChildren[i];\n\t      if (c.tag) {\n\t        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n\t          children.push(c);\n\t          map[c.key] = c\n\t          ;(c.data || (c.data = {})).transition = transitionData;\n\t        } else if (false) {\n\t          var opts = c.componentOptions;\n\t          var name = opts\n\t            ? (opts.Ctor.options.name || opts.tag)\n\t            : c.tag;\n\t          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n\t        }\n\t      }\n\t    }\n\t\n\t    if (prevChildren) {\n\t      var kept = [];\n\t      var removed = [];\n\t      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n\t        var c$1 = prevChildren[i$1];\n\t        c$1.data.transition = transitionData;\n\t        c$1.data.pos = c$1.elm.getBoundingClientRect();\n\t        if (map[c$1.key]) {\n\t          kept.push(c$1);\n\t        } else {\n\t          removed.push(c$1);\n\t        }\n\t      }\n\t      this.kept = h(tag, null, kept);\n\t      this.removed = removed;\n\t    }\n\t\n\t    return h(tag, null, children)\n\t  },\n\t\n\t  beforeUpdate: function beforeUpdate () {\n\t    // force removing pass\n\t    this.__patch__(\n\t      this._vnode,\n\t      this.kept,\n\t      false, // hydrating\n\t      true // removeOnly (!important, avoids unnecessary moves)\n\t    );\n\t    this._vnode = this.kept;\n\t  },\n\t\n\t  updated: function updated () {\n\t    var children = this.prevChildren;\n\t    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n\t    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n\t      return\n\t    }\n\t\n\t    // we divide the work into three loops to avoid mixing DOM reads and writes\n\t    // in each iteration - which helps prevent layout thrashing.\n\t    children.forEach(callPendingCbs);\n\t    children.forEach(recordPosition);\n\t    children.forEach(applyTranslation);\n\t\n\t    // force reflow to put everything in position\n\t    var f = document.body.offsetHeight; // eslint-disable-line\n\t\n\t    children.forEach(function (c) {\n\t      if (c.data.moved) {\n\t        var el = c.elm;\n\t        var s = el.style;\n\t        addTransitionClass(el, moveClass);\n\t        s.transform = s.WebkitTransform = s.transitionDuration = '';\n\t        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n\t          if (!e || /transform$/.test(e.propertyName)) {\n\t            el.removeEventListener(transitionEndEvent, cb);\n\t            el._moveCb = null;\n\t            removeTransitionClass(el, moveClass);\n\t          }\n\t        });\n\t      }\n\t    });\n\t  },\n\t\n\t  methods: {\n\t    hasMove: function hasMove (el, moveClass) {\n\t      /* istanbul ignore if */\n\t      if (!hasTransition) {\n\t        return false\n\t      }\n\t      if (this._hasMove != null) {\n\t        return this._hasMove\n\t      }\n\t      addTransitionClass(el, moveClass);\n\t      var info = getTransitionInfo(el);\n\t      removeTransitionClass(el, moveClass);\n\t      return (this._hasMove = info.hasTransform)\n\t    }\n\t  }\n\t};\n\t\n\tfunction callPendingCbs (c) {\n\t  /* istanbul ignore if */\n\t  if (c.elm._moveCb) {\n\t    c.elm._moveCb();\n\t  }\n\t  /* istanbul ignore if */\n\t  if (c.elm._enterCb) {\n\t    c.elm._enterCb();\n\t  }\n\t}\n\t\n\tfunction recordPosition (c) {\n\t  c.data.newPos = c.elm.getBoundingClientRect();\n\t}\n\t\n\tfunction applyTranslation (c) {\n\t  var oldPos = c.data.pos;\n\t  var newPos = c.data.newPos;\n\t  var dx = oldPos.left - newPos.left;\n\t  var dy = oldPos.top - newPos.top;\n\t  if (dx || dy) {\n\t    c.data.moved = true;\n\t    var s = c.elm.style;\n\t    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n\t    s.transitionDuration = '0s';\n\t  }\n\t}\n\t\n\tvar platformComponents = {\n\t  Transition: Transition,\n\t  TransitionGroup: TransitionGroup\n\t};\n\t\n\t/*  */\n\t\n\t// install platform specific utils\n\tVue$3.config.isUnknownElement = isUnknownElement;\n\tVue$3.config.isReservedTag = isReservedTag;\n\tVue$3.config.getTagNamespace = getTagNamespace;\n\tVue$3.config.mustUseProp = mustUseProp;\n\t\n\t// install platform runtime directives & components\n\textend(Vue$3.options.directives, platformDirectives);\n\textend(Vue$3.options.components, platformComponents);\n\t\n\t// install platform patch function\n\tVue$3.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\t\n\t// wrap mount\n\tVue$3.prototype.$mount = function (\n\t  el,\n\t  hydrating\n\t) {\n\t  el = el && inBrowser ? query(el) : undefined;\n\t  return this._mount(el, hydrating)\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue$3);\n\t    } else if (\n\t      false\n\t    ) {\n\t      console.log(\n\t        'Download the Vue Devtools for a better development experience:\\n' +\n\t        'https://github.com/vuejs/vue-devtools'\n\t      );\n\t    }\n\t  }\n\t}, 0);\n\t\n\t/*  */\n\t\n\t// check whether current browser encodes a char inside attribute values\n\tfunction shouldDecode (content, encoded) {\n\t  var div = document.createElement('div');\n\t  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n\t  return div.innerHTML.indexOf(encoded) > 0\n\t}\n\t\n\t// #3663\n\t// IE encodes newlines inside attribute values while other browsers don't\n\tvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\t\n\t/*  */\n\t\n\tvar decoder;\n\t\n\tfunction decode (html) {\n\t  decoder = decoder || document.createElement('div');\n\t  decoder.innerHTML = html;\n\t  return decoder.textContent\n\t}\n\t\n\t/*  */\n\t\n\tvar isUnaryTag = makeMap(\n\t  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n\t  'link,meta,param,source,track,wbr',\n\t  true\n\t);\n\t\n\t// Elements that you can, intentionally, leave open\n\t// (and which close themselves)\n\tvar canBeLeftOpenTag = makeMap(\n\t  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\n\t  true\n\t);\n\t\n\t// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n\t// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n\tvar isNonPhrasingTag = makeMap(\n\t  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n\t  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n\t  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n\t  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n\t  'title,tr,track',\n\t  true\n\t);\n\t\n\t/**\n\t * Not type-checking this file because it's mostly vendor code.\n\t */\n\t\n\t/*!\n\t * HTML Parser By John Resig (ejohn.org)\n\t * Modified by Juriy \"kangax\" Zaytsev\n\t * Original code by Erik Arvidsson, Mozilla Public License\n\t * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n\t */\n\t\n\t// Regular Expressions for parsing tags and attributes\n\tvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\n\tvar singleAttrAssign = /(?:=)/;\n\tvar singleAttrValues = [\n\t  // attr value double quotes\n\t  /\"([^\"]*)\"+/.source,\n\t  // attr value, single quotes\n\t  /'([^']*)'+/.source,\n\t  // attr value, no quotes\n\t  /([^\\s\"'=<>`]+)/.source\n\t];\n\tvar attribute = new RegExp(\n\t  '^\\\\s*' + singleAttrIdentifier.source +\n\t  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n\t  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n\t);\n\t\n\t// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n\t// but for Vue templates we can enforce a simple charset\n\tvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\n\tvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\n\tvar startTagOpen = new RegExp('^<' + qnameCapture);\n\tvar startTagClose = /^\\s*(\\/?)>/;\n\tvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\n\tvar doctype = /^<!DOCTYPE [^>]+>/i;\n\tvar comment = /^<!--/;\n\tvar conditionalComment = /^<!\\[/;\n\t\n\tvar IS_REGEX_CAPTURING_BROKEN = false;\n\t'x'.replace(/x(.)?/g, function (m, g) {\n\t  IS_REGEX_CAPTURING_BROKEN = g === '';\n\t});\n\t\n\t// Special Elements (can contain anything)\n\tvar isScriptOrStyle = makeMap('script,style', true);\n\tvar hasLang = function (attr) { return attr.name === 'lang' && attr.value !== 'html'; };\n\tvar isSpecialTag = function (tag, isSFC, stack) {\n\t  if (isScriptOrStyle(tag)) {\n\t    return true\n\t  }\n\t  if (isSFC && stack.length === 1) {\n\t    // top-level template that has no pre-processor\n\t    if (tag === 'template' && !stack[0].attrs.some(hasLang)) {\n\t      return false\n\t    } else {\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t};\n\t\n\tvar reCache = {};\n\t\n\tvar ltRE = /&lt;/g;\n\tvar gtRE = /&gt;/g;\n\tvar nlRE = /&#10;/g;\n\tvar ampRE = /&amp;/g;\n\tvar quoteRE = /&quot;/g;\n\t\n\tfunction decodeAttr (value, shouldDecodeNewlines) {\n\t  if (shouldDecodeNewlines) {\n\t    value = value.replace(nlRE, '\\n');\n\t  }\n\t  return value\n\t    .replace(ltRE, '<')\n\t    .replace(gtRE, '>')\n\t    .replace(ampRE, '&')\n\t    .replace(quoteRE, '\"')\n\t}\n\t\n\tfunction parseHTML (html, options) {\n\t  var stack = [];\n\t  var expectHTML = options.expectHTML;\n\t  var isUnaryTag$$1 = options.isUnaryTag || no;\n\t  var index = 0;\n\t  var last, lastTag;\n\t  while (html) {\n\t    last = html;\n\t    // Make sure we're not in a script or style element\n\t    if (!lastTag || !isSpecialTag(lastTag, options.sfc, stack)) {\n\t      var textEnd = html.indexOf('<');\n\t      if (textEnd === 0) {\n\t        // Comment:\n\t        if (comment.test(html)) {\n\t          var commentEnd = html.indexOf('-->');\n\t\n\t          if (commentEnd >= 0) {\n\t            advance(commentEnd + 3);\n\t            continue\n\t          }\n\t        }\n\t\n\t        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n\t        if (conditionalComment.test(html)) {\n\t          var conditionalEnd = html.indexOf(']>');\n\t\n\t          if (conditionalEnd >= 0) {\n\t            advance(conditionalEnd + 2);\n\t            continue\n\t          }\n\t        }\n\t\n\t        // Doctype:\n\t        var doctypeMatch = html.match(doctype);\n\t        if (doctypeMatch) {\n\t          advance(doctypeMatch[0].length);\n\t          continue\n\t        }\n\t\n\t        // End tag:\n\t        var endTagMatch = html.match(endTag);\n\t        if (endTagMatch) {\n\t          var curIndex = index;\n\t          advance(endTagMatch[0].length);\n\t          parseEndTag(endTagMatch[0], endTagMatch[1], curIndex, index);\n\t          continue\n\t        }\n\t\n\t        // Start tag:\n\t        var startTagMatch = parseStartTag();\n\t        if (startTagMatch) {\n\t          handleStartTag(startTagMatch);\n\t          continue\n\t        }\n\t      }\n\t\n\t      var text = (void 0), rest$1 = (void 0), next = (void 0);\n\t      if (textEnd > 0) {\n\t        rest$1 = html.slice(textEnd);\n\t        while (\n\t          !endTag.test(rest$1) &&\n\t          !startTagOpen.test(rest$1) &&\n\t          !comment.test(rest$1) &&\n\t          !conditionalComment.test(rest$1)\n\t        ) {\n\t          // < in plain text, be forgiving and treat it as text\n\t          next = rest$1.indexOf('<', 1);\n\t          if (next < 0) { break }\n\t          textEnd += next;\n\t          rest$1 = html.slice(textEnd);\n\t        }\n\t        text = html.substring(0, textEnd);\n\t        advance(textEnd);\n\t      }\n\t\n\t      if (textEnd < 0) {\n\t        text = html;\n\t        html = '';\n\t      }\n\t\n\t      if (options.chars && text) {\n\t        options.chars(text);\n\t      }\n\t    } else {\n\t      var stackedTag = lastTag.toLowerCase();\n\t      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n\t      var endTagLength = 0;\n\t      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n\t        endTagLength = endTag.length;\n\t        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n\t          text = text\n\t            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n\t            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n\t        }\n\t        if (options.chars) {\n\t          options.chars(text);\n\t        }\n\t        return ''\n\t      });\n\t      index += html.length - rest.length;\n\t      html = rest;\n\t      parseEndTag('</' + stackedTag + '>', stackedTag, index - endTagLength, index);\n\t    }\n\t\n\t    if (html === last && options.chars) {\n\t      options.chars(html);\n\t      break\n\t    }\n\t  }\n\t\n\t  // Clean up any remaining tags\n\t  parseEndTag();\n\t\n\t  function advance (n) {\n\t    index += n;\n\t    html = html.substring(n);\n\t  }\n\t\n\t  function parseStartTag () {\n\t    var start = html.match(startTagOpen);\n\t    if (start) {\n\t      var match = {\n\t        tagName: start[1],\n\t        attrs: [],\n\t        start: index\n\t      };\n\t      advance(start[0].length);\n\t      var end, attr;\n\t      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n\t        advance(attr[0].length);\n\t        match.attrs.push(attr);\n\t      }\n\t      if (end) {\n\t        match.unarySlash = end[1];\n\t        advance(end[0].length);\n\t        match.end = index;\n\t        return match\n\t      }\n\t    }\n\t  }\n\t\n\t  function handleStartTag (match) {\n\t    var tagName = match.tagName;\n\t    var unarySlash = match.unarySlash;\n\t\n\t    if (expectHTML) {\n\t      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n\t        parseEndTag('', lastTag);\n\t      }\n\t      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n\t        parseEndTag('', tagName);\n\t      }\n\t    }\n\t\n\t    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\t\n\t    var l = match.attrs.length;\n\t    var attrs = new Array(l);\n\t    for (var i = 0; i < l; i++) {\n\t      var args = match.attrs[i];\n\t      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n\t      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n\t        if (args[3] === '') { delete args[3]; }\n\t        if (args[4] === '') { delete args[4]; }\n\t        if (args[5] === '') { delete args[5]; }\n\t      }\n\t      var value = args[3] || args[4] || args[5] || '';\n\t      attrs[i] = {\n\t        name: args[1],\n\t        value: decodeAttr(\n\t          value,\n\t          options.shouldDecodeNewlines\n\t        )\n\t      };\n\t    }\n\t\n\t    if (!unary) {\n\t      stack.push({ tag: tagName, attrs: attrs });\n\t      lastTag = tagName;\n\t      unarySlash = '';\n\t    }\n\t\n\t    if (options.start) {\n\t      options.start(tagName, attrs, unary, match.start, match.end);\n\t    }\n\t  }\n\t\n\t  function parseEndTag (tag, tagName, start, end) {\n\t    var pos;\n\t    if (start == null) { start = index; }\n\t    if (end == null) { end = index; }\n\t\n\t    // Find the closest opened tag of the same type\n\t    if (tagName) {\n\t      var needle = tagName.toLowerCase();\n\t      for (pos = stack.length - 1; pos >= 0; pos--) {\n\t        if (stack[pos].tag.toLowerCase() === needle) {\n\t          break\n\t        }\n\t      }\n\t    } else {\n\t      // If no tag name is provided, clean shop\n\t      pos = 0;\n\t    }\n\t\n\t    if (pos >= 0) {\n\t      // Close all the open elements, up the stack\n\t      for (var i = stack.length - 1; i >= pos; i--) {\n\t        if (options.end) {\n\t          options.end(stack[i].tag, start, end);\n\t        }\n\t      }\n\t\n\t      // Remove the open elements from the stack\n\t      stack.length = pos;\n\t      lastTag = pos && stack[pos - 1].tag;\n\t    } else if (tagName.toLowerCase() === 'br') {\n\t      if (options.start) {\n\t        options.start(tagName, [], true, start, end);\n\t      }\n\t    } else if (tagName.toLowerCase() === 'p') {\n\t      if (options.start) {\n\t        options.start(tagName, [], false, start, end);\n\t      }\n\t      if (options.end) {\n\t        options.end(tagName, start, end);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction parseFilters (exp) {\n\t  var inSingle = false;\n\t  var inDouble = false;\n\t  var inTemplateString = false;\n\t  var inRegex = false;\n\t  var curly = 0;\n\t  var square = 0;\n\t  var paren = 0;\n\t  var lastFilterIndex = 0;\n\t  var c, prev, i, expression, filters;\n\t\n\t  for (i = 0; i < exp.length; i++) {\n\t    prev = c;\n\t    c = exp.charCodeAt(i);\n\t    if (inSingle) {\n\t      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n\t    } else if (inDouble) {\n\t      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n\t    } else if (inTemplateString) {\n\t      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n\t    } else if (inRegex) {\n\t      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n\t    } else if (\n\t      c === 0x7C && // pipe\n\t      exp.charCodeAt(i + 1) !== 0x7C &&\n\t      exp.charCodeAt(i - 1) !== 0x7C &&\n\t      !curly && !square && !paren\n\t    ) {\n\t      if (expression === undefined) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        expression = exp.slice(0, i).trim();\n\t      } else {\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22: inDouble = true; break         // \"\n\t        case 0x27: inSingle = true; break         // '\n\t        case 0x60: inTemplateString = true; break // `\n\t        case 0x28: paren++; break                 // (\n\t        case 0x29: paren--; break                 // )\n\t        case 0x5B: square++; break                // [\n\t        case 0x5D: square--; break                // ]\n\t        case 0x7B: curly++; break                 // {\n\t        case 0x7D: curly--; break                 // }\n\t      }\n\t      if (c === 0x2f) { // /\n\t        var j = i - 1;\n\t        var p = (void 0);\n\t        // find first non-whitespace prev char\n\t        for (; j >= 0; j--) {\n\t          p = exp.charAt(j);\n\t          if (p !== ' ') { break }\n\t        }\n\t        if (!p || !/[\\w$]/.test(p)) {\n\t          inRegex = true;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (expression === undefined) {\n\t    expression = exp.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  function pushFilter () {\n\t    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n\t    lastFilterIndex = i + 1;\n\t  }\n\t\n\t  if (filters) {\n\t    for (i = 0; i < filters.length; i++) {\n\t      expression = wrapFilter(expression, filters[i]);\n\t    }\n\t  }\n\t\n\t  return expression\n\t}\n\t\n\tfunction wrapFilter (exp, filter) {\n\t  var i = filter.indexOf('(');\n\t  if (i < 0) {\n\t    // _f: resolveFilter\n\t    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n\t  } else {\n\t    var name = filter.slice(0, i);\n\t    var args = filter.slice(i + 1);\n\t    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]/\\\\]/g;\n\t\n\tvar buildRegex = cached(function (delimiters) {\n\t  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n\t  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n\t  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n\t});\n\t\n\tfunction parseText (\n\t  text,\n\t  delimiters\n\t) {\n\t  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n\t  if (!tagRE.test(text)) {\n\t    return\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index;\n\t  while ((match = tagRE.exec(text))) {\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n\t    }\n\t    // tag token\n\t    var exp = parseFilters(match[1].trim());\n\t    tokens.push((\"_s(\" + exp + \")\"));\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push(JSON.stringify(text.slice(lastIndex)));\n\t  }\n\t  return tokens.join('+')\n\t}\n\t\n\t/*  */\n\t\n\tfunction baseWarn (msg) {\n\t  console.error((\"[Vue parser]: \" + msg));\n\t}\n\t\n\tfunction pluckModuleFunction (\n\t  modules,\n\t  key\n\t) {\n\t  return modules\n\t    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n\t    : []\n\t}\n\t\n\tfunction addProp (el, name, value) {\n\t  (el.props || (el.props = [])).push({ name: name, value: value });\n\t}\n\t\n\tfunction addAttr (el, name, value) {\n\t  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n\t}\n\t\n\tfunction addDirective (\n\t  el,\n\t  name,\n\t  rawName,\n\t  value,\n\t  arg,\n\t  modifiers\n\t) {\n\t  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n\t}\n\t\n\tfunction addHandler (\n\t  el,\n\t  name,\n\t  value,\n\t  modifiers,\n\t  important\n\t) {\n\t  // check capture modifier\n\t  if (modifiers && modifiers.capture) {\n\t    delete modifiers.capture;\n\t    name = '!' + name; // mark the event as captured\n\t  }\n\t  if (modifiers && modifiers.once) {\n\t    delete modifiers.once;\n\t    name = '~' + name; // mark the event as once\n\t  }\n\t  var events;\n\t  if (modifiers && modifiers.native) {\n\t    delete modifiers.native;\n\t    events = el.nativeEvents || (el.nativeEvents = {});\n\t  } else {\n\t    events = el.events || (el.events = {});\n\t  }\n\t  var newHandler = { value: value, modifiers: modifiers };\n\t  var handlers = events[name];\n\t  /* istanbul ignore if */\n\t  if (Array.isArray(handlers)) {\n\t    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n\t  } else if (handlers) {\n\t    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n\t  } else {\n\t    events[name] = newHandler;\n\t  }\n\t}\n\t\n\tfunction getBindingAttr (\n\t  el,\n\t  name,\n\t  getStatic\n\t) {\n\t  var dynamicValue =\n\t    getAndRemoveAttr(el, ':' + name) ||\n\t    getAndRemoveAttr(el, 'v-bind:' + name);\n\t  if (dynamicValue != null) {\n\t    return parseFilters(dynamicValue)\n\t  } else if (getStatic !== false) {\n\t    var staticValue = getAndRemoveAttr(el, name);\n\t    if (staticValue != null) {\n\t      return JSON.stringify(staticValue)\n\t    }\n\t  }\n\t}\n\t\n\tfunction getAndRemoveAttr (el, name) {\n\t  var val;\n\t  if ((val = el.attrsMap[name]) != null) {\n\t    var list = el.attrsList;\n\t    for (var i = 0, l = list.length; i < l; i++) {\n\t      if (list[i].name === name) {\n\t        list.splice(i, 1);\n\t        break\n\t      }\n\t    }\n\t  }\n\t  return val\n\t}\n\t\n\tvar len;\n\tvar str;\n\tvar chr;\n\tvar index$1;\n\tvar expressionPos;\n\tvar expressionEndPos;\n\t\n\t/**\n\t * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n\t *\n\t * for loop possible cases:\n\t *\n\t * - test\n\t * - test[idx]\n\t * - test[test1[idx]]\n\t * - test[\"a\"][idx]\n\t * - xxx.test[a[a].test1[idx]]\n\t * - test.xxx.a[\"asa\"][test1[idx]]\n\t *\n\t */\n\t\n\tfunction parseModel (val) {\n\t  str = val;\n\t  len = str.length;\n\t  index$1 = expressionPos = expressionEndPos = 0;\n\t\n\t  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n\t    return {\n\t      exp: val,\n\t      idx: null\n\t    }\n\t  }\n\t\n\t  while (!eof()) {\n\t    chr = next();\n\t    /* istanbul ignore if */\n\t    if (isStringStart(chr)) {\n\t      parseString(chr);\n\t    } else if (chr === 0x5B) {\n\t      parseBracket(chr);\n\t    }\n\t  }\n\t\n\t  return {\n\t    exp: val.substring(0, expressionPos),\n\t    idx: val.substring(expressionPos + 1, expressionEndPos)\n\t  }\n\t}\n\t\n\tfunction next () {\n\t  return str.charCodeAt(++index$1)\n\t}\n\t\n\tfunction eof () {\n\t  return index$1 >= len\n\t}\n\t\n\tfunction isStringStart (chr) {\n\t  return chr === 0x22 || chr === 0x27\n\t}\n\t\n\tfunction parseBracket (chr) {\n\t  var inBracket = 1;\n\t  expressionPos = index$1;\n\t  while (!eof()) {\n\t    chr = next();\n\t    if (isStringStart(chr)) {\n\t      parseString(chr);\n\t      continue\n\t    }\n\t    if (chr === 0x5B) { inBracket++; }\n\t    if (chr === 0x5D) { inBracket--; }\n\t    if (inBracket === 0) {\n\t      expressionEndPos = index$1;\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseString (chr) {\n\t  var stringQuote = chr;\n\t  while (!eof()) {\n\t    chr = next();\n\t    if (chr === stringQuote) {\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar dirRE = /^v-|^@|^:/;\n\tvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\n\tvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\tvar bindRE = /^:|^v-bind:/;\n\tvar onRE = /^@|^v-on:/;\n\tvar argRE = /:(.*)$/;\n\tvar modifierRE = /\\.[^.]+/g;\n\t\n\tvar decodeHTMLCached = cached(decode);\n\t\n\t// configurable state\n\tvar warn$1;\n\tvar platformGetTagNamespace;\n\tvar platformMustUseProp;\n\tvar platformIsPreTag;\n\tvar preTransforms;\n\tvar transforms;\n\tvar postTransforms;\n\tvar delimiters;\n\t\n\t/**\n\t * Convert HTML string to AST.\n\t */\n\tfunction parse (\n\t  template,\n\t  options\n\t) {\n\t  warn$1 = options.warn || baseWarn;\n\t  platformGetTagNamespace = options.getTagNamespace || no;\n\t  platformMustUseProp = options.mustUseProp || no;\n\t  platformIsPreTag = options.isPreTag || no;\n\t  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n\t  transforms = pluckModuleFunction(options.modules, 'transformNode');\n\t  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\t  delimiters = options.delimiters;\n\t  var stack = [];\n\t  var preserveWhitespace = options.preserveWhitespace !== false;\n\t  var root;\n\t  var currentParent;\n\t  var inVPre = false;\n\t  var inPre = false;\n\t  var warned = false;\n\t  parseHTML(template, {\n\t    expectHTML: options.expectHTML,\n\t    isUnaryTag: options.isUnaryTag,\n\t    shouldDecodeNewlines: options.shouldDecodeNewlines,\n\t    start: function start (tag, attrs, unary) {\n\t      // check namespace.\n\t      // inherit parent ns if there is one\n\t      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\t\n\t      // handle IE svg bug\n\t      /* istanbul ignore if */\n\t      if (isIE && ns === 'svg') {\n\t        attrs = guardIESVGBug(attrs);\n\t      }\n\t\n\t      var element = {\n\t        type: 1,\n\t        tag: tag,\n\t        attrsList: attrs,\n\t        attrsMap: makeAttrsMap(attrs),\n\t        parent: currentParent,\n\t        children: []\n\t      };\n\t      if (ns) {\n\t        element.ns = ns;\n\t      }\n\t\n\t      if (isForbiddenTag(element) && !isServerRendering()) {\n\t        element.forbidden = true;\n\t        (\"production\") !== 'production' && warn$1(\n\t          'Templates should only be responsible for mapping the state to the ' +\n\t          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n\t          \"<\" + tag + \">.\"\n\t        );\n\t      }\n\t\n\t      // apply pre-transforms\n\t      for (var i = 0; i < preTransforms.length; i++) {\n\t        preTransforms[i](element, options);\n\t      }\n\t\n\t      if (!inVPre) {\n\t        processPre(element);\n\t        if (element.pre) {\n\t          inVPre = true;\n\t        }\n\t      }\n\t      if (platformIsPreTag(element.tag)) {\n\t        inPre = true;\n\t      }\n\t      if (inVPre) {\n\t        processRawAttrs(element);\n\t      } else {\n\t        processFor(element);\n\t        processIf(element);\n\t        processOnce(element);\n\t        processKey(element);\n\t\n\t        // determine whether this is a plain element after\n\t        // removing structural attributes\n\t        element.plain = !element.key && !attrs.length;\n\t\n\t        processRef(element);\n\t        processSlot(element);\n\t        processComponent(element);\n\t        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n\t          transforms[i$1](element, options);\n\t        }\n\t        processAttrs(element);\n\t      }\n\t\n\t      function checkRootConstraints (el) {\n\t        if (false) {\n\t          if (el.tag === 'slot' || el.tag === 'template') {\n\t            warned = true;\n\t            warn$1(\n\t              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n\t              'contain multiple nodes:\\n' + template\n\t            );\n\t          }\n\t          if (el.attrsMap.hasOwnProperty('v-for')) {\n\t            warned = true;\n\t            warn$1(\n\t              'Cannot use v-for on stateful component root element because ' +\n\t              'it renders multiple elements:\\n' + template\n\t            );\n\t          }\n\t        }\n\t      }\n\t\n\t      // tree management\n\t      if (!root) {\n\t        root = element;\n\t        checkRootConstraints(root);\n\t      } else if (!stack.length) {\n\t        // allow root elements with v-if, v-else-if and v-else\n\t        if (root.if && (element.elseif || element.else)) {\n\t          checkRootConstraints(element);\n\t          addIfCondition(root, {\n\t            exp: element.elseif,\n\t            block: element\n\t          });\n\t        } else if (false) {\n\t          warned = true;\n\t          warn$1(\n\t            \"Component template should contain exactly one root element:\" +\n\t            \"\\n\\n\" + template + \"\\n\\n\" +\n\t            \"If you are using v-if on multiple elements, \" +\n\t            \"use v-else-if to chain them instead.\"\n\t          );\n\t        }\n\t      }\n\t      if (currentParent && !element.forbidden) {\n\t        if (element.elseif || element.else) {\n\t          processIfConditions(element, currentParent);\n\t        } else if (element.slotScope) { // scoped slot\n\t          currentParent.plain = false;\n\t          var name = element.slotTarget || 'default';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n\t        } else {\n\t          currentParent.children.push(element);\n\t          element.parent = currentParent;\n\t        }\n\t      }\n\t      if (!unary) {\n\t        currentParent = element;\n\t        stack.push(element);\n\t      }\n\t      // apply post-transforms\n\t      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n\t        postTransforms[i$2](element, options);\n\t      }\n\t    },\n\t\n\t    end: function end () {\n\t      // remove trailing whitespace\n\t      var element = stack[stack.length - 1];\n\t      var lastNode = element.children[element.children.length - 1];\n\t      if (lastNode && lastNode.type === 3 && lastNode.text === ' ') {\n\t        element.children.pop();\n\t      }\n\t      // pop stack\n\t      stack.length -= 1;\n\t      currentParent = stack[stack.length - 1];\n\t      // check pre state\n\t      if (element.pre) {\n\t        inVPre = false;\n\t      }\n\t      if (platformIsPreTag(element.tag)) {\n\t        inPre = false;\n\t      }\n\t    },\n\t\n\t    chars: function chars (text) {\n\t      if (!currentParent) {\n\t        if (false) {\n\t          warned = true;\n\t          warn$1(\n\t            'Component template requires a root element, rather than just text:\\n\\n' + template\n\t          );\n\t        }\n\t        return\n\t      }\n\t      // IE textarea placeholder bug\n\t      /* istanbul ignore if */\n\t      if (isIE &&\n\t          currentParent.tag === 'textarea' &&\n\t          currentParent.attrsMap.placeholder === text) {\n\t        return\n\t      }\n\t      text = inPre || text.trim()\n\t        ? decodeHTMLCached(text)\n\t        // only preserve whitespace if its not right after a starting tag\n\t        : preserveWhitespace && currentParent.children.length ? ' ' : '';\n\t      if (text) {\n\t        var expression;\n\t        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n\t          currentParent.children.push({\n\t            type: 2,\n\t            expression: expression,\n\t            text: text\n\t          });\n\t        } else {\n\t          currentParent.children.push({\n\t            type: 3,\n\t            text: text\n\t          });\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return root\n\t}\n\t\n\tfunction processPre (el) {\n\t  if (getAndRemoveAttr(el, 'v-pre') != null) {\n\t    el.pre = true;\n\t  }\n\t}\n\t\n\tfunction processRawAttrs (el) {\n\t  var l = el.attrsList.length;\n\t  if (l) {\n\t    var attrs = el.attrs = new Array(l);\n\t    for (var i = 0; i < l; i++) {\n\t      attrs[i] = {\n\t        name: el.attrsList[i].name,\n\t        value: JSON.stringify(el.attrsList[i].value)\n\t      };\n\t    }\n\t  } else if (!el.pre) {\n\t    // non root node in pre blocks with no attributes\n\t    el.plain = true;\n\t  }\n\t}\n\t\n\tfunction processKey (el) {\n\t  var exp = getBindingAttr(el, 'key');\n\t  if (exp) {\n\t    if (false) {\n\t      warn$1(\"<template> cannot be keyed. Place the key on real elements instead.\");\n\t    }\n\t    el.key = exp;\n\t  }\n\t}\n\t\n\tfunction processRef (el) {\n\t  var ref = getBindingAttr(el, 'ref');\n\t  if (ref) {\n\t    el.ref = ref;\n\t    el.refInFor = checkInFor(el);\n\t  }\n\t}\n\t\n\tfunction processFor (el) {\n\t  var exp;\n\t  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n\t    var inMatch = exp.match(forAliasRE);\n\t    if (!inMatch) {\n\t      (\"production\") !== 'production' && warn$1(\n\t        (\"Invalid v-for expression: \" + exp)\n\t      );\n\t      return\n\t    }\n\t    el.for = inMatch[2].trim();\n\t    var alias = inMatch[1].trim();\n\t    var iteratorMatch = alias.match(forIteratorRE);\n\t    if (iteratorMatch) {\n\t      el.alias = iteratorMatch[1].trim();\n\t      el.iterator1 = iteratorMatch[2].trim();\n\t      if (iteratorMatch[3]) {\n\t        el.iterator2 = iteratorMatch[3].trim();\n\t      }\n\t    } else {\n\t      el.alias = alias;\n\t    }\n\t  }\n\t}\n\t\n\tfunction processIf (el) {\n\t  var exp = getAndRemoveAttr(el, 'v-if');\n\t  if (exp) {\n\t    el.if = exp;\n\t    addIfCondition(el, {\n\t      exp: exp,\n\t      block: el\n\t    });\n\t  } else {\n\t    if (getAndRemoveAttr(el, 'v-else') != null) {\n\t      el.else = true;\n\t    }\n\t    var elseif = getAndRemoveAttr(el, 'v-else-if');\n\t    if (elseif) {\n\t      el.elseif = elseif;\n\t    }\n\t  }\n\t}\n\t\n\tfunction processIfConditions (el, parent) {\n\t  var prev = findPrevElement(parent.children);\n\t  if (prev && prev.if) {\n\t    addIfCondition(prev, {\n\t      exp: el.elseif,\n\t      block: el\n\t    });\n\t  } else if (false) {\n\t    warn$1(\n\t      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n\t      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n\t    );\n\t  }\n\t}\n\t\n\tfunction addIfCondition (el, condition) {\n\t  if (!el.ifConditions) {\n\t    el.ifConditions = [];\n\t  }\n\t  el.ifConditions.push(condition);\n\t}\n\t\n\tfunction processOnce (el) {\n\t  var once = getAndRemoveAttr(el, 'v-once');\n\t  if (once != null) {\n\t    el.once = true;\n\t  }\n\t}\n\t\n\tfunction processSlot (el) {\n\t  if (el.tag === 'slot') {\n\t    el.slotName = getBindingAttr(el, 'name');\n\t    if (false) {\n\t      warn$1(\n\t        \"`key` does not work on <slot> because slots are abstract outlets \" +\n\t        \"and can possibly expand into multiple elements. \" +\n\t        \"Use the key on a wrapping element instead.\"\n\t      );\n\t    }\n\t  } else {\n\t    var slotTarget = getBindingAttr(el, 'slot');\n\t    if (slotTarget) {\n\t      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n\t    }\n\t    if (el.tag === 'template') {\n\t      el.slotScope = getAndRemoveAttr(el, 'scope');\n\t    }\n\t  }\n\t}\n\t\n\tfunction processComponent (el) {\n\t  var binding;\n\t  if ((binding = getBindingAttr(el, 'is'))) {\n\t    el.component = binding;\n\t  }\n\t  if (getAndRemoveAttr(el, 'inline-template') != null) {\n\t    el.inlineTemplate = true;\n\t  }\n\t}\n\t\n\tfunction processAttrs (el) {\n\t  var list = el.attrsList;\n\t  var i, l, name, rawName, value, arg, modifiers, isProp;\n\t  for (i = 0, l = list.length; i < l; i++) {\n\t    name = rawName = list[i].name;\n\t    value = list[i].value;\n\t    if (dirRE.test(name)) {\n\t      // mark element as dynamic\n\t      el.hasBindings = true;\n\t      // modifiers\n\t      modifiers = parseModifiers(name);\n\t      if (modifiers) {\n\t        name = name.replace(modifierRE, '');\n\t      }\n\t      if (bindRE.test(name)) { // v-bind\n\t        name = name.replace(bindRE, '');\n\t        value = parseFilters(value);\n\t        isProp = false;\n\t        if (modifiers) {\n\t          if (modifiers.prop) {\n\t            isProp = true;\n\t            name = camelize(name);\n\t            if (name === 'innerHtml') { name = 'innerHTML'; }\n\t          }\n\t          if (modifiers.camel) {\n\t            name = camelize(name);\n\t          }\n\t        }\n\t        if (isProp || platformMustUseProp(el.tag, name)) {\n\t          addProp(el, name, value);\n\t        } else {\n\t          addAttr(el, name, value);\n\t        }\n\t      } else if (onRE.test(name)) { // v-on\n\t        name = name.replace(onRE, '');\n\t        addHandler(el, name, value, modifiers);\n\t      } else { // normal directives\n\t        name = name.replace(dirRE, '');\n\t        // parse arg\n\t        var argMatch = name.match(argRE);\n\t        if (argMatch && (arg = argMatch[1])) {\n\t          name = name.slice(0, -(arg.length + 1));\n\t        }\n\t        addDirective(el, name, rawName, value, arg, modifiers);\n\t        if (false) {\n\t          checkForAliasModel(el, value);\n\t        }\n\t      }\n\t    } else {\n\t      // literal attribute\n\t      if (false) {\n\t        var expression = parseText(value, delimiters);\n\t        if (expression) {\n\t          warn$1(\n\t            name + \"=\\\"\" + value + \"\\\": \" +\n\t            'Interpolation inside attributes has been removed. ' +\n\t            'Use v-bind or the colon shorthand instead. For example, ' +\n\t            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n\t          );\n\t        }\n\t      }\n\t      addAttr(el, name, JSON.stringify(value));\n\t    }\n\t  }\n\t}\n\t\n\tfunction checkInFor (el) {\n\t  var parent = el;\n\t  while (parent) {\n\t    if (parent.for !== undefined) {\n\t      return true\n\t    }\n\t    parent = parent.parent;\n\t  }\n\t  return false\n\t}\n\t\n\tfunction parseModifiers (name) {\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var ret = {};\n\t    match.forEach(function (m) { ret[m.slice(1)] = true; });\n\t    return ret\n\t  }\n\t}\n\t\n\tfunction makeAttrsMap (attrs) {\n\t  var map = {};\n\t  for (var i = 0, l = attrs.length; i < l; i++) {\n\t    if (false) {\n\t      warn$1('duplicate attribute: ' + attrs[i].name);\n\t    }\n\t    map[attrs[i].name] = attrs[i].value;\n\t  }\n\t  return map\n\t}\n\t\n\tfunction findPrevElement (children) {\n\t  var i = children.length;\n\t  while (i--) {\n\t    if (children[i].tag) { return children[i] }\n\t  }\n\t}\n\t\n\tfunction isForbiddenTag (el) {\n\t  return (\n\t    el.tag === 'style' ||\n\t    (el.tag === 'script' && (\n\t      !el.attrsMap.type ||\n\t      el.attrsMap.type === 'text/javascript'\n\t    ))\n\t  )\n\t}\n\t\n\tvar ieNSBug = /^xmlns:NS\\d+/;\n\tvar ieNSPrefix = /^NS\\d+:/;\n\t\n\t/* istanbul ignore next */\n\tfunction guardIESVGBug (attrs) {\n\t  var res = [];\n\t  for (var i = 0; i < attrs.length; i++) {\n\t    var attr = attrs[i];\n\t    if (!ieNSBug.test(attr.name)) {\n\t      attr.name = attr.name.replace(ieNSPrefix, '');\n\t      res.push(attr);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\tfunction checkForAliasModel (el, value) {\n\t  var _el = el;\n\t  while (_el) {\n\t    if (_el.for && _el.alias === value) {\n\t      warn$1(\n\t        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n\t        \"You are binding v-model directly to a v-for iteration alias. \" +\n\t        \"This will not be able to modify the v-for source array because \" +\n\t        \"writing to the alias is like modifying a function local variable. \" +\n\t        \"Consider using an array of objects and use v-model on an object property instead.\"\n\t      );\n\t    }\n\t    _el = _el.parent;\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar isStaticKey;\n\tvar isPlatformReservedTag;\n\t\n\tvar genStaticKeysCached = cached(genStaticKeys$1);\n\t\n\t/**\n\t * Goal of the optimizer: walk the generated template AST tree\n\t * and detect sub-trees that are purely static, i.e. parts of\n\t * the DOM that never needs to change.\n\t *\n\t * Once we detect these sub-trees, we can:\n\t *\n\t * 1. Hoist them into constants, so that we no longer need to\n\t *    create fresh nodes for them on each re-render;\n\t * 2. Completely skip them in the patching process.\n\t */\n\tfunction optimize (root, options) {\n\t  if (!root) { return }\n\t  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n\t  isPlatformReservedTag = options.isReservedTag || no;\n\t  // first pass: mark all non-static nodes.\n\t  markStatic(root);\n\t  // second pass: mark static roots.\n\t  markStaticRoots(root, false);\n\t}\n\t\n\tfunction genStaticKeys$1 (keys) {\n\t  return makeMap(\n\t    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n\t    (keys ? ',' + keys : '')\n\t  )\n\t}\n\t\n\tfunction markStatic (node) {\n\t  node.static = isStatic(node);\n\t  if (node.type === 1) {\n\t    // do not make component slot content static. this avoids\n\t    // 1. components not able to mutate slot nodes\n\t    // 2. static slot content fails for hot-reloading\n\t    if (\n\t      !isPlatformReservedTag(node.tag) &&\n\t      node.tag !== 'slot' &&\n\t      node.attrsMap['inline-template'] == null\n\t    ) {\n\t      return\n\t    }\n\t    for (var i = 0, l = node.children.length; i < l; i++) {\n\t      var child = node.children[i];\n\t      markStatic(child);\n\t      if (!child.static) {\n\t        node.static = false;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction markStaticRoots (node, isInFor) {\n\t  if (node.type === 1) {\n\t    if (node.static || node.once) {\n\t      node.staticInFor = isInFor;\n\t    }\n\t    // For a node to qualify as a static root, it should have children that\n\t    // are not just static text. Otherwise the cost of hoisting out will\n\t    // outweigh the benefits and it's better off to just always render it fresh.\n\t    if (node.static && node.children.length && !(\n\t      node.children.length === 1 &&\n\t      node.children[0].type === 3\n\t    )) {\n\t      node.staticRoot = true;\n\t      return\n\t    } else {\n\t      node.staticRoot = false;\n\t    }\n\t    if (node.children) {\n\t      for (var i = 0, l = node.children.length; i < l; i++) {\n\t        markStaticRoots(node.children[i], isInFor || !!node.for);\n\t      }\n\t    }\n\t    if (node.ifConditions) {\n\t      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n\t    }\n\t  }\n\t}\n\t\n\tfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n\t  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n\t    markStaticRoots(conditionBlocks[i].block, isInFor);\n\t  }\n\t}\n\t\n\tfunction isStatic (node) {\n\t  if (node.type === 2) { // expression\n\t    return false\n\t  }\n\t  if (node.type === 3) { // text\n\t    return true\n\t  }\n\t  return !!(node.pre || (\n\t    !node.hasBindings && // no dynamic bindings\n\t    !node.if && !node.for && // not v-if or v-for or v-else\n\t    !isBuiltInTag(node.tag) && // not a built-in\n\t    isPlatformReservedTag(node.tag) && // not a component\n\t    !isDirectChildOfTemplateFor(node) &&\n\t    Object.keys(node).every(isStaticKey)\n\t  ))\n\t}\n\t\n\tfunction isDirectChildOfTemplateFor (node) {\n\t  while (node.parent) {\n\t    node = node.parent;\n\t    if (node.tag !== 'template') {\n\t      return false\n\t    }\n\t    if (node.for) {\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t}\n\t\n\t/*  */\n\t\n\tvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\n\tvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40,\n\t  'delete': [8, 46]\n\t};\n\t\n\tvar modifierCode = {\n\t  stop: '$event.stopPropagation();',\n\t  prevent: '$event.preventDefault();',\n\t  self: 'if($event.target !== $event.currentTarget)return;',\n\t  ctrl: 'if(!$event.ctrlKey)return;',\n\t  shift: 'if(!$event.shiftKey)return;',\n\t  alt: 'if(!$event.altKey)return;',\n\t  meta: 'if(!$event.metaKey)return;'\n\t};\n\t\n\tfunction genHandlers (events, native) {\n\t  var res = native ? 'nativeOn:{' : 'on:{';\n\t  for (var name in events) {\n\t    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n\t  }\n\t  return res.slice(0, -1) + '}'\n\t}\n\t\n\tfunction genHandler (\n\t  name,\n\t  handler\n\t) {\n\t  if (!handler) {\n\t    return 'function(){}'\n\t  } else if (Array.isArray(handler)) {\n\t    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n\t  } else if (!handler.modifiers) {\n\t    return fnExpRE.test(handler.value) || simplePathRE.test(handler.value)\n\t      ? handler.value\n\t      : (\"function($event){\" + (handler.value) + \"}\")\n\t  } else {\n\t    var code = '';\n\t    var keys = [];\n\t    for (var key in handler.modifiers) {\n\t      if (modifierCode[key]) {\n\t        code += modifierCode[key];\n\t      } else {\n\t        keys.push(key);\n\t      }\n\t    }\n\t    if (keys.length) {\n\t      code = genKeyFilter(keys) + code;\n\t    }\n\t    var handlerCode = simplePathRE.test(handler.value)\n\t      ? handler.value + '($event)'\n\t      : handler.value;\n\t    return 'function($event){' + code + handlerCode + '}'\n\t  }\n\t}\n\t\n\tfunction genKeyFilter (keys) {\n\t  return (\"if(\" + (keys.map(genFilterCode).join('&&')) + \")return;\")\n\t}\n\t\n\tfunction genFilterCode (key) {\n\t  var keyVal = parseInt(key, 10);\n\t  if (keyVal) {\n\t    return (\"$event.keyCode!==\" + keyVal)\n\t  }\n\t  var alias = keyCodes[key];\n\t  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n\t}\n\t\n\t/*  */\n\t\n\tfunction bind$2 (el, dir) {\n\t  el.wrapData = function (code) {\n\t    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n\t  };\n\t}\n\t\n\tvar baseDirectives = {\n\t  bind: bind$2,\n\t  cloak: noop\n\t};\n\t\n\t/*  */\n\t\n\t// configurable state\n\tvar warn$2;\n\tvar transforms$1;\n\tvar dataGenFns;\n\tvar platformDirectives$1;\n\tvar staticRenderFns;\n\tvar onceCount;\n\tvar currentOptions;\n\t\n\tfunction generate (\n\t  ast,\n\t  options\n\t) {\n\t  // save previous staticRenderFns so generate calls can be nested\n\t  var prevStaticRenderFns = staticRenderFns;\n\t  var currentStaticRenderFns = staticRenderFns = [];\n\t  var prevOnceCount = onceCount;\n\t  onceCount = 0;\n\t  currentOptions = options;\n\t  warn$2 = options.warn || baseWarn;\n\t  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n\t  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n\t  platformDirectives$1 = options.directives || {};\n\t  var code = ast ? genElement(ast) : '_c(\"div\")';\n\t  staticRenderFns = prevStaticRenderFns;\n\t  onceCount = prevOnceCount;\n\t  return {\n\t    render: (\"with(this){return \" + code + \"}\"),\n\t    staticRenderFns: currentStaticRenderFns\n\t  }\n\t}\n\t\n\tfunction genElement (el) {\n\t  if (el.staticRoot && !el.staticProcessed) {\n\t    return genStatic(el)\n\t  } else if (el.once && !el.onceProcessed) {\n\t    return genOnce(el)\n\t  } else if (el.for && !el.forProcessed) {\n\t    return genFor(el)\n\t  } else if (el.if && !el.ifProcessed) {\n\t    return genIf(el)\n\t  } else if (el.tag === 'template' && !el.slotTarget) {\n\t    return genChildren(el) || 'void 0'\n\t  } else if (el.tag === 'slot') {\n\t    return genSlot(el)\n\t  } else {\n\t    // component or element\n\t    var code;\n\t    if (el.component) {\n\t      code = genComponent(el.component, el);\n\t    } else {\n\t      var data = el.plain ? undefined : genData(el);\n\t\n\t      var children = el.inlineTemplate ? null : genChildren(el, true);\n\t      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n\t    }\n\t    // module transforms\n\t    for (var i = 0; i < transforms$1.length; i++) {\n\t      code = transforms$1[i](el, code);\n\t    }\n\t    return code\n\t  }\n\t}\n\t\n\t// hoist static sub-trees out\n\tfunction genStatic (el) {\n\t  el.staticProcessed = true;\n\t  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n\t  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n\t}\n\t\n\t// v-once\n\tfunction genOnce (el) {\n\t  el.onceProcessed = true;\n\t  if (el.if && !el.ifProcessed) {\n\t    return genIf(el)\n\t  } else if (el.staticInFor) {\n\t    var key = '';\n\t    var parent = el.parent;\n\t    while (parent) {\n\t      if (parent.for) {\n\t        key = parent.key;\n\t        break\n\t      }\n\t      parent = parent.parent;\n\t    }\n\t    if (!key) {\n\t      (\"production\") !== 'production' && warn$2(\n\t        \"v-once can only be used inside v-for that is keyed. \"\n\t      );\n\t      return genElement(el)\n\t    }\n\t    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n\t  } else {\n\t    return genStatic(el)\n\t  }\n\t}\n\t\n\tfunction genIf (el) {\n\t  el.ifProcessed = true; // avoid recursion\n\t  return genIfConditions(el.ifConditions.slice())\n\t}\n\t\n\tfunction genIfConditions (conditions) {\n\t  if (!conditions.length) {\n\t    return '_e()'\n\t  }\n\t\n\t  var condition = conditions.shift();\n\t  if (condition.exp) {\n\t    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n\t  } else {\n\t    return (\"\" + (genTernaryExp(condition.block)))\n\t  }\n\t\n\t  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n\t  function genTernaryExp (el) {\n\t    return el.once ? genOnce(el) : genElement(el)\n\t  }\n\t}\n\t\n\tfunction genFor (el) {\n\t  var exp = el.for;\n\t  var alias = el.alias;\n\t  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n\t  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\t  el.forProcessed = true; // avoid recursion\n\t  return \"_l((\" + exp + \"),\" +\n\t    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n\t      \"return \" + (genElement(el)) +\n\t    '})'\n\t}\n\t\n\tfunction genData (el) {\n\t  var data = '{';\n\t\n\t  // directives first.\n\t  // directives may mutate the el's other properties before they are generated.\n\t  var dirs = genDirectives(el);\n\t  if (dirs) { data += dirs + ','; }\n\t\n\t  // key\n\t  if (el.key) {\n\t    data += \"key:\" + (el.key) + \",\";\n\t  }\n\t  // ref\n\t  if (el.ref) {\n\t    data += \"ref:\" + (el.ref) + \",\";\n\t  }\n\t  if (el.refInFor) {\n\t    data += \"refInFor:true,\";\n\t  }\n\t  // pre\n\t  if (el.pre) {\n\t    data += \"pre:true,\";\n\t  }\n\t  // record original tag name for components using \"is\" attribute\n\t  if (el.component) {\n\t    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n\t  }\n\t  // module data generation functions\n\t  for (var i = 0; i < dataGenFns.length; i++) {\n\t    data += dataGenFns[i](el);\n\t  }\n\t  // attributes\n\t  if (el.attrs) {\n\t    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n\t  }\n\t  // DOM props\n\t  if (el.props) {\n\t    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n\t  }\n\t  // event handlers\n\t  if (el.events) {\n\t    data += (genHandlers(el.events)) + \",\";\n\t  }\n\t  if (el.nativeEvents) {\n\t    data += (genHandlers(el.nativeEvents, true)) + \",\";\n\t  }\n\t  // slot target\n\t  if (el.slotTarget) {\n\t    data += \"slot:\" + (el.slotTarget) + \",\";\n\t  }\n\t  // scoped slots\n\t  if (el.scopedSlots) {\n\t    data += (genScopedSlots(el.scopedSlots)) + \",\";\n\t  }\n\t  // inline-template\n\t  if (el.inlineTemplate) {\n\t    var inlineTemplate = genInlineTemplate(el);\n\t    if (inlineTemplate) {\n\t      data += inlineTemplate + \",\";\n\t    }\n\t  }\n\t  data = data.replace(/,$/, '') + '}';\n\t  // v-bind data wrap\n\t  if (el.wrapData) {\n\t    data = el.wrapData(data);\n\t  }\n\t  return data\n\t}\n\t\n\tfunction genDirectives (el) {\n\t  var dirs = el.directives;\n\t  if (!dirs) { return }\n\t  var res = 'directives:[';\n\t  var hasRuntime = false;\n\t  var i, l, dir, needRuntime;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    dir = dirs[i];\n\t    needRuntime = true;\n\t    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n\t    if (gen) {\n\t      // compile-time directive that manipulates AST.\n\t      // returns true if it also needs a runtime counterpart.\n\t      needRuntime = !!gen(el, dir, warn$2);\n\t    }\n\t    if (needRuntime) {\n\t      hasRuntime = true;\n\t      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n\t    }\n\t  }\n\t  if (hasRuntime) {\n\t    return res.slice(0, -1) + ']'\n\t  }\n\t}\n\t\n\tfunction genInlineTemplate (el) {\n\t  var ast = el.children[0];\n\t  if (false) {\n\t    warn$2('Inline-template components must have exactly one child element.');\n\t  }\n\t  if (ast.type === 1) {\n\t    var inlineRenderFns = generate(ast, currentOptions);\n\t    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n\t  }\n\t}\n\t\n\tfunction genScopedSlots (slots) {\n\t  return (\"scopedSlots:{\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"}\")\n\t}\n\t\n\tfunction genScopedSlot (key, el) {\n\t  return key + \":function(\" + (String(el.attrsMap.scope)) + \"){\" +\n\t    \"return \" + (el.tag === 'template'\n\t      ? genChildren(el) || 'void 0'\n\t      : genElement(el)) + \"}\"\n\t}\n\t\n\tfunction genChildren (el, checkSkip) {\n\t  var children = el.children;\n\t  if (children.length) {\n\t    var el$1 = children[0];\n\t    // optimize single v-for\n\t    if (children.length === 1 &&\n\t        el$1.for &&\n\t        el$1.tag !== 'template' &&\n\t        el$1.tag !== 'slot') {\n\t      return genElement(el$1)\n\t    }\n\t    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (checkSkip\n\t        ? canSkipNormalization(children) ? '' : ',true'\n\t        : ''))\n\t  }\n\t}\n\t\n\tfunction canSkipNormalization (children) {\n\t  for (var i = 0; i < children.length; i++) {\n\t    var el = children[i];\n\t    if (needsNormalization(el) ||\n\t        (el.if && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n\t      return false\n\t    }\n\t  }\n\t  return true\n\t}\n\t\n\tfunction needsNormalization (el) {\n\t  return el.for || el.tag === 'template' || el.tag === 'slot'\n\t}\n\t\n\tfunction genNode (node) {\n\t  if (node.type === 1) {\n\t    return genElement(node)\n\t  } else {\n\t    return genText(node)\n\t  }\n\t}\n\t\n\tfunction genText (text) {\n\t  return (\"_v(\" + (text.type === 2\n\t    ? text.expression // no need for () because already wrapped in _s()\n\t    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n\t}\n\t\n\tfunction genSlot (el) {\n\t  var slotName = el.slotName || '\"default\"';\n\t  var children = genChildren(el);\n\t  return (\"_t(\" + slotName + (children ? (\",\" + children) : '') + (el.attrs ? ((children ? '' : ',null') + \",{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\") : '') + \")\")\n\t}\n\t\n\t// componentName is el.component, take it as argument to shun flow's pessimistic refinement\n\tfunction genComponent (componentName, el) {\n\t  var children = el.inlineTemplate ? null : genChildren(el, true);\n\t  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n\t}\n\t\n\tfunction genProps (props) {\n\t  var res = '';\n\t  for (var i = 0; i < props.length; i++) {\n\t    var prop = props[i];\n\t    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n\t  }\n\t  return res.slice(0, -1)\n\t}\n\t\n\t// #3895, #4268\n\tfunction transformSpecialNewlines (text) {\n\t  return text\n\t    .replace(/\\u2028/g, '\\\\u2028')\n\t    .replace(/\\u2029/g, '\\\\u2029')\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Compile a template.\n\t */\n\tfunction compile$1 (\n\t  template,\n\t  options\n\t) {\n\t  var ast = parse(template.trim(), options);\n\t  optimize(ast, options);\n\t  var code = generate(ast, options);\n\t  return {\n\t    ast: ast,\n\t    render: code.render,\n\t    staticRenderFns: code.staticRenderFns\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t// operators like typeof, instanceof and in are allowed\n\tvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n\t  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n\t  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n\t  'extends,finally,continue,debugger,function,arguments'\n\t).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\t// check valid identifier for v-for\n\tvar identRE = /[A-Za-z_$][\\w$]*/;\n\t// strip strings in expressions\n\tvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\t\n\t// detect problematic expressions in a template\n\tfunction detectErrors (ast) {\n\t  var errors = [];\n\t  if (ast) {\n\t    checkNode(ast, errors);\n\t  }\n\t  return errors\n\t}\n\t\n\tfunction checkNode (node, errors) {\n\t  if (node.type === 1) {\n\t    for (var name in node.attrsMap) {\n\t      if (dirRE.test(name)) {\n\t        var value = node.attrsMap[name];\n\t        if (value) {\n\t          if (name === 'v-for') {\n\t            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n\t          } else {\n\t            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (node.children) {\n\t      for (var i = 0; i < node.children.length; i++) {\n\t        checkNode(node.children[i], errors);\n\t      }\n\t    }\n\t  } else if (node.type === 2) {\n\t    checkExpression(node.expression, node.text, errors);\n\t  }\n\t}\n\t\n\tfunction checkFor (node, text, errors) {\n\t  checkExpression(node.for || '', text, errors);\n\t  checkIdentifier(node.alias, 'v-for alias', text, errors);\n\t  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n\t  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n\t}\n\t\n\tfunction checkIdentifier (ident, type, text, errors) {\n\t  if (typeof ident === 'string' && !identRE.test(ident)) {\n\t    errors.push((\"- invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + text));\n\t  }\n\t}\n\t\n\tfunction checkExpression (exp, text, errors) {\n\t  try {\n\t    new Function((\"return \" + exp));\n\t  } catch (e) {\n\t    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n\t    if (keywordMatch) {\n\t      errors.push(\n\t        \"- avoid using JavaScript keyword as property name: \" +\n\t        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + text\n\t      );\n\t    } else {\n\t      errors.push((\"- invalid expression: \" + text));\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction transformNode (el, options) {\n\t  var warn = options.warn || baseWarn;\n\t  var staticClass = getAndRemoveAttr(el, 'class');\n\t  if (false) {\n\t    var expression = parseText(staticClass, options.delimiters);\n\t    if (expression) {\n\t      warn(\n\t        \"class=\\\"\" + staticClass + \"\\\": \" +\n\t        'Interpolation inside attributes has been removed. ' +\n\t        'Use v-bind or the colon shorthand instead. For example, ' +\n\t        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n\t      );\n\t    }\n\t  }\n\t  if (staticClass) {\n\t    el.staticClass = JSON.stringify(staticClass);\n\t  }\n\t  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n\t  if (classBinding) {\n\t    el.classBinding = classBinding;\n\t  }\n\t}\n\t\n\tfunction genData$1 (el) {\n\t  var data = '';\n\t  if (el.staticClass) {\n\t    data += \"staticClass:\" + (el.staticClass) + \",\";\n\t  }\n\t  if (el.classBinding) {\n\t    data += \"class:\" + (el.classBinding) + \",\";\n\t  }\n\t  return data\n\t}\n\t\n\tvar klass$1 = {\n\t  staticKeys: ['staticClass'],\n\t  transformNode: transformNode,\n\t  genData: genData$1\n\t};\n\t\n\t/*  */\n\t\n\tfunction transformNode$1 (el, options) {\n\t  var warn = options.warn || baseWarn;\n\t  var staticStyle = getAndRemoveAttr(el, 'style');\n\t  if (staticStyle) {\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      var expression = parseText(staticStyle, options.delimiters);\n\t      if (expression) {\n\t        warn(\n\t          \"style=\\\"\" + staticStyle + \"\\\": \" +\n\t          'Interpolation inside attributes has been removed. ' +\n\t          'Use v-bind or the colon shorthand instead. For example, ' +\n\t          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n\t        );\n\t      }\n\t    }\n\t    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n\t  }\n\t\n\t  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n\t  if (styleBinding) {\n\t    el.styleBinding = styleBinding;\n\t  }\n\t}\n\t\n\tfunction genData$2 (el) {\n\t  var data = '';\n\t  if (el.staticStyle) {\n\t    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n\t  }\n\t  if (el.styleBinding) {\n\t    data += \"style:(\" + (el.styleBinding) + \"),\";\n\t  }\n\t  return data\n\t}\n\t\n\tvar style$1 = {\n\t  staticKeys: ['staticStyle'],\n\t  transformNode: transformNode$1,\n\t  genData: genData$2\n\t};\n\t\n\tvar modules$1 = [\n\t  klass$1,\n\t  style$1\n\t];\n\t\n\t/*  */\n\t\n\tvar warn$3;\n\t\n\tfunction model$1 (\n\t  el,\n\t  dir,\n\t  _warn\n\t) {\n\t  warn$3 = _warn;\n\t  var value = dir.value;\n\t  var modifiers = dir.modifiers;\n\t  var tag = el.tag;\n\t  var type = el.attrsMap.type;\n\t  if (false) {\n\t    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n\t    if (tag === 'input' && dynamicType) {\n\t      warn$3(\n\t        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n\t        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n\t      );\n\t    }\n\t  }\n\t  if (tag === 'select') {\n\t    genSelect(el, value, modifiers);\n\t  } else if (tag === 'input' && type === 'checkbox') {\n\t    genCheckboxModel(el, value, modifiers);\n\t  } else if (tag === 'input' && type === 'radio') {\n\t    genRadioModel(el, value, modifiers);\n\t  } else {\n\t    genDefaultModel(el, value, modifiers);\n\t  }\n\t  // ensure runtime directive metadata\n\t  return true\n\t}\n\t\n\tfunction genCheckboxModel (\n\t  el,\n\t  value,\n\t  modifiers\n\t) {\n\t  if (false) {\n\t    warn$3(\n\t      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n\t      \"inline checked attributes will be ignored when using v-model. \" +\n\t      'Declare initial values in the component\\'s data option instead.'\n\t    );\n\t  }\n\t  var number = modifiers && modifiers.number;\n\t  var valueBinding = getBindingAttr(el, 'value') || 'null';\n\t  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n\t  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n\t  addProp(el, 'checked',\n\t    \"Array.isArray(\" + value + \")\" +\n\t      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" +\n\t      \":_q(\" + value + \",\" + trueValueBinding + \")\"\n\t  );\n\t  addHandler(el, 'change',\n\t    \"var $$a=\" + value + \",\" +\n\t        '$$el=$event.target,' +\n\t        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n\t    'if(Array.isArray($$a)){' +\n\t      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n\t          '$$i=_i($$a,$$v);' +\n\t      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n\t      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n\t    \"}else{\" + value + \"=$$c}\",\n\t    null, true\n\t  );\n\t}\n\t\n\tfunction genRadioModel (\n\t    el,\n\t    value,\n\t    modifiers\n\t) {\n\t  if (false) {\n\t    warn$3(\n\t      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n\t      \"inline checked attributes will be ignored when using v-model. \" +\n\t      'Declare initial values in the component\\'s data option instead.'\n\t    );\n\t  }\n\t  var number = modifiers && modifiers.number;\n\t  var valueBinding = getBindingAttr(el, 'value') || 'null';\n\t  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n\t  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n\t  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n\t}\n\t\n\tfunction genDefaultModel (\n\t  el,\n\t  value,\n\t  modifiers\n\t) {\n\t  if (false) {\n\t    if (el.tag === 'input' && el.attrsMap.value) {\n\t      warn$3(\n\t        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" value=\\\"\" + (el.attrsMap.value) + \"\\\">:\\n\" +\n\t        'inline value attributes will be ignored when using v-model. ' +\n\t        'Declare initial values in the component\\'s data option instead.'\n\t      );\n\t    }\n\t    if (el.tag === 'textarea' && el.children.length) {\n\t      warn$3(\n\t        \"<textarea v-model=\\\"\" + value + \"\\\">:\\n\" +\n\t        'inline content inside <textarea> will be ignored when using v-model. ' +\n\t        'Declare initial values in the component\\'s data option instead.'\n\t      );\n\t    }\n\t  }\n\t\n\t  var type = el.attrsMap.type;\n\t  var ref = modifiers || {};\n\t  var lazy = ref.lazy;\n\t  var number = ref.number;\n\t  var trim = ref.trim;\n\t  var event = lazy || (isIE && type === 'range') ? 'change' : 'input';\n\t  var needCompositionGuard = !lazy && type !== 'range';\n\t  var isNative = el.tag === 'input' || el.tag === 'textarea';\n\t\n\t  var valueExpression = isNative\n\t    ? (\"$event.target.value\" + (trim ? '.trim()' : ''))\n\t    : trim ? \"(typeof $event === 'string' ? $event.trim() : $event)\" : \"$event\";\n\t  valueExpression = number || type === 'number'\n\t    ? (\"_n(\" + valueExpression + \")\")\n\t    : valueExpression;\n\t\n\t  var code = genAssignmentCode(value, valueExpression);\n\t  if (isNative && needCompositionGuard) {\n\t    code = \"if($event.target.composing)return;\" + code;\n\t  }\n\t\n\t  // inputs with type=\"file\" are read only and setting the input's\n\t  // value will throw an error.\n\t  if (false) {\n\t    warn$3(\n\t      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n\t      \"File inputs are read only. Use a v-on:change listener instead.\"\n\t    );\n\t  }\n\t\n\t  addProp(el, 'value', isNative ? (\"_s(\" + value + \")\") : (\"(\" + value + \")\"));\n\t  addHandler(el, event, code, null, true);\n\t  if (trim || number || type === 'number') {\n\t    addHandler(el, 'blur', '$forceUpdate()');\n\t  }\n\t}\n\t\n\tfunction genSelect (\n\t    el,\n\t    value,\n\t    modifiers\n\t) {\n\t  if (false) {\n\t    el.children.some(checkOptionWarning);\n\t  }\n\t\n\t  var number = modifiers && modifiers.number;\n\t  var assignment = \"Array.prototype.filter\" +\n\t    \".call($event.target.options,function(o){return o.selected})\" +\n\t    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n\t    \"return \" + (number ? '_n(val)' : 'val') + \"})\" +\n\t    (el.attrsMap.multiple == null ? '[0]' : '');\n\t\n\t  var code = genAssignmentCode(value, assignment);\n\t  addHandler(el, 'change', code, null, true);\n\t}\n\t\n\tfunction checkOptionWarning (option) {\n\t  if (option.type === 1 &&\n\t    option.tag === 'option' &&\n\t    option.attrsMap.selected != null) {\n\t    warn$3(\n\t      \"<select v-model=\\\"\" + (option.parent.attrsMap['v-model']) + \"\\\">:\\n\" +\n\t      'inline selected attributes on <option> will be ignored when using v-model. ' +\n\t      'Declare initial values in the component\\'s data option instead.'\n\t    );\n\t    return true\n\t  }\n\t  return false\n\t}\n\t\n\tfunction genAssignmentCode (value, assignment) {\n\t  var modelRs = parseModel(value);\n\t  if (modelRs.idx === null) {\n\t    return (value + \"=\" + assignment)\n\t  } else {\n\t    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n\t      \"if (!Array.isArray($$exp)){\" +\n\t        value + \"=\" + assignment + \"}\" +\n\t      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction text (el, dir) {\n\t  if (dir.value) {\n\t    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction html (el, dir) {\n\t  if (dir.value) {\n\t    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n\t  }\n\t}\n\t\n\tvar directives$1 = {\n\t  model: model$1,\n\t  text: text,\n\t  html: html\n\t};\n\t\n\t/*  */\n\t\n\tvar cache = Object.create(null);\n\t\n\tvar baseOptions = {\n\t  expectHTML: true,\n\t  modules: modules$1,\n\t  staticKeys: genStaticKeys(modules$1),\n\t  directives: directives$1,\n\t  isReservedTag: isReservedTag,\n\t  isUnaryTag: isUnaryTag,\n\t  mustUseProp: mustUseProp,\n\t  getTagNamespace: getTagNamespace,\n\t  isPreTag: isPreTag\n\t};\n\t\n\tfunction compile$$1 (\n\t  template,\n\t  options\n\t) {\n\t  options = options\n\t    ? extend(extend({}, baseOptions), options)\n\t    : baseOptions;\n\t  return compile$1(template, options)\n\t}\n\t\n\tfunction compileToFunctions (\n\t  template,\n\t  options,\n\t  vm\n\t) {\n\t  var _warn = (options && options.warn) || warn;\n\t  // detect possible CSP restriction\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    try {\n\t      new Function('return 1');\n\t    } catch (e) {\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        _warn(\n\t          'It seems you are using the standalone build of Vue.js in an ' +\n\t          'environment with Content Security Policy that prohibits unsafe-eval. ' +\n\t          'The template compiler cannot work in this environment. Consider ' +\n\t          'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n\t          'templates into render functions.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t  var key = options && options.delimiters\n\t    ? String(options.delimiters) + template\n\t    : template;\n\t  if (cache[key]) {\n\t    return cache[key]\n\t  }\n\t  var res = {};\n\t  var compiled = compile$$1(template, options);\n\t  res.render = makeFunction(compiled.render);\n\t  var l = compiled.staticRenderFns.length;\n\t  res.staticRenderFns = new Array(l);\n\t  for (var i = 0; i < l; i++) {\n\t    res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i]);\n\t  }\n\t  if (false) {\n\t    if (res.render === noop || res.staticRenderFns.some(function (fn) { return fn === noop; })) {\n\t      _warn(\n\t        \"failed to compile template:\\n\\n\" + template + \"\\n\\n\" +\n\t        detectErrors(compiled.ast).join('\\n') +\n\t        '\\n\\n',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t  return (cache[key] = res)\n\t}\n\t\n\tfunction makeFunction (code) {\n\t  try {\n\t    return new Function(code)\n\t  } catch (e) {\n\t    return noop\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar idToTemplate = cached(function (id) {\n\t  var el = query(id);\n\t  return el && el.innerHTML\n\t});\n\t\n\tvar mount = Vue$3.prototype.$mount;\n\tVue$3.prototype.$mount = function (\n\t  el,\n\t  hydrating\n\t) {\n\t  el = el && query(el);\n\t\n\t  /* istanbul ignore if */\n\t  if (el === document.body || el === document.documentElement) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n\t    );\n\t    return this\n\t  }\n\t\n\t  var options = this.$options;\n\t  // resolve template/el and convert to render function\n\t  if (!options.render) {\n\t    var template = options.template;\n\t    if (template) {\n\t      if (typeof template === 'string') {\n\t        if (template.charAt(0) === '#') {\n\t          template = idToTemplate(template);\n\t          /* istanbul ignore if */\n\t          if (false) {\n\t            warn(\n\t              (\"Template element not found or is empty: \" + (options.template)),\n\t              this\n\t            );\n\t          }\n\t        }\n\t      } else if (template.nodeType) {\n\t        template = template.innerHTML;\n\t      } else {\n\t        if (false) {\n\t          warn('invalid template option:' + template, this);\n\t        }\n\t        return this\n\t      }\n\t    } else if (el) {\n\t      template = getOuterHTML(el);\n\t    }\n\t    if (template) {\n\t      var ref = compileToFunctions(template, {\n\t        warn: warn,\n\t        shouldDecodeNewlines: shouldDecodeNewlines,\n\t        delimiters: options.delimiters\n\t      }, this);\n\t      var render = ref.render;\n\t      var staticRenderFns = ref.staticRenderFns;\n\t      options.render = render;\n\t      options.staticRenderFns = staticRenderFns;\n\t    }\n\t  }\n\t  return mount.call(this, el, hydrating)\n\t};\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t */\n\tfunction getOuterHTML (el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML\n\t  }\n\t}\n\t\n\tVue$3.compile = compileToFunctions;\n\t\n\tmodule.exports = Vue$3;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(32), __esModule: true };\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(33), __esModule: true };\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\texports.default = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _defineProperty = __webpack_require__(29);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\t\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core  = __webpack_require__(3)\n\t  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(43);\n\tvar $Object = __webpack_require__(3).Object;\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $Object.defineProperty(it, key, desc);\n\t};\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(4);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(34);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(4)\n\t  , document = __webpack_require__(7).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(7)\n\t  , core      = __webpack_require__(3)\n\t  , ctx       = __webpack_require__(36)\n\t  , hide      = __webpack_require__(39)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE]\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(a, b, c){\n\t        if(this instanceof C){\n\t          switch(arguments.length){\n\t            case 0: return new C;\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if(IS_PROTO){\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n\n/***/ 39:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(8)\n\t  , createDesc = __webpack_require__(41);\n\tmodule.exports = __webpack_require__(2) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(2) && !__webpack_require__(6)(function(){\n\t  return Object.defineProperty(__webpack_require__(37)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n\n/***/ 42:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(4);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n\n/***/ 43:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(38);\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n\t$export($export.S + $export.F * !__webpack_require__(2), 'Object', {defineProperty: __webpack_require__(8).f});\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n\n/***/ 99:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.25c12c68f1323c8b9134.js","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 2\n// module chunks = 2","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 3\n// module chunks = 2","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 4\n// module chunks = 2","/**\n * interact.js v1.2.8\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n(function (realWindow) {\n    'use strict';\n\n    // return early if there's no window to work with (eg. Node.js)\n    if (!realWindow) { return; }\n\n    var // get wrapped window if using Shadow DOM polyfill\n        window = (function () {\n            // create a TextNode\n            var el = realWindow.document.createTextNode('');\n\n            // check if it's wrapped by a polyfill\n            if (el.ownerDocument !== realWindow.document\n                && typeof realWindow.wrap === 'function'\n                && realWindow.wrap(el) === el) {\n                // return wrapped window\n                return realWindow.wrap(realWindow);\n            }\n\n            // no Shadow DOM polyfil or native implementation\n            return realWindow;\n        }()),\n\n        document           = window.document,\n        DocumentFragment   = window.DocumentFragment   || blank,\n        SVGElement         = window.SVGElement         || blank,\n        SVGSVGElement      = window.SVGSVGElement      || blank,\n        SVGElementInstance = window.SVGElementInstance || blank,\n        HTMLElement        = window.HTMLElement        || window.Element,\n\n        PointerEvent = (window.PointerEvent || window.MSPointerEvent),\n        pEventTypes,\n\n        hypot = Math.hypot || function (x, y) { return Math.sqrt(x * x + y * y); },\n\n        tmpXY = {},     // reduce object creation in getXY()\n\n        documents       = [],   // all documents being listened to\n\n        interactables   = [],   // all set interactables\n        interactions    = [],   // all interactions\n\n        dynamicDrop     = false,\n\n        // {\n        //      type: {\n        //          selectors: ['selector', ...],\n        //          contexts : [document, ...],\n        //          listeners: [[listener, useCapture], ...]\n        //      }\n        //  }\n        delegatedEvents = {},\n\n        defaultOptions = {\n            base: {\n                accept        : null,\n                actionChecker : null,\n                styleCursor   : true,\n                preventDefault: 'auto',\n                origin        : { x: 0, y: 0 },\n                deltaSource   : 'page',\n                allowFrom     : null,\n                ignoreFrom    : null,\n                _context      : document,\n                dropChecker   : null\n            },\n\n            drag: {\n                enabled: false,\n                manualStart: true,\n                max: Infinity,\n                maxPerElement: 1,\n\n                snap: null,\n                restrict: null,\n                inertia: null,\n                autoScroll: null,\n\n                axis: 'xy'\n            },\n\n            drop: {\n                enabled: false,\n                accept: null,\n                overlap: 'pointer'\n            },\n\n            resize: {\n                enabled: false,\n                manualStart: false,\n                max: Infinity,\n                maxPerElement: 1,\n\n                snap: null,\n                restrict: null,\n                inertia: null,\n                autoScroll: null,\n\n                square: false,\n                preserveAspectRatio: false,\n                axis: 'xy',\n\n                // use default margin\n                margin: NaN,\n\n                // object with props left, right, top, bottom which are\n                // true/false values to resize when the pointer is over that edge,\n                // CSS selectors to match the handles for each direction\n                // or the Elements for each handle\n                edges: null,\n\n                // a value of 'none' will limit the resize rect to a minimum of 0x0\n                // 'negate' will alow the rect to have negative width/height\n                // 'reposition' will keep the width/height positive by swapping\n                // the top and bottom edges and/or swapping the left and right edges\n                invert: 'none'\n            },\n\n            gesture: {\n                manualStart: false,\n                enabled: false,\n                max: Infinity,\n                maxPerElement: 1,\n\n                restrict: null\n            },\n\n            perAction: {\n                manualStart: false,\n                max: Infinity,\n                maxPerElement: 1,\n\n                snap: {\n                    enabled     : false,\n                    endOnly     : false,\n                    range       : Infinity,\n                    targets     : null,\n                    offsets     : null,\n\n                    relativePoints: null\n                },\n\n                restrict: {\n                    enabled: false,\n                    endOnly: false\n                },\n\n                autoScroll: {\n                    enabled     : false,\n                    container   : null,     // the item that is scrolled (Window or HTMLElement)\n                    margin      : 60,\n                    speed       : 300       // the scroll speed in pixels per second\n                },\n\n                inertia: {\n                    enabled          : false,\n                    resistance       : 10,    // the lambda in exponential decay\n                    minSpeed         : 100,   // target speed must be above this for inertia to start\n                    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n                    allowResume      : true,  // allow resuming an action in inertia phase\n                    zeroResumeDelta  : true,  // if an action is resumed after launch, set dx/dy to 0\n                    smoothEndDuration: 300    // animate to snap/restrict endOnly if there's no inertia\n                }\n            },\n\n            _holdDuration: 600\n        },\n\n        // Things related to autoScroll\n        autoScroll = {\n            interaction: null,\n            i: null,    // the handle returned by window.setInterval\n            x: 0, y: 0, // Direction each pulse is to scroll in\n\n            // scroll the window by the values in scroll.x/y\n            scroll: function () {\n                var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll,\n                    container = options.container || getWindow(autoScroll.interaction.element),\n                    now = new Date().getTime(),\n                    // change in time in seconds\n                    dtx = (now - autoScroll.prevTimeX) / 1000,\n                    dty = (now - autoScroll.prevTimeY) / 1000,\n                    vx, vy, sx, sy;\n\n                // displacement\n                if (options.velocity) {\n                  vx = options.velocity.x;\n                  vy = options.velocity.y;\n                }\n                else {\n                  vx = vy = options.speed\n                }\n \n                sx = vx * dtx;\n                sy = vy * dty;\n\n                if (sx >= 1 || sy >= 1) {\n                    if (isWindow(container)) {\n                        container.scrollBy(autoScroll.x * sx, autoScroll.y * sy);\n                    }\n                    else if (container) {\n                        container.scrollLeft += autoScroll.x * sx;\n                        container.scrollTop  += autoScroll.y * sy;\n                    }\n\n                    if (sx >=1) autoScroll.prevTimeX = now;\n                    if (sy >= 1) autoScroll.prevTimeY = now;\n                }\n\n                if (autoScroll.isScrolling) {\n                    cancelFrame(autoScroll.i);\n                    autoScroll.i = reqFrame(autoScroll.scroll);\n                }\n            },\n\n            isScrolling: false,\n            prevTimeX: 0,\n            prevTimeY: 0,\n\n            start: function (interaction) {\n                autoScroll.isScrolling = true;\n                cancelFrame(autoScroll.i);\n\n                autoScroll.interaction = interaction;\n                autoScroll.prevTimeX = new Date().getTime();\n                autoScroll.prevTimeY = new Date().getTime();\n                autoScroll.i = reqFrame(autoScroll.scroll);\n            },\n\n            stop: function () {\n                autoScroll.isScrolling = false;\n                cancelFrame(autoScroll.i);\n            }\n        },\n\n        // Does the browser support touch input?\n        supportsTouch = (('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch),\n\n        // Does the browser support PointerEvents\n        // Avoid PointerEvent bugs introduced in Chrome 55\n        supportsPointerEvent = PointerEvent && !/Chrome/.test(navigator.userAgent),\n\n        // Less Precision with touch input\n        margin = supportsTouch || supportsPointerEvent? 20: 10,\n\n        pointerMoveTolerance = 1,\n\n        // for ignoring browser's simulated mouse events\n        prevTouchTime = 0,\n\n        // Allow this many interactions to happen simultaneously\n        maxInteractions = Infinity,\n\n        // Check if is IE9 or older\n        actionCursors = (document.all && !window.atob) ? {\n            drag    : 'move',\n            resizex : 'e-resize',\n            resizey : 's-resize',\n            resizexy: 'se-resize',\n\n            resizetop        : 'n-resize',\n            resizeleft       : 'w-resize',\n            resizebottom     : 's-resize',\n            resizeright      : 'e-resize',\n            resizetopleft    : 'se-resize',\n            resizebottomright: 'se-resize',\n            resizetopright   : 'ne-resize',\n            resizebottomleft : 'ne-resize',\n\n            gesture : ''\n        } : {\n            drag    : 'move',\n            resizex : 'ew-resize',\n            resizey : 'ns-resize',\n            resizexy: 'nwse-resize',\n\n            resizetop        : 'ns-resize',\n            resizeleft       : 'ew-resize',\n            resizebottom     : 'ns-resize',\n            resizeright      : 'ew-resize',\n            resizetopleft    : 'nwse-resize',\n            resizebottomright: 'nwse-resize',\n            resizetopright   : 'nesw-resize',\n            resizebottomleft : 'nesw-resize',\n\n            gesture : ''\n        },\n\n        actionIsEnabled = {\n            drag   : true,\n            resize : true,\n            gesture: true\n        },\n\n        // because Webkit and Opera still use 'mousewheel' event type\n        wheelEvent = 'onmousewheel' in document? 'mousewheel': 'wheel',\n\n        eventTypes = [\n            'dragstart',\n            'dragmove',\n            'draginertiastart',\n            'dragend',\n            'dragenter',\n            'dragleave',\n            'dropactivate',\n            'dropdeactivate',\n            'dropmove',\n            'drop',\n            'resizestart',\n            'resizemove',\n            'resizeinertiastart',\n            'resizeend',\n            'gesturestart',\n            'gesturemove',\n            'gestureinertiastart',\n            'gestureend',\n\n            'down',\n            'move',\n            'up',\n            'cancel',\n            'tap',\n            'doubletap',\n            'hold'\n        ],\n\n        globalEvents = {},\n\n        // Opera Mobile must be handled differently\n        isOperaMobile = navigator.appName == 'Opera' &&\n            supportsTouch &&\n            navigator.userAgent.match('Presto'),\n\n        // scrolling doesn't change the result of getClientRects on iOS 7\n        isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform)\n                         && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n        // prefix matchesSelector\n        prefixedMatchesSelector = 'matches' in Element.prototype?\n                'matches': 'webkitMatchesSelector' in Element.prototype?\n                    'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype?\n                        'mozMatchesSelector': 'oMatchesSelector' in Element.prototype?\n                            'oMatchesSelector': 'msMatchesSelector',\n\n        // will be polyfill function if browser is IE8\n        ie8MatchesSelector,\n\n        // native requestAnimationFrame or polyfill\n        reqFrame = realWindow.requestAnimationFrame,\n        cancelFrame = realWindow.cancelAnimationFrame,\n\n        // Events wrapper\n        events = (function () {\n            var useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window),\n                addEvent       = useAttachEvent?  'attachEvent': 'addEventListener',\n                removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener',\n                on             = useAttachEvent? 'on': '',\n\n                elements          = [],\n                targets           = [],\n                attachedListeners = [];\n\n            function add (element, type, listener, useCapture) {\n                var elementIndex = indexOf(elements, element),\n                    target = targets[elementIndex];\n\n                if (!target) {\n                    target = {\n                        events: {},\n                        typeCount: 0\n                    };\n\n                    elementIndex = elements.push(element) - 1;\n                    targets.push(target);\n\n                    attachedListeners.push((useAttachEvent ? {\n                            supplied: [],\n                            wrapped : [],\n                            useCount: []\n                        } : null));\n                }\n\n                if (!target.events[type]) {\n                    target.events[type] = [];\n                    target.typeCount++;\n                }\n\n                if (!contains(target.events[type], listener)) {\n                    var ret;\n\n                    if (useAttachEvent) {\n                        var listeners = attachedListeners[elementIndex],\n                            listenerIndex = indexOf(listeners.supplied, listener);\n\n                        var wrapped = listeners.wrapped[listenerIndex] || function (event) {\n                            if (!event.immediatePropagationStopped) {\n                                event.target = event.srcElement;\n                                event.currentTarget = element;\n\n                                event.preventDefault = event.preventDefault || preventDef;\n                                event.stopPropagation = event.stopPropagation || stopProp;\n                                event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n                                if (/mouse|click/.test(event.type)) {\n                                    event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n                                    event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n                                }\n\n                                listener(event);\n                            }\n                        };\n\n                        ret = element[addEvent](on + type, wrapped, Boolean(useCapture));\n\n                        if (listenerIndex === -1) {\n                            listeners.supplied.push(listener);\n                            listeners.wrapped.push(wrapped);\n                            listeners.useCount.push(1);\n                        }\n                        else {\n                            listeners.useCount[listenerIndex]++;\n                        }\n                    }\n                    else {\n                        ret = element[addEvent](type, listener, useCapture || false);\n                    }\n                    target.events[type].push(listener);\n\n                    return ret;\n                }\n            }\n\n            function remove (element, type, listener, useCapture) {\n                var i,\n                    elementIndex = indexOf(elements, element),\n                    target = targets[elementIndex],\n                    listeners,\n                    listenerIndex,\n                    wrapped = listener;\n\n                if (!target || !target.events) {\n                    return;\n                }\n\n                if (useAttachEvent) {\n                    listeners = attachedListeners[elementIndex];\n                    listenerIndex = indexOf(listeners.supplied, listener);\n                    wrapped = listeners.wrapped[listenerIndex];\n                }\n\n                if (type === 'all') {\n                    for (type in target.events) {\n                        if (target.events.hasOwnProperty(type)) {\n                            remove(element, type, 'all');\n                        }\n                    }\n                    return;\n                }\n\n                if (target.events[type]) {\n                    var len = target.events[type].length;\n\n                    if (listener === 'all') {\n                        for (i = 0; i < len; i++) {\n                            remove(element, type, target.events[type][i], Boolean(useCapture));\n                        }\n                        return;\n                    } else {\n                        for (i = 0; i < len; i++) {\n                            if (target.events[type][i] === listener) {\n                                element[removeEvent](on + type, wrapped, useCapture || false);\n                                target.events[type].splice(i, 1);\n\n                                if (useAttachEvent && listeners) {\n                                    listeners.useCount[listenerIndex]--;\n                                    if (listeners.useCount[listenerIndex] === 0) {\n                                        listeners.supplied.splice(listenerIndex, 1);\n                                        listeners.wrapped.splice(listenerIndex, 1);\n                                        listeners.useCount.splice(listenerIndex, 1);\n                                    }\n                                }\n\n                                break;\n                            }\n                        }\n                    }\n\n                    if (target.events[type] && target.events[type].length === 0) {\n                        target.events[type] = null;\n                        target.typeCount--;\n                    }\n                }\n\n                if (!target.typeCount) {\n                    targets.splice(elementIndex, 1);\n                    elements.splice(elementIndex, 1);\n                    attachedListeners.splice(elementIndex, 1);\n                }\n            }\n\n            function preventDef () {\n                this.returnValue = false;\n            }\n\n            function stopProp () {\n                this.cancelBubble = true;\n            }\n\n            function stopImmProp () {\n                this.cancelBubble = true;\n                this.immediatePropagationStopped = true;\n            }\n\n            return {\n                add: add,\n                remove: remove,\n                useAttachEvent: useAttachEvent,\n\n                _elements: elements,\n                _targets: targets,\n                _attachedListeners: attachedListeners\n            };\n        }());\n\n    function blank () {}\n\n    function isElement (o) {\n        if (!o || (typeof o !== 'object')) { return false; }\n\n        var _window = getWindow(o) || window;\n\n        return (/object|function/.test(typeof _window.Element)\n            ? o instanceof _window.Element //DOM2\n            : o.nodeType === 1 && typeof o.nodeName === \"string\");\n    }\n    function isWindow (thing) { return thing === window || !!(thing && thing.Window) && (thing instanceof thing.Window); }\n    function isDocFrag (thing) { return !!thing && thing instanceof DocumentFragment; }\n    function isArray (thing) {\n        return isObject(thing)\n                && (typeof thing.length !== undefined)\n                && isFunction(thing.splice);\n    }\n    function isObject   (thing) { return !!thing && (typeof thing === 'object'); }\n    function isFunction (thing) { return typeof thing === 'function'; }\n    function isNumber   (thing) { return typeof thing === 'number'  ; }\n    function isBool     (thing) { return typeof thing === 'boolean' ; }\n    function isString   (thing) { return typeof thing === 'string'  ; }\n\n    function trySelector (value) {\n        if (!isString(value)) { return false; }\n\n        // an exception will be raised if it is invalid\n        document.querySelector(value);\n        return true;\n    }\n\n    function extend (dest, source) {\n        for (var prop in source) {\n            dest[prop] = source[prop];\n        }\n        return dest;\n    }\n\n    var prefixedPropREs = {\n      webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n    };\n\n    function pointerExtend (dest, source) {\n        for (var prop in source) {\n          var deprecated = false;\n\n          // skip deprecated prefixed properties\n          for (var vendor in prefixedPropREs) {\n            if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n              deprecated = true;\n              break;\n            }\n          }\n\n          if (!deprecated) {\n            dest[prop] = source[prop];\n          }\n        }\n        return dest;\n    }\n\n    function copyCoords (dest, src) {\n        dest.page = dest.page || {};\n        dest.page.x = src.page.x;\n        dest.page.y = src.page.y;\n\n        dest.client = dest.client || {};\n        dest.client.x = src.client.x;\n        dest.client.y = src.client.y;\n\n        dest.timeStamp = src.timeStamp;\n    }\n\n    function setEventXY (targetObj, pointers, interaction) {\n        var pointer = (pointers.length > 1\n                       ? pointerAverage(pointers)\n                       : pointers[0]);\n\n        getPageXY(pointer, tmpXY, interaction);\n        targetObj.page.x = tmpXY.x;\n        targetObj.page.y = tmpXY.y;\n\n        getClientXY(pointer, tmpXY, interaction);\n        targetObj.client.x = tmpXY.x;\n        targetObj.client.y = tmpXY.y;\n\n        targetObj.timeStamp = new Date().getTime();\n    }\n\n    function setEventDeltas (targetObj, prev, cur) {\n        targetObj.page.x     = cur.page.x      - prev.page.x;\n        targetObj.page.y     = cur.page.y      - prev.page.y;\n        targetObj.client.x   = cur.client.x    - prev.client.x;\n        targetObj.client.y   = cur.client.y    - prev.client.y;\n        targetObj.timeStamp = new Date().getTime() - prev.timeStamp;\n\n        // set pointer velocity\n        var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n        targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n        targetObj.page.vx      = targetObj.page.x / dt;\n        targetObj.page.vy      = targetObj.page.y / dt;\n\n        targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n        targetObj.client.vx    = targetObj.client.x / dt;\n        targetObj.client.vy    = targetObj.client.y / dt;\n    }\n\n    function isNativePointer (pointer) {\n        return (pointer instanceof window.Event\n            || (supportsTouch && window.Touch && pointer instanceof window.Touch));\n    }\n\n    // Get specified X/Y coords for mouse or event.touches[0]\n    function getXY (type, pointer, xy) {\n        xy = xy || {};\n        type = type || 'page';\n\n        xy.x = pointer[type + 'X'];\n        xy.y = pointer[type + 'Y'];\n\n        return xy;\n    }\n\n    function getPageXY (pointer, page) {\n        page = page || {};\n\n        // Opera Mobile handles the viewport and scrolling oddly\n        if (isOperaMobile && isNativePointer(pointer)) {\n            getXY('screen', pointer, page);\n\n            page.x += window.scrollX;\n            page.y += window.scrollY;\n        }\n        else {\n            getXY('page', pointer, page);\n        }\n\n        return page;\n    }\n\n    function getClientXY (pointer, client) {\n        client = client || {};\n\n        if (isOperaMobile && isNativePointer(pointer)) {\n            // Opera Mobile handles the viewport and scrolling oddly\n            getXY('screen', pointer, client);\n        }\n        else {\n          getXY('client', pointer, client);\n        }\n\n        return client;\n    }\n\n    function getScrollXY (win) {\n        win = win || window;\n        return {\n            x: win.scrollX || win.document.documentElement.scrollLeft,\n            y: win.scrollY || win.document.documentElement.scrollTop\n        };\n    }\n\n    function getPointerId (pointer) {\n        return isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n    }\n\n    function getActualElement (element) {\n        return (element instanceof SVGElementInstance\n            ? element.correspondingUseElement\n            : element);\n    }\n\n    function getWindow (node) {\n        if (isWindow(node)) {\n            return node;\n        }\n\n        var rootNode = (node.ownerDocument || node);\n\n        return rootNode.defaultView || rootNode.parentWindow || window;\n    }\n\n    function getElementClientRect (element) {\n        var clientRect = (element instanceof SVGElement\n                            ? element.getBoundingClientRect()\n                            : element.getClientRects()[0]);\n\n        return clientRect && {\n            left  : clientRect.left,\n            right : clientRect.right,\n            top   : clientRect.top,\n            bottom: clientRect.bottom,\n            width : clientRect.width || clientRect.right - clientRect.left,\n            height: clientRect.height || clientRect.bottom - clientRect.top\n        };\n    }\n\n    function getElementRect (element) {\n        var clientRect = getElementClientRect(element);\n\n        if (!isIOS7 && clientRect) {\n            var scroll = getScrollXY(getWindow(element));\n\n            clientRect.left   += scroll.x;\n            clientRect.right  += scroll.x;\n            clientRect.top    += scroll.y;\n            clientRect.bottom += scroll.y;\n        }\n\n        return clientRect;\n    }\n\n    function getTouchPair (event) {\n        var touches = [];\n\n        // array of touches is supplied\n        if (isArray(event)) {\n            touches[0] = event[0];\n            touches[1] = event[1];\n        }\n        // an event\n        else {\n            if (event.type === 'touchend') {\n                if (event.touches.length === 1) {\n                    touches[0] = event.touches[0];\n                    touches[1] = event.changedTouches[0];\n                }\n                else if (event.touches.length === 0) {\n                    touches[0] = event.changedTouches[0];\n                    touches[1] = event.changedTouches[1];\n                }\n            }\n            else {\n                touches[0] = event.touches[0];\n                touches[1] = event.touches[1];\n            }\n        }\n\n        return touches;\n    }\n\n    function pointerAverage (pointers) {\n        var average = {\n            pageX  : 0,\n            pageY  : 0,\n            clientX: 0,\n            clientY: 0,\n            screenX: 0,\n            screenY: 0\n        };\n        var prop;\n\n        for (var i = 0; i < pointers.length; i++) {\n            for (prop in average) {\n                average[prop] += pointers[i][prop];\n            }\n        }\n        for (prop in average) {\n            average[prop] /= pointers.length;\n        }\n\n        return average;\n    }\n\n    function touchBBox (event) {\n        if (!event.length && !(event.touches && event.touches.length > 1)) {\n            return;\n        }\n\n        var touches = getTouchPair(event),\n            minX = Math.min(touches[0].pageX, touches[1].pageX),\n            minY = Math.min(touches[0].pageY, touches[1].pageY),\n            maxX = Math.max(touches[0].pageX, touches[1].pageX),\n            maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n        return {\n            x: minX,\n            y: minY,\n            left: minX,\n            top: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n\n    function touchDistance (event, deltaSource) {\n        deltaSource = deltaSource || defaultOptions.deltaSource;\n\n        var sourceX = deltaSource + 'X',\n            sourceY = deltaSource + 'Y',\n            touches = getTouchPair(event);\n\n\n        var dx = touches[0][sourceX] - touches[1][sourceX],\n            dy = touches[0][sourceY] - touches[1][sourceY];\n\n        return hypot(dx, dy);\n    }\n\n    function touchAngle (event, prevAngle, deltaSource) {\n        deltaSource = deltaSource || defaultOptions.deltaSource;\n\n        var sourceX = deltaSource + 'X',\n            sourceY = deltaSource + 'Y',\n            touches = getTouchPair(event),\n            dx = touches[0][sourceX] - touches[1][sourceX],\n            dy = touches[0][sourceY] - touches[1][sourceY],\n            angle = 180 * Math.atan(dy / dx) / Math.PI;\n\n        if (isNumber(prevAngle)) {\n            var dr = angle - prevAngle,\n                drClamped = dr % 360;\n\n            if (drClamped > 315) {\n                angle -= 360 + (angle / 360)|0 * 360;\n            }\n            else if (drClamped > 135) {\n                angle -= 180 + (angle / 360)|0 * 360;\n            }\n            else if (drClamped < -315) {\n                angle += 360 + (angle / 360)|0 * 360;\n            }\n            else if (drClamped < -135) {\n                angle += 180 + (angle / 360)|0 * 360;\n            }\n        }\n\n        return  angle;\n    }\n\n    function getOriginXY (interactable, element) {\n        var origin = interactable\n                ? interactable.options.origin\n                : defaultOptions.origin;\n\n        if (origin === 'parent') {\n            origin = parentElement(element);\n        }\n        else if (origin === 'self') {\n            origin = interactable.getRect(element);\n        }\n        else if (trySelector(origin)) {\n            origin = closest(element, origin) || { x: 0, y: 0 };\n        }\n\n        if (isFunction(origin)) {\n            origin = origin(interactable && element);\n        }\n\n        if (isElement(origin))  {\n            origin = getElementRect(origin);\n        }\n\n        origin.x = ('x' in origin)? origin.x : origin.left;\n        origin.y = ('y' in origin)? origin.y : origin.top;\n\n        return origin;\n    }\n\n    // http://stackoverflow.com/a/5634528/2280888\n    function _getQBezierValue(t, p1, p2, p3) {\n        var iT = 1 - t;\n        return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n    }\n\n    function getQuadraticCurvePoint(startX, startY, cpX, cpY, endX, endY, position) {\n        return {\n            x:  _getQBezierValue(position, startX, cpX, endX),\n            y:  _getQBezierValue(position, startY, cpY, endY)\n        };\n    }\n\n    // http://gizma.com/easing/\n    function easeOutQuad (t, b, c, d) {\n        t /= d;\n        return -c * t*(t-2) + b;\n    }\n\n    function nodeContains (parent, child) {\n        while (child) {\n            if (child === parent) {\n                return true;\n            }\n\n            child = child.parentNode;\n        }\n\n        return false;\n    }\n\n    function closest (child, selector) {\n        var parent = parentElement(child);\n\n        while (isElement(parent)) {\n            if (matchesSelector(parent, selector)) { return parent; }\n\n            parent = parentElement(parent);\n        }\n\n        return null;\n    }\n\n    function parentElement (node) {\n        var parent = node.parentNode;\n\n        if (isDocFrag(parent)) {\n            // skip past #shado-root fragments\n            while ((parent = parent.host) && isDocFrag(parent)) {}\n\n            return parent;\n        }\n\n        return parent;\n    }\n\n    function inContext (interactable, element) {\n        return interactable._context === element.ownerDocument\n                || nodeContains(interactable._context, element);\n    }\n\n    function testIgnore (interactable, interactableElement, element) {\n        var ignoreFrom = interactable.options.ignoreFrom;\n\n        if (!ignoreFrom || !isElement(element)) { return false; }\n\n        if (isString(ignoreFrom)) {\n            return matchesUpTo(element, ignoreFrom, interactableElement);\n        }\n        else if (isElement(ignoreFrom)) {\n            return nodeContains(ignoreFrom, element);\n        }\n\n        return false;\n    }\n\n    function testAllow (interactable, interactableElement, element) {\n        var allowFrom = interactable.options.allowFrom;\n\n        if (!allowFrom) { return true; }\n\n        if (!isElement(element)) { return false; }\n\n        if (isString(allowFrom)) {\n            return matchesUpTo(element, allowFrom, interactableElement);\n        }\n        else if (isElement(allowFrom)) {\n            return nodeContains(allowFrom, element);\n        }\n\n        return false;\n    }\n\n    function checkAxis (axis, interactable) {\n        if (!interactable) { return false; }\n\n        var thisAxis = interactable.options.drag.axis;\n\n        return (axis === 'xy' || thisAxis === 'xy' || thisAxis === axis);\n    }\n\n    function checkSnap (interactable, action) {\n        var options = interactable.options;\n\n        if (/^resize/.test(action)) {\n            action = 'resize';\n        }\n\n        return options[action].snap && options[action].snap.enabled;\n    }\n\n    function checkRestrict (interactable, action) {\n        var options = interactable.options;\n\n        if (/^resize/.test(action)) {\n            action = 'resize';\n        }\n\n        return  options[action].restrict && options[action].restrict.enabled;\n    }\n\n    function checkAutoScroll (interactable, action) {\n        var options = interactable.options;\n\n        if (/^resize/.test(action)) {\n            action = 'resize';\n        }\n\n        return  options[action].autoScroll && options[action].autoScroll.enabled;\n    }\n\n    function withinInteractionLimit (interactable, element, action) {\n        var options = interactable.options,\n            maxActions = options[action.name].max,\n            maxPerElement = options[action.name].maxPerElement,\n            activeInteractions = 0,\n            targetCount = 0,\n            targetElementCount = 0;\n\n        for (var i = 0, len = interactions.length; i < len; i++) {\n            var interaction = interactions[i],\n                otherAction = interaction.prepared.name,\n                active = interaction.interacting();\n\n            if (!active) { continue; }\n\n            activeInteractions++;\n\n            if (activeInteractions >= maxInteractions) {\n                return false;\n            }\n\n            if (interaction.target !== interactable) { continue; }\n\n            targetCount += (otherAction === action.name)|0;\n\n            if (targetCount >= maxActions) {\n                return false;\n            }\n\n            if (interaction.element === element) {\n                targetElementCount++;\n\n                if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n                    return false;\n                }\n            }\n        }\n\n        return maxInteractions > 0;\n    }\n\n    // Test for the element that's \"above\" all other qualifiers\n    function indexOfDeepestElement (elements) {\n        var dropzone,\n            deepestZone = elements[0],\n            index = deepestZone? 0: -1,\n            parent,\n            deepestZoneParents = [],\n            dropzoneParents = [],\n            child,\n            i,\n            n;\n\n        for (i = 1; i < elements.length; i++) {\n            dropzone = elements[i];\n\n            // an element might belong to multiple selector dropzones\n            if (!dropzone || dropzone === deepestZone) {\n                continue;\n            }\n\n            if (!deepestZone) {\n                deepestZone = dropzone;\n                index = i;\n                continue;\n            }\n\n            // check if the deepest or current are document.documentElement or document.rootElement\n            // - if the current dropzone is, do nothing and continue\n            if (dropzone.parentNode === dropzone.ownerDocument) {\n                continue;\n            }\n            // - if deepest is, update with the current dropzone and continue to next\n            else if (deepestZone.parentNode === dropzone.ownerDocument) {\n                deepestZone = dropzone;\n                index = i;\n                continue;\n            }\n\n            if (!deepestZoneParents.length) {\n                parent = deepestZone;\n                while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n                    deepestZoneParents.unshift(parent);\n                    parent = parent.parentNode;\n                }\n            }\n\n            // if this element is an svg element and the current deepest is\n            // an HTMLElement\n            if (deepestZone instanceof HTMLElement\n                && dropzone instanceof SVGElement\n                && !(dropzone instanceof SVGSVGElement)) {\n\n                if (dropzone === deepestZone.parentNode) {\n                    continue;\n                }\n\n                parent = dropzone.ownerSVGElement;\n            }\n            else {\n                parent = dropzone;\n            }\n\n            dropzoneParents = [];\n\n            while (parent.parentNode !== parent.ownerDocument) {\n                dropzoneParents.unshift(parent);\n                parent = parent.parentNode;\n            }\n\n            n = 0;\n\n            // get (position of last common ancestor) + 1\n            while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n                n++;\n            }\n\n            var parents = [\n                dropzoneParents[n - 1],\n                dropzoneParents[n],\n                deepestZoneParents[n]\n            ];\n\n            child = parents[0].lastChild;\n\n            while (child) {\n                if (child === parents[1]) {\n                    deepestZone = dropzone;\n                    index = i;\n                    deepestZoneParents = [];\n\n                    break;\n                }\n                else if (child === parents[2]) {\n                    break;\n                }\n\n                child = child.previousSibling;\n            }\n        }\n\n        return index;\n    }\n\n    function Interaction () {\n        this.target          = null; // current interactable being interacted with\n        this.element         = null; // the target element of the interactable\n        this.dropTarget      = null; // the dropzone a drag target might be dropped into\n        this.dropElement     = null; // the element at the time of checking\n        this.prevDropTarget  = null; // the dropzone that was recently dragged away from\n        this.prevDropElement = null; // the element at the time of checking\n\n        this.prepared        = {     // action that's ready to be fired on next move event\n            name : null,\n            axis : null,\n            edges: null\n        };\n\n        this.matches         = [];   // all selectors that are matched by target element\n        this.matchElements   = [];   // corresponding elements\n\n        this.inertiaStatus = {\n            active       : false,\n            smoothEnd    : false,\n            ending       : false,\n\n            startEvent: null,\n            upCoords: {},\n\n            xe: 0, ye: 0,\n            sx: 0, sy: 0,\n\n            t0: 0,\n            vx0: 0, vys: 0,\n            duration: 0,\n\n            resumeDx: 0,\n            resumeDy: 0,\n\n            lambda_v0: 0,\n            one_ve_v0: 0,\n            i  : null\n        };\n\n        if (isFunction(Function.prototype.bind)) {\n            this.boundInertiaFrame = this.inertiaFrame.bind(this);\n            this.boundSmoothEndFrame = this.smoothEndFrame.bind(this);\n        }\n        else {\n            var that = this;\n\n            this.boundInertiaFrame = function () { return that.inertiaFrame(); };\n            this.boundSmoothEndFrame = function () { return that.smoothEndFrame(); };\n        }\n\n        this.activeDrops = {\n            dropzones: [],      // the dropzones that are mentioned below\n            elements : [],      // elements of dropzones that accept the target draggable\n            rects    : []       // the rects of the elements mentioned above\n        };\n\n        // keep track of added pointers\n        this.pointers    = [];\n        this.pointerIds  = [];\n        this.downTargets = [];\n        this.downTimes   = [];\n        this.holdTimers  = [];\n\n        // Previous native pointer move event coordinates\n        this.prevCoords = {\n            page     : { x: 0, y: 0 },\n            client   : { x: 0, y: 0 },\n            timeStamp: 0\n        };\n        // current native pointer move event coordinates\n        this.curCoords = {\n            page     : { x: 0, y: 0 },\n            client   : { x: 0, y: 0 },\n            timeStamp: 0\n        };\n\n        // Starting InteractEvent pointer coordinates\n        this.startCoords = {\n            page     : { x: 0, y: 0 },\n            client   : { x: 0, y: 0 },\n            timeStamp: 0\n        };\n\n        // Change in coordinates and time of the pointer\n        this.pointerDelta = {\n            page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n            client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n            timeStamp: 0\n        };\n\n        this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n        this.downPointer = {};\n\n        this._eventTarget    = null;\n        this._curEventTarget = null;\n\n        this.prevEvent = null;      // previous action event\n        this.tapTime   = 0;         // time of the most recent tap event\n        this.prevTap   = null;\n\n        this.startOffset    = { left: 0, right: 0, top: 0, bottom: 0 };\n        this.restrictOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n        this.snapOffsets    = [];\n\n        this.gesture = {\n            start: { x: 0, y: 0 },\n\n            startDistance: 0,   // distance between two touches of touchStart\n            prevDistance : 0,\n            distance     : 0,\n\n            scale: 1,           // gesture.distance / gesture.startDistance\n\n            startAngle: 0,      // angle of line joining two touches\n            prevAngle : 0       // angle of the previous gesture event\n        };\n\n        this.snapStatus = {\n            x       : 0, y       : 0,\n            dx      : 0, dy      : 0,\n            realX   : 0, realY   : 0,\n            snappedX: 0, snappedY: 0,\n            targets : [],\n            locked  : false,\n            changed : false\n        };\n\n        this.restrictStatus = {\n            dx         : 0, dy         : 0,\n            restrictedX: 0, restrictedY: 0,\n            snap       : null,\n            restricted : false,\n            changed    : false\n        };\n\n        this.restrictStatus.snap = this.snapStatus;\n\n        this.pointerIsDown   = false;\n        this.pointerWasMoved = false;\n        this.gesturing       = false;\n        this.dragging        = false;\n        this.resizing        = false;\n        this.resizeAxes      = 'xy';\n\n        this.mouse = false;\n\n        interactions.push(this);\n    }\n\n    Interaction.prototype = {\n        getPageXY  : function (pointer, xy) { return   getPageXY(pointer, xy, this); },\n        getClientXY: function (pointer, xy) { return getClientXY(pointer, xy, this); },\n        setEventXY : function (target, ptr) { return  setEventXY(target, ptr, this); },\n\n        pointerOver: function (pointer, event, eventTarget) {\n            if (this.prepared.name || !this.mouse) { return; }\n\n            var curMatches = [],\n                curMatchElements = [],\n                prevTargetElement = this.element;\n\n            this.addPointer(pointer);\n\n            if (this.target\n                && (testIgnore(this.target, this.element, eventTarget)\n                    || !testAllow(this.target, this.element, eventTarget))) {\n                // if the eventTarget should be ignored or shouldn't be allowed\n                // clear the previous target\n                this.target = null;\n                this.element = null;\n                this.matches = [];\n                this.matchElements = [];\n            }\n\n            var elementInteractable = interactables.get(eventTarget),\n                elementAction = (elementInteractable\n                                 && !testIgnore(elementInteractable, eventTarget, eventTarget)\n                                 && testAllow(elementInteractable, eventTarget, eventTarget)\n                                 && validateAction(\n                                     elementInteractable.getAction(pointer, event, this, eventTarget),\n                                     elementInteractable));\n\n            if (elementAction && !withinInteractionLimit(elementInteractable, eventTarget, elementAction)) {\n                 elementAction = null;\n            }\n\n            function pushCurMatches (interactable, selector) {\n                if (interactable\n                    && inContext(interactable, eventTarget)\n                    && !testIgnore(interactable, eventTarget, eventTarget)\n                    && testAllow(interactable, eventTarget, eventTarget)\n                    && matchesSelector(eventTarget, selector)) {\n\n                    curMatches.push(interactable);\n                    curMatchElements.push(eventTarget);\n                }\n            }\n\n            if (elementAction) {\n                this.target = elementInteractable;\n                this.element = eventTarget;\n                this.matches = [];\n                this.matchElements = [];\n            }\n            else {\n                interactables.forEachSelector(pushCurMatches);\n\n                if (this.validateSelector(pointer, event, curMatches, curMatchElements)) {\n                    this.matches = curMatches;\n                    this.matchElements = curMatchElements;\n\n                    this.pointerHover(pointer, event, this.matches, this.matchElements);\n                    events.add(eventTarget,\n                                        supportsPointerEvent? pEventTypes.move : 'mousemove',\n                                        listeners.pointerHover);\n                }\n                else if (this.target) {\n                    if (nodeContains(prevTargetElement, eventTarget)) {\n                        this.pointerHover(pointer, event, this.matches, this.matchElements);\n                        events.add(this.element,\n                                            supportsPointerEvent? pEventTypes.move : 'mousemove',\n                                            listeners.pointerHover);\n                    }\n                    else {\n                        this.target = null;\n                        this.element = null;\n                        this.matches = [];\n                        this.matchElements = [];\n                    }\n                }\n            }\n        },\n\n        // Check what action would be performed on pointerMove target if a mouse\n        // button were pressed and change the cursor accordingly\n        pointerHover: function (pointer, event, eventTarget, curEventTarget, matches, matchElements) {\n            var target = this.target;\n\n            if (!this.prepared.name && this.mouse) {\n\n                var action;\n\n                // update pointer coords for defaultActionChecker to use\n                this.setEventXY(this.curCoords, [pointer]);\n\n                if (matches) {\n                    action = this.validateSelector(pointer, event, matches, matchElements);\n                }\n                else if (target) {\n                    action = validateAction(target.getAction(this.pointers[0], event, this, this.element), this.target);\n                }\n\n                if (target && target.options.styleCursor) {\n                    if (action) {\n                        target._doc.documentElement.style.cursor = getActionCursor(action);\n                    }\n                    else {\n                        target._doc.documentElement.style.cursor = '';\n                    }\n                }\n            }\n            else if (this.prepared.name) {\n                this.checkAndPreventDefault(event, target, this.element);\n            }\n        },\n\n        pointerOut: function (pointer, event, eventTarget) {\n            if (this.prepared.name) { return; }\n\n            // Remove temporary event listeners for selector Interactables\n            if (!interactables.get(eventTarget)) {\n                events.remove(eventTarget,\n                                       supportsPointerEvent? pEventTypes.move : 'mousemove',\n                                       listeners.pointerHover);\n            }\n\n            if (this.target && this.target.options.styleCursor && !this.interacting()) {\n                this.target._doc.documentElement.style.cursor = '';\n            }\n        },\n\n        selectorDown: function (pointer, event, eventTarget, curEventTarget) {\n            var that = this,\n                // copy event to be used in timeout for IE8\n                eventCopy = events.useAttachEvent? extend({}, event) : event,\n                element = eventTarget,\n                pointerIndex = this.addPointer(pointer),\n                action;\n\n            this.holdTimers[pointerIndex] = setTimeout(function () {\n                that.pointerHold(events.useAttachEvent? eventCopy : pointer, eventCopy, eventTarget, curEventTarget);\n            }, defaultOptions._holdDuration);\n\n            this.pointerIsDown = true;\n\n            // Check if the down event hits the current inertia target\n            if (this.inertiaStatus.active && this.target.selector) {\n                // climb up the DOM tree from the event target\n                while (isElement(element)) {\n\n                    // if this element is the current inertia target element\n                    if (element === this.element\n                        // and the prospective action is the same as the ongoing one\n                        && validateAction(this.target.getAction(pointer, event, this, this.element), this.target).name === this.prepared.name) {\n\n                        // stop inertia so that the next move will be a normal one\n                        cancelFrame(this.inertiaStatus.i);\n                        this.inertiaStatus.active = false;\n\n                        this.collectEventTargets(pointer, event, eventTarget, 'down');\n                        return;\n                    }\n                    element = parentElement(element);\n                }\n            }\n\n            // do nothing if interacting\n            if (this.interacting()) {\n                this.collectEventTargets(pointer, event, eventTarget, 'down');\n                return;\n            }\n\n            function pushMatches (interactable, selector, context) {\n                var elements = ie8MatchesSelector\n                    ? context.querySelectorAll(selector)\n                    : undefined;\n\n                if (inContext(interactable, element)\n                    && !testIgnore(interactable, element, eventTarget)\n                    && testAllow(interactable, element, eventTarget)\n                    && matchesSelector(element, selector, elements)) {\n\n                    that.matches.push(interactable);\n                    that.matchElements.push(element);\n                }\n            }\n\n            // update pointer coords for defaultActionChecker to use\n            this.setEventXY(this.curCoords, [pointer]);\n            this.downEvent = event;\n\n            while (isElement(element) && !action) {\n                this.matches = [];\n                this.matchElements = [];\n\n                interactables.forEachSelector(pushMatches);\n\n                action = this.validateSelector(pointer, event, this.matches, this.matchElements);\n                element = parentElement(element);\n            }\n\n            if (action) {\n                this.prepared.name  = action.name;\n                this.prepared.axis  = action.axis;\n                this.prepared.edges = action.edges;\n\n                this.collectEventTargets(pointer, event, eventTarget, 'down');\n\n                return this.pointerDown(pointer, event, eventTarget, curEventTarget, action);\n            }\n            else {\n                // do these now since pointerDown isn't being called from here\n                this.downTimes[pointerIndex] = new Date().getTime();\n                this.downTargets[pointerIndex] = eventTarget;\n                pointerExtend(this.downPointer, pointer);\n\n                copyCoords(this.prevCoords, this.curCoords);\n                this.pointerWasMoved = false;\n            }\n\n            this.collectEventTargets(pointer, event, eventTarget, 'down');\n        },\n\n        // Determine action to be performed on next pointerMove and add appropriate\n        // style and event Listeners\n        pointerDown: function (pointer, event, eventTarget, curEventTarget, forceAction) {\n            if (!forceAction && !this.inertiaStatus.active && this.pointerWasMoved && this.prepared.name) {\n                this.checkAndPreventDefault(event, this.target, this.element);\n\n                return;\n            }\n\n            this.pointerIsDown = true;\n            this.downEvent = event;\n\n            var pointerIndex = this.addPointer(pointer),\n                action;\n\n            // If it is the second touch of a multi-touch gesture, keep the\n            // target the same and get a new action if a target was set by the\n            // first touch\n            if (this.pointerIds.length > 1 && this.target._element === this.element) {\n                var newAction = validateAction(forceAction || this.target.getAction(pointer, event, this, this.element), this.target);\n\n                if (withinInteractionLimit(this.target, this.element, newAction)) {\n                    action = newAction;\n                }\n\n                this.prepared.name = null;\n            }\n            // Otherwise, set the target if there is no action prepared\n            else if (!this.prepared.name) {\n                var interactable = interactables.get(curEventTarget);\n\n                if (interactable\n                    && !testIgnore(interactable, curEventTarget, eventTarget)\n                    && testAllow(interactable, curEventTarget, eventTarget)\n                    && (action = validateAction(forceAction || interactable.getAction(pointer, event, this, curEventTarget), interactable, eventTarget))\n                    && withinInteractionLimit(interactable, curEventTarget, action)) {\n                    this.target = interactable;\n                    this.element = curEventTarget;\n                }\n            }\n\n            var target = this.target,\n                options = target && target.options;\n\n            if (target && (forceAction || !this.prepared.name)) {\n                action = action || validateAction(forceAction || target.getAction(pointer, event, this, curEventTarget), target, this.element);\n\n                this.setEventXY(this.startCoords, this.pointers);\n\n                if (!action) { return; }\n\n                if (options.styleCursor) {\n                    target._doc.documentElement.style.cursor = getActionCursor(action);\n                }\n\n                this.resizeAxes = action.name === 'resize'? action.axis : null;\n\n                if (action === 'gesture' && this.pointerIds.length < 2) {\n                    action = null;\n                }\n\n                this.prepared.name  = action.name;\n                this.prepared.axis  = action.axis;\n                this.prepared.edges = action.edges;\n\n                this.snapStatus.snappedX = this.snapStatus.snappedY =\n                    this.restrictStatus.restrictedX = this.restrictStatus.restrictedY = NaN;\n\n                this.downTimes[pointerIndex] = new Date().getTime();\n                this.downTargets[pointerIndex] = eventTarget;\n                pointerExtend(this.downPointer, pointer);\n\n                copyCoords(this.prevCoords, this.startCoords);\n                this.pointerWasMoved = false;\n\n                this.checkAndPreventDefault(event, target, this.element);\n            }\n            // if inertia is active try to resume action\n            else if (this.inertiaStatus.active\n                && curEventTarget === this.element\n                && validateAction(target.getAction(pointer, event, this, this.element), target).name === this.prepared.name) {\n\n                cancelFrame(this.inertiaStatus.i);\n                this.inertiaStatus.active = false;\n\n                this.checkAndPreventDefault(event, target, this.element);\n            }\n        },\n\n        setModifications: function (coords, preEnd) {\n            var target         = this.target,\n                shouldMove     = true,\n                shouldSnap     = checkSnap(target, this.prepared.name)     && (!target.options[this.prepared.name].snap.endOnly     || preEnd),\n                shouldRestrict = checkRestrict(target, this.prepared.name) && (!target.options[this.prepared.name].restrict.endOnly || preEnd);\n\n            if (shouldSnap    ) { this.setSnapping   (coords); } else { this.snapStatus    .locked     = false; }\n            if (shouldRestrict) { this.setRestriction(coords); } else { this.restrictStatus.restricted = false; }\n\n            if (shouldSnap && this.snapStatus.locked && !this.snapStatus.changed) {\n                shouldMove = shouldRestrict && this.restrictStatus.restricted && this.restrictStatus.changed;\n            }\n            else if (shouldRestrict && this.restrictStatus.restricted && !this.restrictStatus.changed) {\n                shouldMove = false;\n            }\n\n            return shouldMove;\n        },\n\n        setStartOffsets: function (action, interactable, element) {\n            var rect = interactable.getRect(element),\n                origin = getOriginXY(interactable, element),\n                snap = interactable.options[this.prepared.name].snap,\n                restrict = interactable.options[this.prepared.name].restrict,\n                width, height;\n\n            if (rect) {\n                this.startOffset.left = this.startCoords.page.x - rect.left;\n                this.startOffset.top  = this.startCoords.page.y - rect.top;\n\n                this.startOffset.right  = rect.right  - this.startCoords.page.x;\n                this.startOffset.bottom = rect.bottom - this.startCoords.page.y;\n\n                if ('width' in rect) { width = rect.width; }\n                else { width = rect.right - rect.left; }\n                if ('height' in rect) { height = rect.height; }\n                else { height = rect.bottom - rect.top; }\n            }\n            else {\n                this.startOffset.left = this.startOffset.top = this.startOffset.right = this.startOffset.bottom = 0;\n            }\n\n            this.snapOffsets.splice(0);\n\n            var snapOffset = snap && snap.offset === 'startCoords'\n                                ? {\n                                    x: this.startCoords.page.x - origin.x,\n                                    y: this.startCoords.page.y - origin.y\n                                }\n                                : snap && snap.offset || { x: 0, y: 0 };\n\n            if (rect && snap && snap.relativePoints && snap.relativePoints.length) {\n                for (var i = 0; i < snap.relativePoints.length; i++) {\n                    this.snapOffsets.push({\n                        x: this.startOffset.left - (width  * snap.relativePoints[i].x) + snapOffset.x,\n                        y: this.startOffset.top  - (height * snap.relativePoints[i].y) + snapOffset.y\n                    });\n                }\n            }\n            else {\n                this.snapOffsets.push(snapOffset);\n            }\n\n            if (rect && restrict.elementRect) {\n                this.restrictOffset.left = this.startOffset.left - (width  * restrict.elementRect.left);\n                this.restrictOffset.top  = this.startOffset.top  - (height * restrict.elementRect.top);\n\n                this.restrictOffset.right  = this.startOffset.right  - (width  * (1 - restrict.elementRect.right));\n                this.restrictOffset.bottom = this.startOffset.bottom - (height * (1 - restrict.elementRect.bottom));\n            }\n            else {\n                this.restrictOffset.left = this.restrictOffset.top = this.restrictOffset.right = this.restrictOffset.bottom = 0;\n            }\n        },\n\n        /*\\\n         * Interaction.start\n         [ method ]\n         *\n         * Start an action with the given Interactable and Element as tartgets. The\n         * action must be enabled for the target Interactable and an appropriate number\n         * of pointers must be held down – 1 for drag/resize, 2 for gesture.\n         *\n         * Use it with `interactable.<action>able({ manualStart: false })` to always\n         * [start actions manually](https://github.com/taye/interact.js/issues/114)\n         *\n         - action       (object)  The action to be performed - drag, resize, etc.\n         - interactable (Interactable) The Interactable to target\n         - element      (Element) The DOM Element to target\n         = (object) interact\n         **\n         | interact(target)\n         |   .draggable({\n         |     // disable the default drag start by down->move\n         |     manualStart: true\n         |   })\n         |   // start dragging after the user holds the pointer down\n         |   .on('hold', function (event) {\n         |     var interaction = event.interaction;\n         |\n         |     if (!interaction.interacting()) {\n         |       interaction.start({ name: 'drag' },\n         |                         event.interactable,\n         |                         event.currentTarget);\n         |     }\n         | });\n        \\*/\n        start: function (action, interactable, element) {\n            if (this.interacting()\n                || !this.pointerIsDown\n                || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n                return;\n            }\n\n            // if this interaction had been removed after stopping\n            // add it back\n            if (indexOf(interactions, this) === -1) {\n                interactions.push(this);\n            }\n\n            // set the startCoords if there was no prepared action\n            if (!this.prepared.name) {\n                this.setEventXY(this.startCoords, this.pointers);\n            }\n\n            this.prepared.name  = action.name;\n            this.prepared.axis  = action.axis;\n            this.prepared.edges = action.edges;\n            this.target         = interactable;\n            this.element        = element;\n\n            this.setStartOffsets(action.name, interactable, element);\n            this.setModifications(this.startCoords.page);\n\n            this.prevEvent = this[this.prepared.name + 'Start'](this.downEvent);\n        },\n\n        pointerMove: function (pointer, event, eventTarget, curEventTarget, preEnd) {\n            if (this.inertiaStatus.active) {\n                var pageUp   = this.inertiaStatus.upCoords.page;\n                var clientUp = this.inertiaStatus.upCoords.client;\n\n                var inertiaPosition = {\n                    pageX  : pageUp.x   + this.inertiaStatus.sx,\n                    pageY  : pageUp.y   + this.inertiaStatus.sy,\n                    clientX: clientUp.x + this.inertiaStatus.sx,\n                    clientY: clientUp.y + this.inertiaStatus.sy\n                };\n\n                this.setEventXY(this.curCoords, [inertiaPosition]);\n            }\n            else {\n                this.recordPointer(pointer);\n                this.setEventXY(this.curCoords, this.pointers);\n            }\n\n            var duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n                                 && this.curCoords.page.y === this.prevCoords.page.y\n                                 && this.curCoords.client.x === this.prevCoords.client.x\n                                 && this.curCoords.client.y === this.prevCoords.client.y);\n\n            var dx, dy,\n                pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\n            // register movement greater than pointerMoveTolerance\n            if (this.pointerIsDown && !this.pointerWasMoved) {\n                dx = this.curCoords.client.x - this.startCoords.client.x;\n                dy = this.curCoords.client.y - this.startCoords.client.y;\n\n                this.pointerWasMoved = hypot(dx, dy) > pointerMoveTolerance;\n            }\n\n            if (!duplicateMove && (!this.pointerIsDown || this.pointerWasMoved)) {\n                if (this.pointerIsDown) {\n                    clearTimeout(this.holdTimers[pointerIndex]);\n                }\n\n                this.collectEventTargets(pointer, event, eventTarget, 'move');\n            }\n\n            if (!this.pointerIsDown) { return; }\n\n            if (duplicateMove && this.pointerWasMoved && !preEnd) {\n                this.checkAndPreventDefault(event, this.target, this.element);\n                return;\n            }\n\n            // set pointer coordinate, time changes and speeds\n            setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n            if (!this.prepared.name) { return; }\n\n            if (this.pointerWasMoved\n                // ignore movement while inertia is active\n                && (!this.inertiaStatus.active || (pointer instanceof InteractEvent && /inertiastart/.test(pointer.type)))) {\n\n                // if just starting an action, calculate the pointer speed now\n                if (!this.interacting()) {\n                    setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n                    // check if a drag is in the correct axis\n                    if (this.prepared.name === 'drag') {\n                        var absX = Math.abs(dx),\n                            absY = Math.abs(dy),\n                            targetAxis = this.target.options.drag.axis,\n                            axis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n                        // if the movement isn't in the axis of the interactable\n                        if (axis !== 'xy' && targetAxis !== 'xy' && targetAxis !== axis) {\n                            // cancel the prepared action\n                            this.prepared.name = null;\n\n                            // then try to get a drag from another ineractable\n\n                            var element = eventTarget;\n\n                            // check element interactables\n                            while (isElement(element)) {\n                                var elementInteractable = interactables.get(element);\n\n                                if (elementInteractable\n                                    && elementInteractable !== this.target\n                                    && !elementInteractable.options.drag.manualStart\n                                    && elementInteractable.getAction(this.downPointer, this.downEvent, this, element).name === 'drag'\n                                    && checkAxis(axis, elementInteractable)) {\n\n                                    this.prepared.name = 'drag';\n                                    this.target = elementInteractable;\n                                    this.element = element;\n                                    break;\n                                }\n\n                                element = parentElement(element);\n                            }\n\n                            // if there's no drag from element interactables,\n                            // check the selector interactables\n                            if (!this.prepared.name) {\n                                var thisInteraction = this;\n\n                                var getDraggable = function (interactable, selector, context) {\n                                    var elements = ie8MatchesSelector\n                                        ? context.querySelectorAll(selector)\n                                        : undefined;\n\n                                    if (interactable === thisInteraction.target) { return; }\n\n                                    if (inContext(interactable, eventTarget)\n                                        && !interactable.options.drag.manualStart\n                                        && !testIgnore(interactable, element, eventTarget)\n                                        && testAllow(interactable, element, eventTarget)\n                                        && matchesSelector(element, selector, elements)\n                                        && interactable.getAction(thisInteraction.downPointer, thisInteraction.downEvent, thisInteraction, element).name === 'drag'\n                                        && checkAxis(axis, interactable)\n                                        && withinInteractionLimit(interactable, element, 'drag')) {\n\n                                        return interactable;\n                                    }\n                                };\n\n                                element = eventTarget;\n\n                                while (isElement(element)) {\n                                    var selectorInteractable = interactables.forEachSelector(getDraggable);\n\n                                    if (selectorInteractable) {\n                                        this.prepared.name = 'drag';\n                                        this.target = selectorInteractable;\n                                        this.element = element;\n                                        break;\n                                    }\n\n                                    element = parentElement(element);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                var starting = !!this.prepared.name && !this.interacting();\n\n                if (starting\n                    && (this.target.options[this.prepared.name].manualStart\n                        || !withinInteractionLimit(this.target, this.element, this.prepared))) {\n                    this.stop(event);\n                    return;\n                }\n\n                if (this.prepared.name && this.target) {\n                    if (starting) {\n                        this.start(this.prepared, this.target, this.element);\n                    }\n\n                    var shouldMove = this.setModifications(this.curCoords.page, preEnd);\n\n                    // move if snapping or restriction doesn't prevent it\n                    if (shouldMove || starting) {\n                        this.prevEvent = this[this.prepared.name + 'Move'](event);\n                    }\n\n                    this.checkAndPreventDefault(event, this.target, this.element);\n                }\n            }\n\n            copyCoords(this.prevCoords, this.curCoords);\n\n            if (this.dragging || this.resizing) {\n                this.autoScrollMove(pointer);\n            }\n        },\n\n        dragStart: function (event) {\n            var dragEvent = new InteractEvent(this, event, 'drag', 'start', this.element);\n\n            this.dragging = true;\n            this.target.fire(dragEvent);\n\n            // reset active dropzones\n            this.activeDrops.dropzones = [];\n            this.activeDrops.elements  = [];\n            this.activeDrops.rects     = [];\n\n            if (!this.dynamicDrop) {\n                this.setActiveDrops(this.element);\n            }\n\n            var dropEvents = this.getDropEvents(event, dragEvent);\n\n            if (dropEvents.activate) {\n                this.fireActiveDrops(dropEvents.activate);\n            }\n\n            return dragEvent;\n        },\n\n        dragMove: function (event) {\n            var target = this.target,\n                dragEvent  = new InteractEvent(this, event, 'drag', 'move', this.element),\n                draggableElement = this.element,\n                drop = this.getDrop(dragEvent, event, draggableElement);\n\n            this.dropTarget = drop.dropzone;\n            this.dropElement = drop.element;\n\n            var dropEvents = this.getDropEvents(event, dragEvent);\n\n            target.fire(dragEvent);\n\n            if (dropEvents.leave) { this.prevDropTarget.fire(dropEvents.leave); }\n            if (dropEvents.enter) {     this.dropTarget.fire(dropEvents.enter); }\n            if (dropEvents.move ) {     this.dropTarget.fire(dropEvents.move ); }\n\n            this.prevDropTarget  = this.dropTarget;\n            this.prevDropElement = this.dropElement;\n\n            return dragEvent;\n        },\n\n        resizeStart: function (event) {\n            var resizeEvent = new InteractEvent(this, event, 'resize', 'start', this.element);\n\n            if (this.prepared.edges) {\n                var startRect = this.target.getRect(this.element);\n\n                /*\n                 * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n                 * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n                 * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n                 * on the active edges and the edge being interacted with.\n                 */\n                if (this.target.options.resize.square || this.target.options.resize.preserveAspectRatio) {\n                    var linkedEdges = extend({}, this.prepared.edges);\n\n                    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n                    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n                    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n                    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n                    this.prepared._linkedEdges = linkedEdges;\n                }\n                else {\n                    this.prepared._linkedEdges = null;\n                }\n\n                // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n                if (this.target.options.resize.preserveAspectRatio) {\n                    this.resizeStartAspectRatio = startRect.width / startRect.height;\n                }\n\n                this.resizeRects = {\n                    start     : startRect,\n                    current   : extend({}, startRect),\n                    restricted: extend({}, startRect),\n                    previous  : extend({}, startRect),\n                    delta     : {\n                        left: 0, right : 0, width : 0,\n                        top : 0, bottom: 0, height: 0\n                    }\n                };\n\n                resizeEvent.rect = this.resizeRects.restricted;\n                resizeEvent.deltaRect = this.resizeRects.delta;\n            }\n\n            this.target.fire(resizeEvent);\n\n            this.resizing = true;\n\n            return resizeEvent;\n        },\n\n        resizeMove: function (event) {\n            var resizeEvent = new InteractEvent(this, event, 'resize', 'move', this.element);\n\n            var edges = this.prepared.edges,\n                invert = this.target.options.resize.invert,\n                invertible = invert === 'reposition' || invert === 'negate';\n\n            if (edges) {\n                var dx = resizeEvent.dx,\n                    dy = resizeEvent.dy,\n\n                    start      = this.resizeRects.start,\n                    current    = this.resizeRects.current,\n                    restricted = this.resizeRects.restricted,\n                    delta      = this.resizeRects.delta,\n                    previous   = extend(this.resizeRects.previous, restricted),\n\n                    originalEdges = edges;\n\n                // `resize.preserveAspectRatio` takes precedence over `resize.square`\n                if (this.target.options.resize.preserveAspectRatio) {\n                    var resizeStartAspectRatio = this.resizeStartAspectRatio;\n\n                    edges = this.prepared._linkedEdges;\n\n                    if ((originalEdges.left && originalEdges.bottom)\n                        || (originalEdges.right && originalEdges.top)) {\n                        dy = -dx / resizeStartAspectRatio;\n                    }\n                    else if (originalEdges.left || originalEdges.right) { dy = dx / resizeStartAspectRatio; }\n                    else if (originalEdges.top || originalEdges.bottom) { dx = dy * resizeStartAspectRatio; }\n                }\n                else if (this.target.options.resize.square) {\n                    edges = this.prepared._linkedEdges;\n\n                    if ((originalEdges.left && originalEdges.bottom)\n                        || (originalEdges.right && originalEdges.top)) {\n                        dy = -dx;\n                    }\n                    else if (originalEdges.left || originalEdges.right) { dy = dx; }\n                    else if (originalEdges.top || originalEdges.bottom) { dx = dy; }\n                }\n\n                // update the 'current' rect without modifications\n                if (edges.top   ) { current.top    += dy; }\n                if (edges.bottom) { current.bottom += dy; }\n                if (edges.left  ) { current.left   += dx; }\n                if (edges.right ) { current.right  += dx; }\n\n                if (invertible) {\n                    // if invertible, copy the current rect\n                    extend(restricted, current);\n\n                    if (invert === 'reposition') {\n                        // swap edge values if necessary to keep width/height positive\n                        var swap;\n\n                        if (restricted.top > restricted.bottom) {\n                            swap = restricted.top;\n\n                            restricted.top = restricted.bottom;\n                            restricted.bottom = swap;\n                        }\n                        if (restricted.left > restricted.right) {\n                            swap = restricted.left;\n\n                            restricted.left = restricted.right;\n                            restricted.right = swap;\n                        }\n                    }\n                }\n                else {\n                    // if not invertible, restrict to minimum of 0x0 rect\n                    restricted.top    = Math.min(current.top, start.bottom);\n                    restricted.bottom = Math.max(current.bottom, start.top);\n                    restricted.left   = Math.min(current.left, start.right);\n                    restricted.right  = Math.max(current.right, start.left);\n                }\n\n                restricted.width  = restricted.right  - restricted.left;\n                restricted.height = restricted.bottom - restricted.top ;\n\n                for (var edge in restricted) {\n                    delta[edge] = restricted[edge] - previous[edge];\n                }\n\n                resizeEvent.edges = this.prepared.edges;\n                resizeEvent.rect = restricted;\n                resizeEvent.deltaRect = delta;\n            }\n\n            this.target.fire(resizeEvent);\n\n            return resizeEvent;\n        },\n\n        gestureStart: function (event) {\n            var gestureEvent = new InteractEvent(this, event, 'gesture', 'start', this.element);\n\n            gestureEvent.ds = 0;\n\n            this.gesture.startDistance = this.gesture.prevDistance = gestureEvent.distance;\n            this.gesture.startAngle = this.gesture.prevAngle = gestureEvent.angle;\n            this.gesture.scale = 1;\n\n            this.gesturing = true;\n\n            this.target.fire(gestureEvent);\n\n            return gestureEvent;\n        },\n\n        gestureMove: function (event) {\n            if (!this.pointerIds.length) {\n                return this.prevEvent;\n            }\n\n            var gestureEvent;\n\n            gestureEvent = new InteractEvent(this, event, 'gesture', 'move', this.element);\n            gestureEvent.ds = gestureEvent.scale - this.gesture.scale;\n\n            this.target.fire(gestureEvent);\n\n            this.gesture.prevAngle = gestureEvent.angle;\n            this.gesture.prevDistance = gestureEvent.distance;\n\n            if (gestureEvent.scale !== Infinity &&\n                gestureEvent.scale !== null &&\n                gestureEvent.scale !== undefined  &&\n                !isNaN(gestureEvent.scale)) {\n\n                this.gesture.scale = gestureEvent.scale;\n            }\n\n            return gestureEvent;\n        },\n\n        pointerHold: function (pointer, event, eventTarget) {\n            this.collectEventTargets(pointer, event, eventTarget, 'hold');\n        },\n\n        pointerUp: function (pointer, event, eventTarget, curEventTarget) {\n            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\n            clearTimeout(this.holdTimers[pointerIndex]);\n\n            this.collectEventTargets(pointer, event, eventTarget, 'up' );\n            this.collectEventTargets(pointer, event, eventTarget, 'tap');\n\n            this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n            this.removePointer(pointer);\n        },\n\n        pointerCancel: function (pointer, event, eventTarget, curEventTarget) {\n            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\n            clearTimeout(this.holdTimers[pointerIndex]);\n\n            this.collectEventTargets(pointer, event, eventTarget, 'cancel');\n            this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n            this.removePointer(pointer);\n        },\n\n        // http://www.quirksmode.org/dom/events/click.html\n        // >Events leading to dblclick\n        //\n        // IE8 doesn't fire down event before dblclick.\n        // This workaround tries to fire a tap and doubletap after dblclick\n        ie8Dblclick: function (pointer, event, eventTarget) {\n            if (this.prevTap\n                && event.clientX === this.prevTap.clientX\n                && event.clientY === this.prevTap.clientY\n                && eventTarget   === this.prevTap.target) {\n\n                this.downTargets[0] = eventTarget;\n                this.downTimes[0] = new Date().getTime();\n                this.collectEventTargets(pointer, event, eventTarget, 'tap');\n            }\n        },\n\n        // End interact move events and stop auto-scroll unless inertia is enabled\n        pointerEnd: function (pointer, event, eventTarget, curEventTarget) {\n            var endEvent,\n                target = this.target,\n                options = target && target.options,\n                inertiaOptions = options && this.prepared.name && options[this.prepared.name].inertia,\n                inertiaStatus = this.inertiaStatus;\n\n            if (this.interacting()) {\n\n                if (inertiaStatus.active && !inertiaStatus.ending) { return; }\n\n                var pointerSpeed,\n                    now = new Date().getTime(),\n                    inertiaPossible = false,\n                    inertia = false,\n                    smoothEnd = false,\n                    endSnap = checkSnap(target, this.prepared.name) && options[this.prepared.name].snap.endOnly,\n                    endRestrict = checkRestrict(target, this.prepared.name) && options[this.prepared.name].restrict.endOnly,\n                    dx = 0,\n                    dy = 0,\n                    startEvent;\n\n                if (this.dragging) {\n                    if      (options.drag.axis === 'x' ) { pointerSpeed = Math.abs(this.pointerDelta.client.vx); }\n                    else if (options.drag.axis === 'y' ) { pointerSpeed = Math.abs(this.pointerDelta.client.vy); }\n                    else   /*options.drag.axis === 'xy'*/{ pointerSpeed = this.pointerDelta.client.speed; }\n                }\n                else {\n                    pointerSpeed = this.pointerDelta.client.speed;\n                }\n\n                // check if inertia should be started\n                inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                                   && this.prepared.name !== 'gesture'\n                                   && event !== inertiaStatus.startEvent);\n\n                inertia = (inertiaPossible\n                           && (now - this.curCoords.timeStamp) < 50\n                           && pointerSpeed > inertiaOptions.minSpeed\n                           && pointerSpeed > inertiaOptions.endSpeed);\n\n                if (inertiaPossible && !inertia && (endSnap || endRestrict)) {\n\n                    var snapRestrict = {};\n\n                    snapRestrict.snap = snapRestrict.restrict = snapRestrict;\n\n                    if (endSnap) {\n                        this.setSnapping(this.curCoords.page, snapRestrict);\n                        if (snapRestrict.locked) {\n                            dx += snapRestrict.dx;\n                            dy += snapRestrict.dy;\n                        }\n                    }\n\n                    if (endRestrict) {\n                        this.setRestriction(this.curCoords.page, snapRestrict);\n                        if (snapRestrict.restricted) {\n                            dx += snapRestrict.dx;\n                            dy += snapRestrict.dy;\n                        }\n                    }\n\n                    if (dx || dy) {\n                        smoothEnd = true;\n                    }\n                }\n\n                if (inertia || smoothEnd) {\n                    copyCoords(inertiaStatus.upCoords, this.curCoords);\n\n                    this.pointers[0] = inertiaStatus.startEvent = startEvent =\n                        new InteractEvent(this, event, this.prepared.name, 'inertiastart', this.element);\n\n                    inertiaStatus.t0 = now;\n\n                    target.fire(inertiaStatus.startEvent);\n\n                    if (inertia) {\n                        inertiaStatus.vx0 = this.pointerDelta.client.vx;\n                        inertiaStatus.vy0 = this.pointerDelta.client.vy;\n                        inertiaStatus.v0 = pointerSpeed;\n\n                        this.calcInertia(inertiaStatus);\n\n                        var page = extend({}, this.curCoords.page),\n                            origin = getOriginXY(target, this.element),\n                            statusObject;\n\n                        page.x = page.x + inertiaStatus.xe - origin.x;\n                        page.y = page.y + inertiaStatus.ye - origin.y;\n\n                        statusObject = {\n                            useStatusXY: true,\n                            x: page.x,\n                            y: page.y,\n                            dx: 0,\n                            dy: 0,\n                            snap: null\n                        };\n\n                        statusObject.snap = statusObject;\n\n                        dx = dy = 0;\n\n                        if (endSnap) {\n                            var snap = this.setSnapping(this.curCoords.page, statusObject);\n\n                            if (snap.locked) {\n                                dx += snap.dx;\n                                dy += snap.dy;\n                            }\n                        }\n\n                        if (endRestrict) {\n                            var restrict = this.setRestriction(this.curCoords.page, statusObject);\n\n                            if (restrict.restricted) {\n                                dx += restrict.dx;\n                                dy += restrict.dy;\n                            }\n                        }\n\n                        inertiaStatus.modifiedXe += dx;\n                        inertiaStatus.modifiedYe += dy;\n\n                        inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n                    }\n                    else {\n                        inertiaStatus.smoothEnd = true;\n                        inertiaStatus.xe = dx;\n                        inertiaStatus.ye = dy;\n\n                        inertiaStatus.sx = inertiaStatus.sy = 0;\n\n                        inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n                    }\n\n                    inertiaStatus.active = true;\n                    return;\n                }\n\n                if (endSnap || endRestrict) {\n                    // fire a move event at the snapped coordinates\n                    this.pointerMove(pointer, event, eventTarget, curEventTarget, true);\n                }\n            }\n\n            if (this.dragging) {\n                endEvent = new InteractEvent(this, event, 'drag', 'end', this.element);\n\n                var draggableElement = this.element,\n                    drop = this.getDrop(endEvent, event, draggableElement);\n\n                this.dropTarget = drop.dropzone;\n                this.dropElement = drop.element;\n\n                var dropEvents = this.getDropEvents(event, endEvent);\n\n                if (dropEvents.leave) { this.prevDropTarget.fire(dropEvents.leave); }\n                if (dropEvents.enter) {     this.dropTarget.fire(dropEvents.enter); }\n                if (dropEvents.drop ) {     this.dropTarget.fire(dropEvents.drop ); }\n                if (dropEvents.deactivate) {\n                    this.fireActiveDrops(dropEvents.deactivate);\n                }\n\n                target.fire(endEvent);\n            }\n            else if (this.resizing) {\n                endEvent = new InteractEvent(this, event, 'resize', 'end', this.element);\n                target.fire(endEvent);\n            }\n            else if (this.gesturing) {\n                endEvent = new InteractEvent(this, event, 'gesture', 'end', this.element);\n                target.fire(endEvent);\n            }\n\n            this.stop(event);\n        },\n\n        collectDrops: function (element) {\n            var drops = [],\n                elements = [],\n                i;\n\n            element = element || this.element;\n\n            // collect all dropzones and their elements which qualify for a drop\n            for (i = 0; i < interactables.length; i++) {\n                if (!interactables[i].options.drop.enabled) { continue; }\n\n                var current = interactables[i],\n                    accept = current.options.drop.accept;\n\n                // test the draggable element against the dropzone's accept setting\n                if ((isElement(accept) && accept !== element)\n                    || (isString(accept)\n                        && !matchesSelector(element, accept))) {\n\n                    continue;\n                }\n\n                // query for new elements if necessary\n                var dropElements = current.selector? current._context.querySelectorAll(current.selector) : [current._element];\n\n                for (var j = 0, len = dropElements.length; j < len; j++) {\n                    var currentElement = dropElements[j];\n\n                    if (currentElement === element) {\n                        continue;\n                    }\n\n                    drops.push(current);\n                    elements.push(currentElement);\n                }\n            }\n\n            return {\n                dropzones: drops,\n                elements: elements\n            };\n        },\n\n        fireActiveDrops: function (event) {\n            var i,\n                current,\n                currentElement,\n                prevElement;\n\n            // loop through all active dropzones and trigger event\n            for (i = 0; i < this.activeDrops.dropzones.length; i++) {\n                current = this.activeDrops.dropzones[i];\n                currentElement = this.activeDrops.elements [i];\n\n                // prevent trigger of duplicate events on same element\n                if (currentElement !== prevElement) {\n                    // set current element as event target\n                    event.target = currentElement;\n                    current.fire(event);\n                }\n                prevElement = currentElement;\n            }\n        },\n\n        // Collect a new set of possible drops and save them in activeDrops.\n        // setActiveDrops should always be called when a drag has just started or a\n        // drag event happens while dynamicDrop is true\n        setActiveDrops: function (dragElement) {\n            // get dropzones and their elements that could receive the draggable\n            var possibleDrops = this.collectDrops(dragElement, true);\n\n            this.activeDrops.dropzones = possibleDrops.dropzones;\n            this.activeDrops.elements  = possibleDrops.elements;\n            this.activeDrops.rects     = [];\n\n            for (var i = 0; i < this.activeDrops.dropzones.length; i++) {\n                this.activeDrops.rects[i] = this.activeDrops.dropzones[i].getRect(this.activeDrops.elements[i]);\n            }\n        },\n\n        getDrop: function (dragEvent, event, dragElement) {\n            var validDrops = [];\n\n            if (dynamicDrop) {\n                this.setActiveDrops(dragElement);\n            }\n\n            // collect all dropzones and their elements which qualify for a drop\n            for (var j = 0; j < this.activeDrops.dropzones.length; j++) {\n                var current        = this.activeDrops.dropzones[j],\n                    currentElement = this.activeDrops.elements [j],\n                    rect           = this.activeDrops.rects    [j];\n\n                validDrops.push(current.dropCheck(dragEvent, event, this.target, dragElement, currentElement, rect)\n                                ? currentElement\n                                : null);\n            }\n\n            // get the most appropriate dropzone based on DOM depth and order\n            var dropIndex = indexOfDeepestElement(validDrops),\n                dropzone  = this.activeDrops.dropzones[dropIndex] || null,\n                element   = this.activeDrops.elements [dropIndex] || null;\n\n            return {\n                dropzone: dropzone,\n                element: element\n            };\n        },\n\n        getDropEvents: function (pointerEvent, dragEvent) {\n            var dropEvents = {\n                enter     : null,\n                leave     : null,\n                activate  : null,\n                deactivate: null,\n                move      : null,\n                drop      : null\n            };\n\n            if (this.dropElement !== this.prevDropElement) {\n                // if there was a prevDropTarget, create a dragleave event\n                if (this.prevDropTarget) {\n                    dropEvents.leave = {\n                        target       : this.prevDropElement,\n                        dropzone     : this.prevDropTarget,\n                        relatedTarget: dragEvent.target,\n                        draggable    : dragEvent.interactable,\n                        dragEvent    : dragEvent,\n                        interaction  : this,\n                        timeStamp    : dragEvent.timeStamp,\n                        type         : 'dragleave'\n                    };\n\n                    dragEvent.dragLeave = this.prevDropElement;\n                    dragEvent.prevDropzone = this.prevDropTarget;\n                }\n                // if the dropTarget is not null, create a dragenter event\n                if (this.dropTarget) {\n                    dropEvents.enter = {\n                        target       : this.dropElement,\n                        dropzone     : this.dropTarget,\n                        relatedTarget: dragEvent.target,\n                        draggable    : dragEvent.interactable,\n                        dragEvent    : dragEvent,\n                        interaction  : this,\n                        timeStamp    : dragEvent.timeStamp,\n                        type         : 'dragenter'\n                    };\n\n                    dragEvent.dragEnter = this.dropElement;\n                    dragEvent.dropzone = this.dropTarget;\n                }\n            }\n\n            if (dragEvent.type === 'dragend' && this.dropTarget) {\n                dropEvents.drop = {\n                    target       : this.dropElement,\n                    dropzone     : this.dropTarget,\n                    relatedTarget: dragEvent.target,\n                    draggable    : dragEvent.interactable,\n                    dragEvent    : dragEvent,\n                    interaction  : this,\n                    timeStamp    : dragEvent.timeStamp,\n                    type         : 'drop'\n                };\n\n                dragEvent.dropzone = this.dropTarget;\n            }\n            if (dragEvent.type === 'dragstart') {\n                dropEvents.activate = {\n                    target       : null,\n                    dropzone     : null,\n                    relatedTarget: dragEvent.target,\n                    draggable    : dragEvent.interactable,\n                    dragEvent    : dragEvent,\n                    interaction  : this,\n                    timeStamp    : dragEvent.timeStamp,\n                    type         : 'dropactivate'\n                };\n            }\n            if (dragEvent.type === 'dragend') {\n                dropEvents.deactivate = {\n                    target       : null,\n                    dropzone     : null,\n                    relatedTarget: dragEvent.target,\n                    draggable    : dragEvent.interactable,\n                    dragEvent    : dragEvent,\n                    interaction  : this,\n                    timeStamp    : dragEvent.timeStamp,\n                    type         : 'dropdeactivate'\n                };\n            }\n            if (dragEvent.type === 'dragmove' && this.dropTarget) {\n                dropEvents.move = {\n                    target       : this.dropElement,\n                    dropzone     : this.dropTarget,\n                    relatedTarget: dragEvent.target,\n                    draggable    : dragEvent.interactable,\n                    dragEvent    : dragEvent,\n                    interaction  : this,\n                    dragmove     : dragEvent,\n                    timeStamp    : dragEvent.timeStamp,\n                    type         : 'dropmove'\n                };\n                dragEvent.dropzone = this.dropTarget;\n            }\n\n            return dropEvents;\n        },\n\n        currentAction: function () {\n            return (this.dragging && 'drag') || (this.resizing && 'resize') || (this.gesturing && 'gesture') || null;\n        },\n\n        interacting: function () {\n            return this.dragging || this.resizing || this.gesturing;\n        },\n\n        clearTargets: function () {\n            this.target = this.element = null;\n\n            this.dropTarget = this.dropElement = this.prevDropTarget = this.prevDropElement = null;\n        },\n\n        stop: function (event) {\n            if (this.interacting()) {\n                autoScroll.stop();\n                this.matches = [];\n                this.matchElements = [];\n\n                var target = this.target;\n\n                if (target.options.styleCursor) {\n                    target._doc.documentElement.style.cursor = '';\n                }\n\n                // prevent Default only if were previously interacting\n                if (event && isFunction(event.preventDefault)) {\n                    this.checkAndPreventDefault(event, target, this.element);\n                }\n\n                if (this.dragging) {\n                    this.activeDrops.dropzones = this.activeDrops.elements = this.activeDrops.rects = null;\n                }\n            }\n\n            this.clearTargets();\n\n            this.pointerIsDown = this.snapStatus.locked = this.dragging = this.resizing = this.gesturing = false;\n            this.prepared.name = this.prevEvent = null;\n            this.inertiaStatus.resumeDx = this.inertiaStatus.resumeDy = 0;\n\n            // remove pointers if their ID isn't in this.pointerIds\n            for (var i = 0; i < this.pointers.length; i++) {\n                if (indexOf(this.pointerIds, getPointerId(this.pointers[i])) === -1) {\n                    this.pointers.splice(i, 1);\n                }\n            }\n        },\n\n        inertiaFrame: function () {\n            var inertiaStatus = this.inertiaStatus,\n                options = this.target.options[this.prepared.name].inertia,\n                lambda = options.resistance,\n                t = new Date().getTime() / 1000 - inertiaStatus.t0;\n\n            if (t < inertiaStatus.te) {\n\n                var progress =  1 - (Math.exp(-lambda * t) - inertiaStatus.lambda_v0) / inertiaStatus.one_ve_v0;\n\n                if (inertiaStatus.modifiedXe === inertiaStatus.xe && inertiaStatus.modifiedYe === inertiaStatus.ye) {\n                    inertiaStatus.sx = inertiaStatus.xe * progress;\n                    inertiaStatus.sy = inertiaStatus.ye * progress;\n                }\n                else {\n                    var quadPoint = getQuadraticCurvePoint(\n                            0, 0,\n                            inertiaStatus.xe, inertiaStatus.ye,\n                            inertiaStatus.modifiedXe, inertiaStatus.modifiedYe,\n                            progress);\n\n                    inertiaStatus.sx = quadPoint.x;\n                    inertiaStatus.sy = quadPoint.y;\n                }\n\n                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n                inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n            }\n            else {\n                inertiaStatus.ending = true;\n\n                inertiaStatus.sx = inertiaStatus.modifiedXe;\n                inertiaStatus.sy = inertiaStatus.modifiedYe;\n\n                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n                this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n                inertiaStatus.active = inertiaStatus.ending = false;\n            }\n        },\n\n        smoothEndFrame: function () {\n            var inertiaStatus = this.inertiaStatus,\n                t = new Date().getTime() - inertiaStatus.t0,\n                duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n            if (t < duration) {\n                inertiaStatus.sx = easeOutQuad(t, 0, inertiaStatus.xe, duration);\n                inertiaStatus.sy = easeOutQuad(t, 0, inertiaStatus.ye, duration);\n\n                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n                inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n            }\n            else {\n                inertiaStatus.ending = true;\n\n                inertiaStatus.sx = inertiaStatus.xe;\n                inertiaStatus.sy = inertiaStatus.ye;\n\n                this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n                this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n                inertiaStatus.smoothEnd =\n                  inertiaStatus.active = inertiaStatus.ending = false;\n            }\n        },\n\n        addPointer: function (pointer) {\n            var id = getPointerId(pointer),\n                index = this.mouse? 0 : indexOf(this.pointerIds, id);\n\n            if (index === -1) {\n                index = this.pointerIds.length;\n            }\n\n            this.pointerIds[index] = id;\n            this.pointers[index] = pointer;\n\n            return index;\n        },\n\n        removePointer: function (pointer) {\n            var id = getPointerId(pointer),\n                index = this.mouse? 0 : indexOf(this.pointerIds, id);\n\n            if (index === -1) { return; }\n\n            this.pointers   .splice(index, 1);\n            this.pointerIds .splice(index, 1);\n            this.downTargets.splice(index, 1);\n            this.downTimes  .splice(index, 1);\n            this.holdTimers .splice(index, 1);\n        },\n\n        recordPointer: function (pointer) {\n            var index = this.mouse? 0: indexOf(this.pointerIds, getPointerId(pointer));\n\n            if (index === -1) { return; }\n\n            this.pointers[index] = pointer;\n        },\n\n        collectEventTargets: function (pointer, event, eventTarget, eventType) {\n            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\n            // do not fire a tap event if the pointer was moved before being lifted\n            if (eventType === 'tap' && (this.pointerWasMoved\n                // or if the pointerup target is different to the pointerdown target\n                || !(this.downTargets[pointerIndex] && this.downTargets[pointerIndex] === eventTarget))) {\n                return;\n            }\n\n            var targets = [],\n                elements = [],\n                element = eventTarget;\n\n            function collectSelectors (interactable, selector, context) {\n                var els = ie8MatchesSelector\n                        ? context.querySelectorAll(selector)\n                        : undefined;\n\n                if (interactable._iEvents[eventType]\n                    && isElement(element)\n                    && inContext(interactable, element)\n                    && !testIgnore(interactable, element, eventTarget)\n                    && testAllow(interactable, element, eventTarget)\n                    && matchesSelector(element, selector, els)) {\n\n                    targets.push(interactable);\n                    elements.push(element);\n                }\n            }\n\n            while (element) {\n                if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n                    targets.push(interact(element));\n                    elements.push(element);\n                }\n\n                interactables.forEachSelector(collectSelectors);\n\n                element = parentElement(element);\n            }\n\n            // create the tap event even if there are no listeners so that\n            // doubletap can still be created and fired\n            if (targets.length || eventType === 'tap') {\n                this.firePointers(pointer, event, eventTarget, targets, elements, eventType);\n            }\n        },\n\n        firePointers: function (pointer, event, eventTarget, targets, elements, eventType) {\n            var pointerIndex = this.mouse? 0 : indexOf(this.pointerIds, getPointerId(pointer)),\n                pointerEvent = {},\n                i,\n                // for tap events\n                interval, createNewDoubleTap;\n\n            // if it's a doubletap then the event properties would have been\n            // copied from the tap event and provided as the pointer argument\n            if (eventType === 'doubletap') {\n                pointerEvent = pointer;\n            }\n            else {\n                pointerExtend(pointerEvent, event);\n                if (event !== pointer) {\n                    pointerExtend(pointerEvent, pointer);\n                }\n\n                pointerEvent.preventDefault           = preventOriginalDefault;\n                pointerEvent.stopPropagation          = InteractEvent.prototype.stopPropagation;\n                pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n                pointerEvent.interaction              = this;\n\n                pointerEvent.timeStamp       = new Date().getTime();\n                pointerEvent.originalEvent   = event;\n                pointerEvent.originalPointer = pointer;\n                pointerEvent.type            = eventType;\n                pointerEvent.pointerId       = getPointerId(pointer);\n                pointerEvent.pointerType     = this.mouse? 'mouse' : !supportsPointerEvent? 'touch'\n                                                    : isString(pointer.pointerType)\n                                                        ? pointer.pointerType\n                                                        : [,,'touch', 'pen', 'mouse'][pointer.pointerType];\n            }\n\n            if (eventType === 'tap') {\n                pointerEvent.dt = pointerEvent.timeStamp - this.downTimes[pointerIndex];\n\n                interval = pointerEvent.timeStamp - this.tapTime;\n                createNewDoubleTap = !!(this.prevTap && this.prevTap.type !== 'doubletap'\n                       && this.prevTap.target === pointerEvent.target\n                       && interval < 500);\n\n                pointerEvent.double = createNewDoubleTap;\n\n                this.tapTime = pointerEvent.timeStamp;\n            }\n\n            for (i = 0; i < targets.length; i++) {\n                pointerEvent.currentTarget = elements[i];\n                pointerEvent.interactable = targets[i];\n                targets[i].fire(pointerEvent);\n\n                if (pointerEvent.immediatePropagationStopped\n                    ||(pointerEvent.propagationStopped && elements[i + 1] !== pointerEvent.currentTarget)) {\n                    break;\n                }\n            }\n\n            if (createNewDoubleTap) {\n                var doubleTap = {};\n\n                extend(doubleTap, pointerEvent);\n\n                doubleTap.dt   = interval;\n                doubleTap.type = 'doubletap';\n\n                this.collectEventTargets(doubleTap, event, eventTarget, 'doubletap');\n\n                this.prevTap = doubleTap;\n            }\n            else if (eventType === 'tap') {\n                this.prevTap = pointerEvent;\n            }\n        },\n\n        validateSelector: function (pointer, event, matches, matchElements) {\n            for (var i = 0, len = matches.length; i < len; i++) {\n                var match = matches[i],\n                    matchElement = matchElements[i],\n                    action = validateAction(match.getAction(pointer, event, this, matchElement), match);\n\n                if (action && withinInteractionLimit(match, matchElement, action)) {\n                    this.target = match;\n                    this.element = matchElement;\n\n                    return action;\n                }\n            }\n        },\n\n        setSnapping: function (pageCoords, status) {\n            var snap = this.target.options[this.prepared.name].snap,\n                targets = [],\n                target,\n                page,\n                i;\n\n            status = status || this.snapStatus;\n\n            if (status.useStatusXY) {\n                page = { x: status.x, y: status.y };\n            }\n            else {\n                var origin = getOriginXY(this.target, this.element);\n\n                page = extend({}, pageCoords);\n\n                page.x -= origin.x;\n                page.y -= origin.y;\n            }\n\n            status.realX = page.x;\n            status.realY = page.y;\n\n            page.x = page.x - this.inertiaStatus.resumeDx;\n            page.y = page.y - this.inertiaStatus.resumeDy;\n\n            var len = snap.targets? snap.targets.length : 0;\n\n            for (var relIndex = 0; relIndex < this.snapOffsets.length; relIndex++) {\n                var relative = {\n                    x: page.x - this.snapOffsets[relIndex].x,\n                    y: page.y - this.snapOffsets[relIndex].y\n                };\n\n                for (i = 0; i < len; i++) {\n                    if (isFunction(snap.targets[i])) {\n                        target = snap.targets[i](relative.x, relative.y, this);\n                    }\n                    else {\n                        target = snap.targets[i];\n                    }\n\n                    if (!target) { continue; }\n\n                    targets.push({\n                        x: isNumber(target.x) ? (target.x + this.snapOffsets[relIndex].x) : relative.x,\n                        y: isNumber(target.y) ? (target.y + this.snapOffsets[relIndex].y) : relative.y,\n\n                        range: isNumber(target.range)? target.range: snap.range\n                    });\n                }\n            }\n\n            var closest = {\n                    target: null,\n                    inRange: false,\n                    distance: 0,\n                    range: 0,\n                    dx: 0,\n                    dy: 0\n                };\n\n            for (i = 0, len = targets.length; i < len; i++) {\n                target = targets[i];\n\n                var range = target.range,\n                    dx = target.x - page.x,\n                    dy = target.y - page.y,\n                    distance = hypot(dx, dy),\n                    inRange = distance <= range;\n\n                // Infinite targets count as being out of range\n                // compared to non infinite ones that are in range\n                if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n                    inRange = false;\n                }\n\n                if (!closest.target || (inRange\n                    // is the closest target in range?\n                    ? (closest.inRange && range !== Infinity\n                        // the pointer is relatively deeper in this target\n                        ? distance / range < closest.distance / closest.range\n                        // this target has Infinite range and the closest doesn't\n                        : (range === Infinity && closest.range !== Infinity)\n                            // OR this target is closer that the previous closest\n                            || distance < closest.distance)\n                    // The other is not in range and the pointer is closer to this target\n                    : (!closest.inRange && distance < closest.distance))) {\n\n                    if (range === Infinity) {\n                        inRange = true;\n                    }\n\n                    closest.target = target;\n                    closest.distance = distance;\n                    closest.range = range;\n                    closest.inRange = inRange;\n                    closest.dx = dx;\n                    closest.dy = dy;\n\n                    status.range = range;\n                }\n            }\n\n            var snapChanged;\n\n            if (closest.target) {\n                snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\n                status.snappedX = closest.target.x;\n                status.snappedY = closest.target.y;\n            }\n            else {\n                snapChanged = true;\n\n                status.snappedX = NaN;\n                status.snappedY = NaN;\n            }\n\n            status.dx = closest.dx;\n            status.dy = closest.dy;\n\n            status.changed = (snapChanged || (closest.inRange && !status.locked));\n            status.locked = closest.inRange;\n\n            return status;\n        },\n\n        setRestriction: function (pageCoords, status) {\n            var target = this.target,\n                restrict = target && target.options[this.prepared.name].restrict,\n                restriction = restrict && restrict.restriction,\n                page;\n\n            if (!restriction) {\n                return status;\n            }\n\n            status = status || this.restrictStatus;\n\n            page = status.useStatusXY\n                    ? page = { x: status.x, y: status.y }\n                    : page = extend({}, pageCoords);\n\n            if (status.snap && status.snap.locked) {\n                page.x += status.snap.dx || 0;\n                page.y += status.snap.dy || 0;\n            }\n\n            page.x -= this.inertiaStatus.resumeDx;\n            page.y -= this.inertiaStatus.resumeDy;\n\n            status.dx = 0;\n            status.dy = 0;\n            status.restricted = false;\n\n            var rect, restrictedX, restrictedY;\n\n            if (isString(restriction)) {\n                if (restriction === 'parent') {\n                    restriction = parentElement(this.element);\n                }\n                else if (restriction === 'self') {\n                    restriction = target.getRect(this.element);\n                }\n                else {\n                    restriction = closest(this.element, restriction);\n                }\n\n                if (!restriction) { return status; }\n            }\n\n            if (isFunction(restriction)) {\n                restriction = restriction(page.x, page.y, this.element);\n            }\n\n            if (isElement(restriction)) {\n                restriction = getElementRect(restriction);\n            }\n\n            rect = restriction;\n\n            if (!restriction) {\n                restrictedX = page.x;\n                restrictedY = page.y;\n            }\n            // object is assumed to have\n            // x, y, width, height or\n            // left, top, right, bottom\n            else if ('x' in restriction && 'y' in restriction) {\n                restrictedX = Math.max(Math.min(rect.x + rect.width  - this.restrictOffset.right , page.x), rect.x + this.restrictOffset.left);\n                restrictedY = Math.max(Math.min(rect.y + rect.height - this.restrictOffset.bottom, page.y), rect.y + this.restrictOffset.top );\n            }\n            else {\n                restrictedX = Math.max(Math.min(rect.right  - this.restrictOffset.right , page.x), rect.left + this.restrictOffset.left);\n                restrictedY = Math.max(Math.min(rect.bottom - this.restrictOffset.bottom, page.y), rect.top  + this.restrictOffset.top );\n            }\n\n            status.dx = restrictedX - page.x;\n            status.dy = restrictedY - page.y;\n\n            status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n            status.restricted = !!(status.dx || status.dy);\n\n            status.restrictedX = restrictedX;\n            status.restrictedY = restrictedY;\n\n            return status;\n        },\n\n        checkAndPreventDefault: function (event, interactable, element) {\n            if (!(interactable = interactable || this.target)) { return; }\n\n            var options = interactable.options,\n                prevent = options.preventDefault;\n\n            if (prevent === 'auto' && element && !/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n                // do not preventDefault on pointerdown if the prepared action is a drag\n                // and dragging can only start from a certain direction - this allows\n                // a touch to pan the viewport if a drag isn't in the right direction\n                if (/down|start/i.test(event.type)\n                    && this.prepared.name === 'drag' && options.drag.axis !== 'xy') {\n\n                    return;\n                }\n\n                // with manualStart, only preventDefault while interacting\n                if (options[this.prepared.name] && options[this.prepared.name].manualStart\n                    && !this.interacting()) {\n                    return;\n                }\n\n                event.preventDefault();\n                return;\n            }\n\n            if (prevent === 'always') {\n                event.preventDefault();\n                return;\n            }\n        },\n\n        calcInertia: function (status) {\n            var inertiaOptions = this.target.options[this.prepared.name].inertia,\n                lambda = inertiaOptions.resistance,\n                inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n            status.x0 = this.prevEvent.pageX;\n            status.y0 = this.prevEvent.pageY;\n            status.t0 = status.startEvent.timeStamp / 1000;\n            status.sx = status.sy = 0;\n\n            status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n            status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n            status.te = inertiaDur;\n\n            status.lambda_v0 = lambda / status.v0;\n            status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n        },\n\n        autoScrollMove: function (pointer) {\n            if (!(this.interacting()\n                && checkAutoScroll(this.target, this.prepared.name))) {\n                return;\n            }\n\n            if (this.inertiaStatus.active) {\n                autoScroll.x = autoScroll.y = 0;\n                return;\n            }\n\n            var top,\n                right,\n                bottom,\n                left,\n                options = this.target.options[this.prepared.name].autoScroll,\n                container = options.container || getWindow(this.element);\n\n            if (isWindow(container)) {\n                left   = pointer.clientX < autoScroll.margin;\n                top    = pointer.clientY < autoScroll.margin;\n                right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n                bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n            }\n            else {\n                var rect = getElementClientRect(container);\n\n                left   = pointer.clientX < rect.left   + autoScroll.margin;\n                top    = pointer.clientY < rect.top    + autoScroll.margin;\n                right  = pointer.clientX > rect.right  - autoScroll.margin;\n                bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n            }\n\n            autoScroll.x = (right ? 1: left? -1: 0);\n            autoScroll.y = (bottom? 1:  top? -1: 0);\n\n            if (!autoScroll.isScrolling) {\n                // set the autoScroll properties to those of the target\n                autoScroll.margin = options.margin;\n                autoScroll.speed  = options.speed;\n\n                autoScroll.start(this);\n            }\n        },\n\n        _updateEventTargets: function (target, currentTarget) {\n            this._eventTarget    = target;\n            this._curEventTarget = currentTarget;\n        }\n\n    };\n\n    function getInteractionFromPointer (pointer, eventType, eventTarget) {\n        var i = 0, len = interactions.length,\n            mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n                          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                          || pointer.pointerType === 4),\n            interaction;\n\n        var id = getPointerId(pointer);\n\n        // try to resume inertia with a new pointer\n        if (/down|start/i.test(eventType)) {\n            for (i = 0; i < len; i++) {\n                interaction = interactions[i];\n\n                var element = eventTarget;\n\n                if (interaction.inertiaStatus.active && interaction.target.options[interaction.prepared.name].inertia.allowResume\n                    && (interaction.mouse === mouseEvent)) {\n                    while (element) {\n                        // if the element is the interaction element\n                        if (element === interaction.element) {\n                            return interaction;\n                        }\n                        element = parentElement(element);\n                    }\n                }\n            }\n        }\n\n        // if it's a mouse interaction\n        if (mouseEvent || !(supportsTouch || supportsPointerEvent)) {\n\n            // find a mouse interaction that's not in inertia phase\n            for (i = 0; i < len; i++) {\n                if (interactions[i].mouse && !interactions[i].inertiaStatus.active) {\n                    return interactions[i];\n                }\n            }\n\n            // find any interaction specifically for mouse.\n            // if the eventType is a mousedown, and inertia is active\n            // ignore the interaction\n            for (i = 0; i < len; i++) {\n                if (interactions[i].mouse && !(/down/.test(eventType) && interactions[i].inertiaStatus.active)) {\n                    return interaction;\n                }\n            }\n\n            // create a new interaction for mouse\n            interaction = new Interaction();\n            interaction.mouse = true;\n\n            return interaction;\n        }\n\n        // get interaction that has this pointer\n        for (i = 0; i < len; i++) {\n            if (contains(interactions[i].pointerIds, id)) {\n                return interactions[i];\n            }\n        }\n\n        // at this stage, a pointerUp should not return an interaction\n        if (/up|end|out/i.test(eventType)) {\n            return null;\n        }\n\n        // get first idle interaction\n        for (i = 0; i < len; i++) {\n            interaction = interactions[i];\n\n            if ((!interaction.prepared.name || (interaction.target.options.gesture.enabled))\n                && !interaction.interacting()\n                && !(!mouseEvent && interaction.mouse)) {\n\n                return interaction;\n            }\n        }\n\n        return new Interaction();\n    }\n\n    function doOnInteractions (method) {\n        return (function (event) {\n            var interaction,\n                eventTarget = getActualElement(event.path\n                                               ? event.path[0]\n                                               : event.target),\n                curEventTarget = getActualElement(event.currentTarget),\n                i;\n\n            if (supportsTouch && /touch/.test(event.type)) {\n                prevTouchTime = new Date().getTime();\n\n                for (i = 0; i < event.changedTouches.length; i++) {\n                    var pointer = event.changedTouches[i];\n\n                    interaction = getInteractionFromPointer(pointer, event.type, eventTarget);\n\n                    if (!interaction) { continue; }\n\n                    interaction._updateEventTargets(eventTarget, curEventTarget);\n\n                    interaction[method](pointer, event, eventTarget, curEventTarget);\n                }\n            }\n            else {\n                if (!supportsPointerEvent && /mouse/.test(event.type)) {\n                    // ignore mouse events while touch interactions are active\n                    for (i = 0; i < interactions.length; i++) {\n                        if (!interactions[i].mouse && interactions[i].pointerIsDown) {\n                            return;\n                        }\n                    }\n\n                    // try to ignore mouse events that are simulated by the browser\n                    // after a touch event\n                    if (new Date().getTime() - prevTouchTime < 500) {\n                        return;\n                    }\n                }\n\n                interaction = getInteractionFromPointer(event, event.type, eventTarget);\n\n                if (!interaction) { return; }\n\n                interaction._updateEventTargets(eventTarget, curEventTarget);\n\n                interaction[method](event, event, eventTarget, curEventTarget);\n            }\n        });\n    }\n\n    function InteractEvent (interaction, event, action, phase, element, related) {\n        var client,\n            page,\n            target      = interaction.target,\n            snapStatus  = interaction.snapStatus,\n            restrictStatus  = interaction.restrictStatus,\n            pointers    = interaction.pointers,\n            deltaSource = (target && target.options || defaultOptions).deltaSource,\n            sourceX     = deltaSource + 'X',\n            sourceY     = deltaSource + 'Y',\n            options     = target? target.options: defaultOptions,\n            origin      = getOriginXY(target, element),\n            starting    = phase === 'start',\n            ending      = phase === 'end',\n            coords      = starting? interaction.startCoords : interaction.curCoords;\n\n        element = element || interaction.element;\n\n        page   = extend({}, coords.page);\n        client = extend({}, coords.client);\n\n        page.x -= origin.x;\n        page.y -= origin.y;\n\n        client.x -= origin.x;\n        client.y -= origin.y;\n\n        var relativePoints = options[action].snap && options[action].snap.relativePoints ;\n\n        if (checkSnap(target, action) && !(starting && relativePoints && relativePoints.length)) {\n            this.snap = {\n                range  : snapStatus.range,\n                locked : snapStatus.locked,\n                x      : snapStatus.snappedX,\n                y      : snapStatus.snappedY,\n                realX  : snapStatus.realX,\n                realY  : snapStatus.realY,\n                dx     : snapStatus.dx,\n                dy     : snapStatus.dy\n            };\n\n            if (snapStatus.locked) {\n                page.x += snapStatus.dx;\n                page.y += snapStatus.dy;\n                client.x += snapStatus.dx;\n                client.y += snapStatus.dy;\n            }\n        }\n\n        if (checkRestrict(target, action) && !(starting && options[action].restrict.elementRect) && restrictStatus.restricted) {\n            page.x += restrictStatus.dx;\n            page.y += restrictStatus.dy;\n            client.x += restrictStatus.dx;\n            client.y += restrictStatus.dy;\n\n            this.restrict = {\n                dx: restrictStatus.dx,\n                dy: restrictStatus.dy\n            };\n        }\n\n        this.pageX     = page.x;\n        this.pageY     = page.y;\n        this.clientX   = client.x;\n        this.clientY   = client.y;\n\n        this.x0        = interaction.startCoords.page.x - origin.x;\n        this.y0        = interaction.startCoords.page.y - origin.y;\n        this.clientX0  = interaction.startCoords.client.x - origin.x;\n        this.clientY0  = interaction.startCoords.client.y - origin.y;\n        this.ctrlKey   = event.ctrlKey;\n        this.altKey    = event.altKey;\n        this.shiftKey  = event.shiftKey;\n        this.metaKey   = event.metaKey;\n        this.button    = event.button;\n        this.buttons   = event.buttons;\n        this.target    = element;\n        this.t0        = interaction.downTimes[0];\n        this.type      = action + (phase || '');\n\n        this.interaction = interaction;\n        this.interactable = target;\n\n        var inertiaStatus = interaction.inertiaStatus;\n\n        if (inertiaStatus.active) {\n            this.detail = 'inertia';\n        }\n\n        if (related) {\n            this.relatedTarget = related;\n        }\n\n        // end event dx, dy is difference between start and end points\n        if (ending) {\n            if (deltaSource === 'client') {\n                this.dx = client.x - interaction.startCoords.client.x;\n                this.dy = client.y - interaction.startCoords.client.y;\n            }\n            else {\n                this.dx = page.x - interaction.startCoords.page.x;\n                this.dy = page.y - interaction.startCoords.page.y;\n            }\n        }\n        else if (starting) {\n            this.dx = 0;\n            this.dy = 0;\n        }\n        // copy properties from previousmove if starting inertia\n        else if (phase === 'inertiastart') {\n            this.dx = interaction.prevEvent.dx;\n            this.dy = interaction.prevEvent.dy;\n        }\n        else {\n            if (deltaSource === 'client') {\n                this.dx = client.x - interaction.prevEvent.clientX;\n                this.dy = client.y - interaction.prevEvent.clientY;\n            }\n            else {\n                this.dx = page.x - interaction.prevEvent.pageX;\n                this.dy = page.y - interaction.prevEvent.pageY;\n            }\n        }\n        if (interaction.prevEvent && interaction.prevEvent.detail === 'inertia'\n            && !inertiaStatus.active\n            && options[action].inertia && options[action].inertia.zeroResumeDelta) {\n\n            inertiaStatus.resumeDx += this.dx;\n            inertiaStatus.resumeDy += this.dy;\n\n            this.dx = this.dy = 0;\n        }\n\n        if (action === 'resize' && interaction.resizeAxes) {\n            if (options.resize.square) {\n                if (interaction.resizeAxes === 'y') {\n                    this.dx = this.dy;\n                }\n                else {\n                    this.dy = this.dx;\n                }\n                this.axes = 'xy';\n            }\n            else {\n                this.axes = interaction.resizeAxes;\n\n                if (interaction.resizeAxes === 'x') {\n                    this.dy = 0;\n                }\n                else if (interaction.resizeAxes === 'y') {\n                    this.dx = 0;\n                }\n            }\n        }\n        else if (action === 'gesture') {\n            this.touches = [pointers[0], pointers[1]];\n\n            if (starting) {\n                this.distance = touchDistance(pointers, deltaSource);\n                this.box      = touchBBox(pointers);\n                this.scale    = 1;\n                this.ds       = 0;\n                this.angle    = touchAngle(pointers, undefined, deltaSource);\n                this.da       = 0;\n            }\n            else if (ending || event instanceof InteractEvent) {\n                this.distance = interaction.prevEvent.distance;\n                this.box      = interaction.prevEvent.box;\n                this.scale    = interaction.prevEvent.scale;\n                this.ds       = this.scale - 1;\n                this.angle    = interaction.prevEvent.angle;\n                this.da       = this.angle - interaction.gesture.startAngle;\n            }\n            else {\n                this.distance = touchDistance(pointers, deltaSource);\n                this.box      = touchBBox(pointers);\n                this.scale    = this.distance / interaction.gesture.startDistance;\n                this.angle    = touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n                this.ds = this.scale - interaction.gesture.prevScale;\n                this.da = this.angle - interaction.gesture.prevAngle;\n            }\n        }\n\n        if (starting) {\n            this.timeStamp = interaction.downTimes[0];\n            this.dt        = 0;\n            this.duration  = 0;\n            this.speed     = 0;\n            this.velocityX = 0;\n            this.velocityY = 0;\n        }\n        else if (phase === 'inertiastart') {\n            this.timeStamp = interaction.prevEvent.timeStamp;\n            this.dt        = interaction.prevEvent.dt;\n            this.duration  = interaction.prevEvent.duration;\n            this.speed     = interaction.prevEvent.speed;\n            this.velocityX = interaction.prevEvent.velocityX;\n            this.velocityY = interaction.prevEvent.velocityY;\n        }\n        else {\n            this.timeStamp = new Date().getTime();\n            this.dt        = this.timeStamp - interaction.prevEvent.timeStamp;\n            this.duration  = this.timeStamp - interaction.downTimes[0];\n\n            if (event instanceof InteractEvent) {\n                var dx = this[sourceX] - interaction.prevEvent[sourceX],\n                    dy = this[sourceY] - interaction.prevEvent[sourceY],\n                    dt = this.dt / 1000;\n\n                this.speed = hypot(dx, dy) / dt;\n                this.velocityX = dx / dt;\n                this.velocityY = dy / dt;\n            }\n            // if normal move or end event, use previous user event coords\n            else {\n                // speed and velocity in pixels per second\n                this.speed = interaction.pointerDelta[deltaSource].speed;\n                this.velocityX = interaction.pointerDelta[deltaSource].vx;\n                this.velocityY = interaction.pointerDelta[deltaSource].vy;\n            }\n        }\n\n        if ((ending || phase === 'inertiastart')\n            && interaction.prevEvent.speed > 600 && this.timeStamp - interaction.prevEvent.timeStamp < 150) {\n\n            var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI,\n                overlap = 22.5;\n\n            if (angle < 0) {\n                angle += 360;\n            }\n\n            var left = 135 - overlap <= angle && angle < 225 + overlap,\n                up   = 225 - overlap <= angle && angle < 315 + overlap,\n\n                right = !left && (315 - overlap <= angle || angle <  45 + overlap),\n                down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n            this.swipe = {\n                up   : up,\n                down : down,\n                left : left,\n                right: right,\n                angle: angle,\n                speed: interaction.prevEvent.speed,\n                velocity: {\n                    x: interaction.prevEvent.velocityX,\n                    y: interaction.prevEvent.velocityY\n                }\n            };\n        }\n    }\n\n    InteractEvent.prototype = {\n        preventDefault: blank,\n        stopImmediatePropagation: function () {\n            this.immediatePropagationStopped = this.propagationStopped = true;\n        },\n        stopPropagation: function () {\n            this.propagationStopped = true;\n        }\n    };\n\n    function preventOriginalDefault () {\n        this.originalEvent.preventDefault();\n    }\n\n    function getActionCursor (action) {\n        var cursor = '';\n\n        if (action.name === 'drag') {\n            cursor =  actionCursors.drag;\n        }\n        if (action.name === 'resize') {\n            if (action.axis) {\n                cursor =  actionCursors[action.name + action.axis];\n            }\n            else if (action.edges) {\n                var cursorKey = 'resize',\n                    edgeNames = ['top', 'bottom', 'left', 'right'];\n\n                for (var i = 0; i < 4; i++) {\n                    if (action.edges[edgeNames[i]]) {\n                        cursorKey += edgeNames[i];\n                    }\n                }\n\n                cursor = actionCursors[cursorKey];\n            }\n        }\n\n        return cursor;\n    }\n\n    function checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n        // false, '', undefined, null\n        if (!value) { return false; }\n\n        // true value, use pointer coords and element rect\n        if (value === true) {\n            // if dimensions are negative, \"switch\" edges\n            var width = isNumber(rect.width)? rect.width : rect.right - rect.left,\n                height = isNumber(rect.height)? rect.height : rect.bottom - rect.top;\n\n            if (width < 0) {\n                if      (name === 'left' ) { name = 'right'; }\n                else if (name === 'right') { name = 'left' ; }\n            }\n            if (height < 0) {\n                if      (name === 'top'   ) { name = 'bottom'; }\n                else if (name === 'bottom') { name = 'top'   ; }\n            }\n\n            if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n            if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n            if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n            if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n        }\n\n        // the remaining checks require an element\n        if (!isElement(element)) { return false; }\n\n        return isElement(value)\n                    // the value is an element to use as a resize handle\n                    ? value === element\n                    // otherwise check if element matches value as selector\n                    : matchesUpTo(element, value, interactableElement);\n    }\n\n    function defaultActionChecker (pointer, interaction, element) {\n        var rect = this.getRect(element),\n            shouldResize = false,\n            action = null,\n            resizeAxes = null,\n            resizeEdges,\n            page = extend({}, interaction.curCoords.page),\n            options = this.options;\n\n        if (!rect) { return null; }\n\n        if (actionIsEnabled.resize && options.resize.enabled) {\n            var resizeOptions = options.resize;\n\n            resizeEdges = {\n                left: false, right: false, top: false, bottom: false\n            };\n\n            // if using resize.edges\n            if (isObject(resizeOptions.edges)) {\n                for (var edge in resizeEdges) {\n                    resizeEdges[edge] = checkResizeEdge(edge,\n                                                        resizeOptions.edges[edge],\n                                                        page,\n                                                        interaction._eventTarget,\n                                                        element,\n                                                        rect,\n                                                        resizeOptions.margin || margin);\n                }\n\n                resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n                resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n                shouldResize = resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom;\n            }\n            else {\n                var right  = options.resize.axis !== 'y' && page.x > (rect.right  - margin),\n                    bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - margin);\n\n                shouldResize = right || bottom;\n                resizeAxes = (right? 'x' : '') + (bottom? 'y' : '');\n            }\n        }\n\n        action = shouldResize\n            ? 'resize'\n            : actionIsEnabled.drag && options.drag.enabled\n                ? 'drag'\n                : null;\n\n        if (actionIsEnabled.gesture\n            && interaction.pointerIds.length >=2\n            && !(interaction.dragging || interaction.resizing)) {\n            action = 'gesture';\n        }\n\n        if (action) {\n            return {\n                name: action,\n                axis: resizeAxes,\n                edges: resizeEdges\n            };\n        }\n\n        return null;\n    }\n\n    // Check if action is enabled globally and the current target supports it\n    // If so, return the validated action. Otherwise, return null\n    function validateAction (action, interactable) {\n        if (!isObject(action)) { return null; }\n\n        var actionName = action.name,\n            options = interactable.options;\n\n        if ((  (actionName  === 'resize'   && options.resize.enabled )\n            || (actionName      === 'drag'     && options.drag.enabled  )\n            || (actionName      === 'gesture'  && options.gesture.enabled))\n            && actionIsEnabled[actionName]) {\n\n            if (actionName === 'resize' || actionName === 'resizeyx') {\n                actionName = 'resizexy';\n            }\n\n            return action;\n        }\n        return null;\n    }\n\n    var listeners = {},\n        interactionListeners = [\n            'dragStart', 'dragMove', 'resizeStart', 'resizeMove', 'gestureStart', 'gestureMove',\n            'pointerOver', 'pointerOut', 'pointerHover', 'selectorDown',\n            'pointerDown', 'pointerMove', 'pointerUp', 'pointerCancel', 'pointerEnd',\n            'addPointer', 'removePointer', 'recordPointer', 'autoScrollMove'\n        ];\n\n    for (var i = 0, len = interactionListeners.length; i < len; i++) {\n        var name = interactionListeners[i];\n\n        listeners[name] = doOnInteractions(name);\n    }\n\n    // bound to the interactable context when a DOM event\n    // listener is added to a selector interactable\n    function delegateListener (event, useCapture) {\n        var fakeEvent = {},\n            delegated = delegatedEvents[event.type],\n            eventTarget = getActualElement(event.path\n                                           ? event.path[0]\n                                           : event.target),\n            element = eventTarget;\n\n        useCapture = useCapture? true: false;\n\n        // duplicate the event so that currentTarget can be changed\n        for (var prop in event) {\n            fakeEvent[prop] = event[prop];\n        }\n\n        fakeEvent.originalEvent = event;\n        fakeEvent.preventDefault = preventOriginalDefault;\n\n        // climb up document tree looking for selector matches\n        while (isElement(element)) {\n            for (var i = 0; i < delegated.selectors.length; i++) {\n                var selector = delegated.selectors[i],\n                    context = delegated.contexts[i];\n\n                if (matchesSelector(element, selector)\n                    && nodeContains(context, eventTarget)\n                    && nodeContains(context, element)) {\n\n                    var listeners = delegated.listeners[i];\n\n                    fakeEvent.currentTarget = element;\n\n                    for (var j = 0; j < listeners.length; j++) {\n                        if (listeners[j][1] === useCapture) {\n                            listeners[j][0](fakeEvent);\n                        }\n                    }\n                }\n            }\n\n            element = parentElement(element);\n        }\n    }\n\n    function delegateUseCapture (event) {\n        return delegateListener.call(this, event, true);\n    }\n\n    interactables.indexOfElement = function indexOfElement (element, context) {\n        context = context || document;\n\n        for (var i = 0; i < this.length; i++) {\n            var interactable = this[i];\n\n            if ((interactable.selector === element\n                && (interactable._context === context))\n                || (!interactable.selector && interactable._element === element)) {\n\n                return i;\n            }\n        }\n        return -1;\n    };\n\n    interactables.get = function interactableGet (element, options) {\n        return this[this.indexOfElement(element, options && options.context)];\n    };\n\n    interactables.forEachSelector = function (callback) {\n        for (var i = 0; i < this.length; i++) {\n            var interactable = this[i];\n\n            if (!interactable.selector) {\n                continue;\n            }\n\n            var ret = callback(interactable, interactable.selector, interactable._context, i, this);\n\n            if (ret !== undefined) {\n                return ret;\n            }\n        }\n    };\n\n    /*\\\n     * interact\n     [ method ]\n     *\n     * The methods of this variable can be used to set elements as\n     * interactables and also to change various default settings.\n     *\n     * Calling it as a function and passing an element or a valid CSS selector\n     * string returns an Interactable object which has various methods to\n     * configure it.\n     *\n     - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n     = (object) An @Interactable\n     *\n     > Usage\n     | interact(document.getElementById('draggable')).draggable(true);\n     |\n     | var rectables = interact('rect');\n     | rectables\n     |     .gesturable(true)\n     |     .on('gesturemove', function (event) {\n     |         // something cool...\n     |     })\n     |     .autoScroll(true);\n    \\*/\n    function interact (element, options) {\n        return interactables.get(element, options) || new Interactable(element, options);\n    }\n\n    /*\\\n     * Interactable\n     [ property ]\n     **\n     * Object type returned by @interact\n    \\*/\n    function Interactable (element, options) {\n        this._element = element;\n        this._iEvents = this._iEvents || {};\n\n        var _window;\n\n        if (trySelector(element)) {\n            this.selector = element;\n\n            var context = options && options.context;\n\n            _window = context? getWindow(context) : window;\n\n            if (context && (_window.Node\n                    ? context instanceof _window.Node\n                    : (isElement(context) || context === _window.document))) {\n\n                this._context = context;\n            }\n        }\n        else {\n            _window = getWindow(element);\n\n            if (isElement(element, _window)) {\n\n                if (supportsPointerEvent) {\n                    events.add(this._element, pEventTypes.down, listeners.pointerDown );\n                    events.add(this._element, pEventTypes.move, listeners.pointerHover);\n                }\n                else {\n                    events.add(this._element, 'mousedown' , listeners.pointerDown );\n                    events.add(this._element, 'mousemove' , listeners.pointerHover);\n                    events.add(this._element, 'touchstart', listeners.pointerDown );\n                    events.add(this._element, 'touchmove' , listeners.pointerHover);\n                }\n            }\n        }\n\n        this._doc = _window.document;\n\n        if (!contains(documents, this._doc)) {\n            listenToDocument(this._doc);\n        }\n\n        interactables.push(this);\n\n        this.set(options);\n    }\n\n    Interactable.prototype = {\n        setOnEvents: function (action, phases) {\n            if (action === 'drop') {\n                if (isFunction(phases.ondrop)          ) { this.ondrop           = phases.ondrop          ; }\n                if (isFunction(phases.ondropactivate)  ) { this.ondropactivate   = phases.ondropactivate  ; }\n                if (isFunction(phases.ondropdeactivate)) { this.ondropdeactivate = phases.ondropdeactivate; }\n                if (isFunction(phases.ondragenter)     ) { this.ondragenter      = phases.ondragenter     ; }\n                if (isFunction(phases.ondragleave)     ) { this.ondragleave      = phases.ondragleave     ; }\n                if (isFunction(phases.ondropmove)      ) { this.ondropmove       = phases.ondropmove      ; }\n            }\n            else {\n                action = 'on' + action;\n\n                if (isFunction(phases.onstart)       ) { this[action + 'start'         ] = phases.onstart         ; }\n                if (isFunction(phases.onmove)        ) { this[action + 'move'          ] = phases.onmove          ; }\n                if (isFunction(phases.onend)         ) { this[action + 'end'           ] = phases.onend           ; }\n                if (isFunction(phases.oninertiastart)) { this[action + 'inertiastart'  ] = phases.oninertiastart  ; }\n            }\n\n            return this;\n        },\n\n        /*\\\n         * Interactable.draggable\n         [ method ]\n         *\n         * Gets or sets whether drag actions can be performed on the\n         * Interactable\n         *\n         = (boolean) Indicates if this can be the target of drag events\n         | var isDraggable = interact('ul li').draggable();\n         * or\n         - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n         = (object) This Interactable\n         | interact(element).draggable({\n         |     onstart: function (event) {},\n         |     onmove : function (event) {},\n         |     onend  : function (event) {},\n         |\n         |     // the axis in which the first movement must be\n         |     // for the drag sequence to start\n         |     // 'xy' by default - any direction\n         |     axis: 'x' || 'y' || 'xy',\n         |\n         |     // max number of drags that can happen concurrently\n         |     // with elements of this Interactable. Infinity by default\n         |     max: Infinity,\n         |\n         |     // max number of drags that can target the same element+Interactable\n         |     // 1 by default\n         |     maxPerElement: 2\n         | });\n        \\*/\n        draggable: function (options) {\n            if (isObject(options)) {\n                this.options.drag.enabled = options.enabled === false? false: true;\n                this.setPerAction('drag', options);\n                this.setOnEvents('drag', options);\n\n                if (/^x$|^y$|^xy$/.test(options.axis)) {\n                    this.options.drag.axis = options.axis;\n                }\n                else if (options.axis === null) {\n                    delete this.options.drag.axis;\n                }\n\n                return this;\n            }\n\n            if (isBool(options)) {\n                this.options.drag.enabled = options;\n\n                return this;\n            }\n\n            return this.options.drag;\n        },\n\n        setPerAction: function (action, options) {\n            // for all the default per-action options\n            for (var option in options) {\n                // if this option exists for this action\n                if (option in defaultOptions[action]) {\n                    // if the option in the options arg is an object value\n                    if (isObject(options[option])) {\n                        // duplicate the object\n                        this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n                        if (isObject(defaultOptions.perAction[option]) && 'enabled' in defaultOptions.perAction[option]) {\n                            this.options[action][option].enabled = options[option].enabled === false? false : true;\n                        }\n                    }\n                    else if (isBool(options[option]) && isObject(defaultOptions.perAction[option])) {\n                        this.options[action][option].enabled = options[option];\n                    }\n                    else if (options[option] !== undefined) {\n                        // or if it's not undefined, do a plain assignment\n                        this.options[action][option] = options[option];\n                    }\n                }\n            }\n        },\n\n        /*\\\n         * Interactable.dropzone\n         [ method ]\n         *\n         * Returns or sets whether elements can be dropped onto this\n         * Interactable to trigger drop events\n         *\n         * Dropzones can receive the following events:\n         *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n         *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n         *  - `dragmove` when a draggable that has entered the dropzone is moved\n         *  - `drop` when a draggable is dropped into this dropzone\n         *\n         *  Use the `accept` option to allow only elements that match the given CSS selector or element.\n         *\n         *  Use the `overlap` option to set how drops are checked for. The allowed values are:\n         *   - `'pointer'`, the pointer must be over the dropzone (default)\n         *   - `'center'`, the draggable element's center must be over the dropzone\n         *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n         *       e.g. `0.5` for drop to happen when half of the area of the\n         *       draggable is over the dropzone\n         *\n         - options (boolean | object | null) #optional The new value to be set.\n         | interact('.drop').dropzone({\n         |   accept: '.can-drop' || document.getElementById('single-drop'),\n         |   overlap: 'pointer' || 'center' || zeroToOne\n         | }\n         = (boolean | object) The current setting or this Interactable\n        \\*/\n        dropzone: function (options) {\n            if (isObject(options)) {\n                this.options.drop.enabled = options.enabled === false? false: true;\n                this.setOnEvents('drop', options);\n\n                if (/^(pointer|center)$/.test(options.overlap)) {\n                    this.options.drop.overlap = options.overlap;\n                }\n                else if (isNumber(options.overlap)) {\n                    this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n                }\n                if ('accept' in options) {\n                  this.options.drop.accept = options.accept;\n                }\n                if ('checker' in options) {\n                  this.options.drop.checker = options.checker;\n                }\n\n                return this;\n            }\n\n            if (isBool(options)) {\n                this.options.drop.enabled = options;\n\n                return this;\n            }\n\n            return this.options.drop;\n        },\n\n        dropCheck: function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n            var dropped = false;\n\n            // if the dropzone has no rect (eg. display: none)\n            // call the custom dropChecker or just return false\n            if (!(rect = rect || this.getRect(dropElement))) {\n                return (this.options.drop.checker\n                    ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n                    : false);\n            }\n\n            var dropOverlap = this.options.drop.overlap;\n\n            if (dropOverlap === 'pointer') {\n                var page = getPageXY(dragEvent),\n                    origin = getOriginXY(draggable, draggableElement),\n                    horizontal,\n                    vertical;\n\n                page.x += origin.x;\n                page.y += origin.y;\n\n                horizontal = (page.x > rect.left) && (page.x < rect.right);\n                vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n                dropped = horizontal && vertical;\n            }\n\n            var dragRect = draggable.getRect(draggableElement);\n\n            if (dropOverlap === 'center') {\n                var cx = dragRect.left + dragRect.width  / 2,\n                    cy = dragRect.top  + dragRect.height / 2;\n\n                dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n            }\n\n            if (isNumber(dropOverlap)) {\n                var overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                                  * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top ))),\n                    overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n                dropped = overlapRatio >= dropOverlap;\n            }\n\n            if (this.options.drop.checker) {\n                dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n            }\n\n            return dropped;\n        },\n\n        /*\\\n         * Interactable.dropChecker\n         [ method ]\n         *\n         * DEPRECATED. Use interactable.dropzone({ checker: function... }) instead.\n         *\n         * Gets or sets the function used to check if a dragged element is\n         * over this Interactable.\n         *\n         - checker (function) #optional The function that will be called when checking for a drop\n         = (Function | Interactable) The checker function or this Interactable\n         *\n         * The checker function takes the following arguments:\n         *\n         - dragEvent (InteractEvent) The related dragmove or dragend event\n         - event (TouchEvent | PointerEvent | MouseEvent) The user move/up/end Event related to the dragEvent\n         - dropped (boolean) The value from the default drop checker\n         - dropzone (Interactable) The dropzone interactable\n         - dropElement (Element) The dropzone element\n         - draggable (Interactable) The Interactable being dragged\n         - draggableElement (Element) The actual element that's being dragged\n         *\n         > Usage:\n         | interact(target)\n         | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n         |                       event,             // TouchEvent/PointerEvent/MouseEvent\n         |                       dropped,           // bool result of the default checker\n         |                       dropzone,          // dropzone Interactable\n         |                       dropElement,       // dropzone elemnt\n         |                       draggable,         // draggable Interactable\n         |                       draggableElement) {// draggable element\n         |\n         |   return dropped && event.target.hasAttribute('allow-drop');\n         | }\n        \\*/\n        dropChecker: function (checker) {\n            if (isFunction(checker)) {\n                this.options.drop.checker = checker;\n\n                return this;\n            }\n            if (checker === null) {\n                delete this.options.getRect;\n\n                return this;\n            }\n\n            return this.options.drop.checker;\n        },\n\n        /*\\\n         * Interactable.accept\n         [ method ]\n         *\n         * Deprecated. add an `accept` property to the options object passed to\n         * @Interactable.dropzone instead.\n         *\n         * Gets or sets the Element or CSS selector match that this\n         * Interactable accepts if it is a dropzone.\n         *\n         - newValue (Element | string | null) #optional\n         * If it is an Element, then only that element can be dropped into this dropzone.\n         * If it is a string, the element being dragged must match it as a selector.\n         * If it is null, the accept options is cleared - it accepts any element.\n         *\n         = (string | Element | null | Interactable) The current accept option if given `undefined` or this Interactable\n        \\*/\n        accept: function (newValue) {\n            if (isElement(newValue)) {\n                this.options.drop.accept = newValue;\n\n                return this;\n            }\n\n            // test if it is a valid CSS selector\n            if (trySelector(newValue)) {\n                this.options.drop.accept = newValue;\n\n                return this;\n            }\n\n            if (newValue === null) {\n                delete this.options.drop.accept;\n\n                return this;\n            }\n\n            return this.options.drop.accept;\n        },\n\n        /*\\\n         * Interactable.resizable\n         [ method ]\n         *\n         * Gets or sets whether resize actions can be performed on the\n         * Interactable\n         *\n         = (boolean) Indicates if this can be the target of resize elements\n         | var isResizeable = interact('input[type=text]').resizable();\n         * or\n         - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n         = (object) This Interactable\n         | interact(element).resizable({\n         |     onstart: function (event) {},\n         |     onmove : function (event) {},\n         |     onend  : function (event) {},\n         |\n         |     edges: {\n         |       top   : true,       // Use pointer coords to check for resize.\n         |       left  : false,      // Disable resizing from left edge.\n         |       bottom: '.resize-s',// Resize if pointer target matches selector\n         |       right : handleEl    // Resize if pointer target is the given Element\n         |     },\n         |\n         |     // Width and height can be adjusted independently. When `true`, width and\n         |     // height are adjusted at a 1:1 ratio.\n         |     square: false,\n         |\n         |     // Width and height can be adjusted independently. When `true`, width and\n         |     // height maintain the aspect ratio they had when resizing started.\n         |     preserveAspectRatio: false,\n         |\n         |     // a value of 'none' will limit the resize rect to a minimum of 0x0\n         |     // 'negate' will allow the rect to have negative width/height\n         |     // 'reposition' will keep the width/height positive by swapping\n         |     // the top and bottom edges and/or swapping the left and right edges\n         |     invert: 'none' || 'negate' || 'reposition'\n         |\n         |     // limit multiple resizes.\n         |     // See the explanation in the @Interactable.draggable example\n         |     max: Infinity,\n         |     maxPerElement: 1,\n         | });\n        \\*/\n        resizable: function (options) {\n            if (isObject(options)) {\n                this.options.resize.enabled = options.enabled === false? false: true;\n                this.setPerAction('resize', options);\n                this.setOnEvents('resize', options);\n\n                if (/^x$|^y$|^xy$/.test(options.axis)) {\n                    this.options.resize.axis = options.axis;\n                }\n                else if (options.axis === null) {\n                    this.options.resize.axis = defaultOptions.resize.axis;\n                }\n\n                if (isBool(options.preserveAspectRatio)) {\n                    this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n                }\n                else if (isBool(options.square)) {\n                    this.options.resize.square = options.square;\n                }\n\n                return this;\n            }\n            if (isBool(options)) {\n                this.options.resize.enabled = options;\n\n                return this;\n            }\n            return this.options.resize;\n        },\n\n        /*\\\n         * Interactable.squareResize\n         [ method ]\n         *\n         * Deprecated. Add a `square: true || false` property to @Interactable.resizable instead\n         *\n         * Gets or sets whether resizing is forced 1:1 aspect\n         *\n         = (boolean) Current setting\n         *\n         * or\n         *\n         - newValue (boolean) #optional\n         = (object) this Interactable\n        \\*/\n        squareResize: function (newValue) {\n            if (isBool(newValue)) {\n                this.options.resize.square = newValue;\n\n                return this;\n            }\n\n            if (newValue === null) {\n                delete this.options.resize.square;\n\n                return this;\n            }\n\n            return this.options.resize.square;\n        },\n\n        /*\\\n         * Interactable.gesturable\n         [ method ]\n         *\n         * Gets or sets whether multitouch gestures can be performed on the\n         * Interactable's element\n         *\n         = (boolean) Indicates if this can be the target of gesture events\n         | var isGestureable = interact(element).gesturable();\n         * or\n         - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n         = (object) this Interactable\n         | interact(element).gesturable({\n         |     onstart: function (event) {},\n         |     onmove : function (event) {},\n         |     onend  : function (event) {},\n         |\n         |     // limit multiple gestures.\n         |     // See the explanation in @Interactable.draggable example\n         |     max: Infinity,\n         |     maxPerElement: 1,\n         | });\n        \\*/\n        gesturable: function (options) {\n            if (isObject(options)) {\n                this.options.gesture.enabled = options.enabled === false? false: true;\n                this.setPerAction('gesture', options);\n                this.setOnEvents('gesture', options);\n\n                return this;\n            }\n\n            if (isBool(options)) {\n                this.options.gesture.enabled = options;\n\n                return this;\n            }\n\n            return this.options.gesture;\n        },\n\n        /*\\\n         * Interactable.autoScroll\n         [ method ]\n         **\n         * Deprecated. Add an `autoscroll` property to the options object\n         * passed to @Interactable.draggable or @Interactable.resizable instead.\n         *\n         * Returns or sets whether dragging and resizing near the edges of the\n         * window/container trigger autoScroll for this Interactable\n         *\n         = (object) Object with autoScroll properties\n         *\n         * or\n         *\n         - options (object | boolean) #optional\n         * options can be:\n         * - an object with margin, distance and interval properties,\n         * - true or false to enable or disable autoScroll or\n         = (Interactable) this Interactable\n        \\*/\n        autoScroll: function (options) {\n            if (isObject(options)) {\n                options = extend({ actions: ['drag', 'resize']}, options);\n            }\n            else if (isBool(options)) {\n                options = { actions: ['drag', 'resize'], enabled: options };\n            }\n\n            return this.setOptions('autoScroll', options);\n        },\n\n        /*\\\n         * Interactable.snap\n         [ method ]\n         **\n         * Deprecated. Add a `snap` property to the options object passed\n         * to @Interactable.draggable or @Interactable.resizable instead.\n         *\n         * Returns or sets if and how action coordinates are snapped. By\n         * default, snapping is relative to the pointer coordinates. You can\n         * change this by setting the\n         * [`elementOrigin`](https://github.com/taye/interact.js/pull/72).\n         **\n         = (boolean | object) `false` if snap is disabled; object with snap properties if snap is enabled\n         **\n         * or\n         **\n         - options (object | boolean | null) #optional\n         = (Interactable) this Interactable\n         > Usage\n         | interact(document.querySelector('#thing')).snap({\n         |     targets: [\n         |         // snap to this specific point\n         |         {\n         |             x: 100,\n         |             y: 100,\n         |             range: 25\n         |         },\n         |         // give this function the x and y page coords and snap to the object returned\n         |         function (x, y) {\n         |             return {\n         |                 x: x,\n         |                 y: (75 + 50 * Math.sin(x * 0.04)),\n         |                 range: 40\n         |             };\n         |         },\n         |         // create a function that snaps to a grid\n         |         interact.createSnapGrid({\n         |             x: 50,\n         |             y: 50,\n         |             range: 10,              // optional\n         |             offset: { x: 5, y: 10 } // optional\n         |         })\n         |     ],\n         |     // do not snap during normal movement.\n         |     // Instead, trigger only one snapped move event\n         |     // immediately before the end event.\n         |     endOnly: true,\n         |\n         |     relativePoints: [\n         |         { x: 0, y: 0 },  // snap relative to the top left of the element\n         |         { x: 1, y: 1 },  // and also to the bottom right\n         |     ],  \n         |\n         |     // offset the snap target coordinates\n         |     // can be an object with x/y or 'startCoords'\n         |     offset: { x: 50, y: 50 }\n         |   }\n         | });\n        \\*/\n        snap: function (options) {\n            var ret = this.setOptions('snap', options);\n\n            if (ret === this) { return this; }\n\n            return ret.drag;\n        },\n\n        setOptions: function (option, options) {\n            var actions = options && isArray(options.actions)\n                    ? options.actions\n                    : ['drag'];\n\n            var i;\n\n            if (isObject(options) || isBool(options)) {\n                for (i = 0; i < actions.length; i++) {\n                    var action = /resize/.test(actions[i])? 'resize' : actions[i];\n\n                    if (!isObject(this.options[action])) { continue; }\n\n                    var thisOption = this.options[action][option];\n\n                    if (isObject(options)) {\n                        extend(thisOption, options);\n                        thisOption.enabled = options.enabled === false? false: true;\n\n                        if (option === 'snap') {\n                            if (thisOption.mode === 'grid') {\n                                thisOption.targets = [\n                                    interact.createSnapGrid(extend({\n                                        offset: thisOption.gridOffset || { x: 0, y: 0 }\n                                    }, thisOption.grid || {}))\n                                ];\n                            }\n                            else if (thisOption.mode === 'anchor') {\n                                thisOption.targets = thisOption.anchors;\n                            }\n                            else if (thisOption.mode === 'path') {\n                                thisOption.targets = thisOption.paths;\n                            }\n\n                            if ('elementOrigin' in options) {\n                                thisOption.relativePoints = [options.elementOrigin];\n                            }\n                        }\n                    }\n                    else if (isBool(options)) {\n                        thisOption.enabled = options;\n                    }\n                }\n\n                return this;\n            }\n\n            var ret = {},\n                allActions = ['drag', 'resize', 'gesture'];\n\n            for (i = 0; i < allActions.length; i++) {\n                if (option in defaultOptions[allActions[i]]) {\n                    ret[allActions[i]] = this.options[allActions[i]][option];\n                }\n            }\n\n            return ret;\n        },\n\n\n        /*\\\n         * Interactable.inertia\n         [ method ]\n         **\n         * Deprecated. Add an `inertia` property to the options object passed\n         * to @Interactable.draggable or @Interactable.resizable instead.\n         *\n         * Returns or sets if and how events continue to run after the pointer is released\n         **\n         = (boolean | object) `false` if inertia is disabled; `object` with inertia properties if inertia is enabled\n         **\n         * or\n         **\n         - options (object | boolean | null) #optional\n         = (Interactable) this Interactable\n         > Usage\n         | // enable and use default settings\n         | interact(element).inertia(true);\n         |\n         | // enable and use custom settings\n         | interact(element).inertia({\n         |     // value greater than 0\n         |     // high values slow the object down more quickly\n         |     resistance     : 16,\n         |\n         |     // the minimum launch speed (pixels per second) that results in inertia start\n         |     minSpeed       : 200,\n         |\n         |     // inertia will stop when the object slows down to this speed\n         |     endSpeed       : 20,\n         |\n         |     // boolean; should actions be resumed when the pointer goes down during inertia\n         |     allowResume    : true,\n         |\n         |     // boolean; should the jump when resuming from inertia be ignored in event.dx/dy\n         |     zeroResumeDelta: false,\n         |\n         |     // if snap/restrict are set to be endOnly and inertia is enabled, releasing\n         |     // the pointer without triggering inertia will animate from the release\n         |     // point to the snaped/restricted point in the given amount of time (ms)\n         |     smoothEndDuration: 300,\n         |\n         |     // an array of action types that can have inertia (no gesture)\n         |     actions        : ['drag', 'resize']\n         | });\n         |\n         | // reset custom settings and use all defaults\n         | interact(element).inertia(null);\n        \\*/\n        inertia: function (options) {\n            var ret = this.setOptions('inertia', options);\n\n            if (ret === this) { return this; }\n\n            return ret.drag;\n        },\n\n        getAction: function (pointer, event, interaction, element) {\n            var action = this.defaultActionChecker(pointer, interaction, element);\n\n            if (this.options.actionChecker) {\n                return this.options.actionChecker(pointer, event, action, this, element, interaction);\n            }\n\n            return action;\n        },\n\n        defaultActionChecker: defaultActionChecker,\n\n        /*\\\n         * Interactable.actionChecker\n         [ method ]\n         *\n         * Gets or sets the function used to check action to be performed on\n         * pointerDown\n         *\n         - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n         = (Function | Interactable) The checker function or this Interactable\n         *\n         | interact('.resize-drag')\n         |   .resizable(true)\n         |   .draggable(true)\n         |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n         |\n         |   if (interact.matchesSelector(event.target, '.drag-handle') {\n         |     // force drag with handle target\n         |     action.name = drag;\n         |   }\n         |   else {\n         |     // resize from the top and right edges\n         |     action.name  = 'resize';\n         |     action.edges = { top: true, right: true };\n         |   }\n         |\n         |   return action;\n         | });\n        \\*/\n        actionChecker: function (checker) {\n            if (isFunction(checker)) {\n                this.options.actionChecker = checker;\n\n                return this;\n            }\n\n            if (checker === null) {\n                delete this.options.actionChecker;\n\n                return this;\n            }\n\n            return this.options.actionChecker;\n        },\n\n        /*\\\n         * Interactable.getRect\n         [ method ]\n         *\n         * The default function to get an Interactables bounding rect. Can be\n         * overridden using @Interactable.rectChecker.\n         *\n         - element (Element) #optional The element to measure.\n         = (object) The object's bounding rectangle.\n         o {\n         o     top   : 0,\n         o     left  : 0,\n         o     bottom: 0,\n         o     right : 0,\n         o     width : 0,\n         o     height: 0\n         o }\n        \\*/\n        getRect: function rectCheck (element) {\n            element = element || this._element;\n\n            if (this.selector && !(isElement(element))) {\n                element = this._context.querySelector(this.selector);\n            }\n\n            return getElementRect(element);\n        },\n\n        /*\\\n         * Interactable.rectChecker\n         [ method ]\n         *\n         * Returns or sets the function used to calculate the interactable's\n         * element's rectangle\n         *\n         - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n         = (function | object) The checker function or this Interactable\n        \\*/\n        rectChecker: function (checker) {\n            if (isFunction(checker)) {\n                this.getRect = checker;\n\n                return this;\n            }\n\n            if (checker === null) {\n                delete this.options.getRect;\n\n                return this;\n            }\n\n            return this.getRect;\n        },\n\n        /*\\\n         * Interactable.styleCursor\n         [ method ]\n         *\n         * Returns or sets whether the action that would be performed when the\n         * mouse on the element are checked on `mousemove` so that the cursor\n         * may be styled appropriately\n         *\n         - newValue (boolean) #optional\n         = (boolean | Interactable) The current setting or this Interactable\n        \\*/\n        styleCursor: function (newValue) {\n            if (isBool(newValue)) {\n                this.options.styleCursor = newValue;\n\n                return this;\n            }\n\n            if (newValue === null) {\n                delete this.options.styleCursor;\n\n                return this;\n            }\n\n            return this.options.styleCursor;\n        },\n\n        /*\\\n         * Interactable.preventDefault\n         [ method ]\n         *\n         * Returns or sets whether to prevent the browser's default behaviour\n         * in response to pointer events. Can be set to:\n         *  - `'always'` to always prevent\n         *  - `'never'` to never prevent\n         *  - `'auto'` to let interact.js try to determine what would be best\n         *\n         - newValue (string) #optional `true`, `false` or `'auto'`\n         = (string | Interactable) The current setting or this Interactable\n        \\*/\n        preventDefault: function (newValue) {\n            if (/^(always|never|auto)$/.test(newValue)) {\n                this.options.preventDefault = newValue;\n                return this;\n            }\n\n            if (isBool(newValue)) {\n                this.options.preventDefault = newValue? 'always' : 'never';\n                return this;\n            }\n\n            return this.options.preventDefault;\n        },\n\n        /*\\\n         * Interactable.origin\n         [ method ]\n         *\n         * Gets or sets the origin of the Interactable's element.  The x and y\n         * of the origin will be subtracted from action event coordinates.\n         *\n         - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n         * OR\n         - origin (Element) #optional An HTML or SVG Element whose rect will be used\n         **\n         = (object) The current origin or this Interactable\n        \\*/\n        origin: function (newValue) {\n            if (trySelector(newValue)) {\n                this.options.origin = newValue;\n                return this;\n            }\n            else if (isObject(newValue)) {\n                this.options.origin = newValue;\n                return this;\n            }\n\n            return this.options.origin;\n        },\n\n        /*\\\n         * Interactable.deltaSource\n         [ method ]\n         *\n         * Returns or sets the mouse coordinate types used to calculate the\n         * movement of the pointer.\n         *\n         - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n         = (string | object) The current deltaSource or this Interactable\n        \\*/\n        deltaSource: function (newValue) {\n            if (newValue === 'page' || newValue === 'client') {\n                this.options.deltaSource = newValue;\n\n                return this;\n            }\n\n            return this.options.deltaSource;\n        },\n\n        /*\\\n         * Interactable.restrict\n         [ method ]\n         **\n         * Deprecated. Add a `restrict` property to the options object passed to\n         * @Interactable.draggable, @Interactable.resizable or @Interactable.gesturable instead.\n         *\n         * Returns or sets the rectangles within which actions on this\n         * interactable (after snap calculations) are restricted. By default,\n         * restricting is relative to the pointer coordinates. You can change\n         * this by setting the\n         * [`elementRect`](https://github.com/taye/interact.js/pull/72).\n         **\n         - options (object) #optional an object with keys drag, resize, and/or gesture whose values are rects, Elements, CSS selectors, or 'parent' or 'self'\n         = (object) The current restrictions object or this Interactable\n         **\n         | interact(element).restrict({\n         |     // the rect will be `interact.getElementRect(element.parentNode)`\n         |     drag: element.parentNode,\n         |\n         |     // x and y are relative to the the interactable's origin\n         |     resize: { x: 100, y: 100, width: 200, height: 200 }\n         | })\n         |\n         | interact('.draggable').restrict({\n         |     // the rect will be the selected element's parent\n         |     drag: 'parent',\n         |\n         |     // do not restrict during normal movement.\n         |     // Instead, trigger only one restricted move event\n         |     // immediately before the end event.\n         |     endOnly: true,\n         |\n         |     // https://github.com/taye/interact.js/pull/72#issue-41813493\n         |     elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n         | });\n        \\*/\n        restrict: function (options) {\n            if (!isObject(options)) {\n                return this.setOptions('restrict', options);\n            }\n\n            var actions = ['drag', 'resize', 'gesture'],\n                ret;\n\n            for (var i = 0; i < actions.length; i++) {\n                var action = actions[i];\n\n                if (action in options) {\n                    var perAction = extend({\n                            actions: [action],\n                            restriction: options[action]\n                        }, options);\n\n                    ret = this.setOptions('restrict', perAction);\n                }\n            }\n\n            return ret;\n        },\n\n        /*\\\n         * Interactable.context\n         [ method ]\n         *\n         * Gets the selector context Node of the Interactable. The default is `window.document`.\n         *\n         = (Node) The context Node of this Interactable\n         **\n        \\*/\n        context: function () {\n            return this._context;\n        },\n\n        _context: document,\n\n        /*\\\n         * Interactable.ignoreFrom\n         [ method ]\n         *\n         * If the target of the `mousedown`, `pointerdown` or `touchstart`\n         * event or any of it's parents match the given CSS selector or\n         * Element, no drag/resize/gesture is started.\n         *\n         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n         = (string | Element | object) The current ignoreFrom value or this Interactable\n         **\n         | interact(element, { ignoreFrom: document.getElementById('no-action') });\n         | // or\n         | interact(element).ignoreFrom('input, textarea, a');\n        \\*/\n        ignoreFrom: function (newValue) {\n            if (trySelector(newValue)) {            // CSS selector to match event.target\n                this.options.ignoreFrom = newValue;\n                return this;\n            }\n\n            if (isElement(newValue)) {              // specific element\n                this.options.ignoreFrom = newValue;\n                return this;\n            }\n\n            return this.options.ignoreFrom;\n        },\n\n        /*\\\n         * Interactable.allowFrom\n         [ method ]\n         *\n         * A drag/resize/gesture is started only If the target of the\n         * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n         * parents match the given CSS selector or Element.\n         *\n         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n         = (string | Element | object) The current allowFrom value or this Interactable\n         **\n         | interact(element, { allowFrom: document.getElementById('drag-handle') });\n         | // or\n         | interact(element).allowFrom('.handle');\n        \\*/\n        allowFrom: function (newValue) {\n            if (trySelector(newValue)) {            // CSS selector to match event.target\n                this.options.allowFrom = newValue;\n                return this;\n            }\n\n            if (isElement(newValue)) {              // specific element\n                this.options.allowFrom = newValue;\n                return this;\n            }\n\n            return this.options.allowFrom;\n        },\n\n        /*\\\n         * Interactable.element\n         [ method ]\n         *\n         * If this is not a selector Interactable, it returns the element this\n         * interactable represents\n         *\n         = (Element) HTML / SVG Element\n        \\*/\n        element: function () {\n            return this._element;\n        },\n\n        /*\\\n         * Interactable.fire\n         [ method ]\n         *\n         * Calls listeners for the given InteractEvent type bound globally\n         * and directly to this Interactable\n         *\n         - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n         = (Interactable) this Interactable\n        \\*/\n        fire: function (iEvent) {\n            if (!(iEvent && iEvent.type) || !contains(eventTypes, iEvent.type)) {\n                return this;\n            }\n\n            var listeners,\n                i,\n                len,\n                onEvent = 'on' + iEvent.type,\n                funcName = '';\n\n            // Interactable#on() listeners\n            if (iEvent.type in this._iEvents) {\n                listeners = this._iEvents[iEvent.type];\n\n                for (i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n                    funcName = listeners[i].name;\n                    listeners[i](iEvent);\n                }\n            }\n\n            // interactable.onevent listener\n            if (isFunction(this[onEvent])) {\n                funcName = this[onEvent].name;\n                this[onEvent](iEvent);\n            }\n\n            // interact.on() listeners\n            if (iEvent.type in globalEvents && (listeners = globalEvents[iEvent.type]))  {\n\n                for (i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n                    funcName = listeners[i].name;\n                    listeners[i](iEvent);\n                }\n            }\n\n            return this;\n        },\n\n        /*\\\n         * Interactable.on\n         [ method ]\n         *\n         * Binds a listener for an InteractEvent or DOM event.\n         *\n         - eventType  (string | array | object) The types of events to listen for\n         - listener   (function) The function to be called on the given event(s)\n         - useCapture (boolean) #optional useCapture flag for addEventListener\n         = (object) This Interactable\n        \\*/\n        on: function (eventType, listener, useCapture) {\n            var i;\n\n            if (isString(eventType) && eventType.search(' ') !== -1) {\n                eventType = eventType.trim().split(/ +/);\n            }\n\n            if (isArray(eventType)) {\n                for (i = 0; i < eventType.length; i++) {\n                    this.on(eventType[i], listener, useCapture);\n                }\n\n                return this;\n            }\n\n            if (isObject(eventType)) {\n                for (var prop in eventType) {\n                    this.on(prop, eventType[prop], listener);\n                }\n\n                return this;\n            }\n\n            if (eventType === 'wheel') {\n                eventType = wheelEvent;\n            }\n\n            // convert to boolean\n            useCapture = useCapture? true: false;\n\n            if (contains(eventTypes, eventType)) {\n                // if this type of event was never bound to this Interactable\n                if (!(eventType in this._iEvents)) {\n                    this._iEvents[eventType] = [listener];\n                }\n                else {\n                    this._iEvents[eventType].push(listener);\n                }\n            }\n            // delegated event for selector\n            else if (this.selector) {\n                if (!delegatedEvents[eventType]) {\n                    delegatedEvents[eventType] = {\n                        selectors: [],\n                        contexts : [],\n                        listeners: []\n                    };\n\n                    // add delegate listener functions\n                    for (i = 0; i < documents.length; i++) {\n                        events.add(documents[i], eventType, delegateListener);\n                        events.add(documents[i], eventType, delegateUseCapture, true);\n                    }\n                }\n\n                var delegated = delegatedEvents[eventType],\n                    index;\n\n                for (index = delegated.selectors.length - 1; index >= 0; index--) {\n                    if (delegated.selectors[index] === this.selector\n                        && delegated.contexts[index] === this._context) {\n                        break;\n                    }\n                }\n\n                if (index === -1) {\n                    index = delegated.selectors.length;\n\n                    delegated.selectors.push(this.selector);\n                    delegated.contexts .push(this._context);\n                    delegated.listeners.push([]);\n                }\n\n                // keep listener and useCapture flag\n                delegated.listeners[index].push([listener, useCapture]);\n            }\n            else {\n                events.add(this._element, eventType, listener, useCapture);\n            }\n\n            return this;\n        },\n\n        /*\\\n         * Interactable.off\n         [ method ]\n         *\n         * Removes an InteractEvent or DOM event listener\n         *\n         - eventType  (string | array | object) The types of events that were listened for\n         - listener   (function) The listener function to be removed\n         - useCapture (boolean) #optional useCapture flag for removeEventListener\n         = (object) This Interactable\n        \\*/\n        off: function (eventType, listener, useCapture) {\n            var i;\n\n            if (isString(eventType) && eventType.search(' ') !== -1) {\n                eventType = eventType.trim().split(/ +/);\n            }\n\n            if (isArray(eventType)) {\n                for (i = 0; i < eventType.length; i++) {\n                    this.off(eventType[i], listener, useCapture);\n                }\n\n                return this;\n            }\n\n            if (isObject(eventType)) {\n                for (var prop in eventType) {\n                    this.off(prop, eventType[prop], listener);\n                }\n\n                return this;\n            }\n\n            var eventList,\n                index = -1;\n\n            // convert to boolean\n            useCapture = useCapture? true: false;\n\n            if (eventType === 'wheel') {\n                eventType = wheelEvent;\n            }\n\n            // if it is an action event type\n            if (contains(eventTypes, eventType)) {\n                eventList = this._iEvents[eventType];\n\n                if (eventList && (index = indexOf(eventList, listener)) !== -1) {\n                    this._iEvents[eventType].splice(index, 1);\n                }\n            }\n            // delegated event\n            else if (this.selector) {\n                var delegated = delegatedEvents[eventType],\n                    matchFound = false;\n\n                if (!delegated) { return this; }\n\n                // count from last index of delegated to 0\n                for (index = delegated.selectors.length - 1; index >= 0; index--) {\n                    // look for matching selector and context Node\n                    if (delegated.selectors[index] === this.selector\n                        && delegated.contexts[index] === this._context) {\n\n                        var listeners = delegated.listeners[index];\n\n                        // each item of the listeners array is an array: [function, useCaptureFlag]\n                        for (i = listeners.length - 1; i >= 0; i--) {\n                            var fn = listeners[i][0],\n                                useCap = listeners[i][1];\n\n                            // check if the listener functions and useCapture flags match\n                            if (fn === listener && useCap === useCapture) {\n                                // remove the listener from the array of listeners\n                                listeners.splice(i, 1);\n\n                                // if all listeners for this interactable have been removed\n                                // remove the interactable from the delegated arrays\n                                if (!listeners.length) {\n                                    delegated.selectors.splice(index, 1);\n                                    delegated.contexts .splice(index, 1);\n                                    delegated.listeners.splice(index, 1);\n\n                                    // remove delegate function from context\n                                    events.remove(this._context, eventType, delegateListener);\n                                    events.remove(this._context, eventType, delegateUseCapture, true);\n\n                                    // remove the arrays if they are empty\n                                    if (!delegated.selectors.length) {\n                                        delegatedEvents[eventType] = null;\n                                    }\n                                }\n\n                                // only remove one listener\n                                matchFound = true;\n                                break;\n                            }\n                        }\n\n                        if (matchFound) { break; }\n                    }\n                }\n            }\n            // remove listener from this Interatable's element\n            else {\n                events.remove(this._element, eventType, listener, useCapture);\n            }\n\n            return this;\n        },\n\n        /*\\\n         * Interactable.set\n         [ method ]\n         *\n         * Reset the options of this Interactable\n         - options (object) The new settings to apply\n         = (object) This Interactable\n        \\*/\n        set: function (options) {\n            if (!isObject(options)) {\n                options = {};\n            }\n\n            this.options = extend({}, defaultOptions.base);\n\n            var i,\n                actions = ['drag', 'drop', 'resize', 'gesture'],\n                methods = ['draggable', 'dropzone', 'resizable', 'gesturable'],\n                perActions = extend(extend({}, defaultOptions.perAction), options[action] || {});\n\n            for (i = 0; i < actions.length; i++) {\n                var action = actions[i];\n\n                this.options[action] = extend({}, defaultOptions[action]);\n\n                this.setPerAction(action, perActions);\n\n                this[methods[i]](options[action]);\n            }\n\n            var settings = [\n                    'accept', 'actionChecker', 'allowFrom', 'deltaSource',\n                    'dropChecker', 'ignoreFrom', 'origin', 'preventDefault',\n                    'rectChecker', 'styleCursor'\n                ];\n\n            for (i = 0, len = settings.length; i < len; i++) {\n                var setting = settings[i];\n\n                this.options[setting] = defaultOptions.base[setting];\n\n                if (setting in options) {\n                    this[setting](options[setting]);\n                }\n            }\n\n            return this;\n        },\n\n        /*\\\n         * Interactable.unset\n         [ method ]\n         *\n         * Remove this interactable from the list of interactables and remove\n         * it's drag, drop, resize and gesture capabilities\n         *\n         = (object) @interact\n        \\*/\n        unset: function () {\n            events.remove(this._element, 'all');\n\n            if (!isString(this.selector)) {\n                events.remove(this, 'all');\n                if (this.options.styleCursor) {\n                    this._element.style.cursor = '';\n                }\n            }\n            else {\n                // remove delegated events\n                for (var type in delegatedEvents) {\n                    var delegated = delegatedEvents[type];\n\n                    for (var i = 0; i < delegated.selectors.length; i++) {\n                        if (delegated.selectors[i] === this.selector\n                            && delegated.contexts[i] === this._context) {\n\n                            delegated.selectors.splice(i, 1);\n                            delegated.contexts .splice(i, 1);\n                            delegated.listeners.splice(i, 1);\n\n                            // remove the arrays if they are empty\n                            if (!delegated.selectors.length) {\n                                delegatedEvents[type] = null;\n                            }\n                        }\n\n                        events.remove(this._context, type, delegateListener);\n                        events.remove(this._context, type, delegateUseCapture, true);\n\n                        break;\n                    }\n                }\n            }\n\n            this.dropzone(false);\n\n            interactables.splice(indexOf(interactables, this), 1);\n\n            return interact;\n        }\n    };\n\n    function warnOnce (method, message) {\n        var warned = false;\n\n        return function () {\n            if (!warned) {\n                window.console.warn(message);\n                warned = true;\n            }\n\n            return method.apply(this, arguments);\n        };\n    }\n\n    Interactable.prototype.snap = warnOnce(Interactable.prototype.snap,\n         'Interactable#snap is deprecated. See the new documentation for snapping at http://interactjs.io/docs/snapping');\n    Interactable.prototype.restrict = warnOnce(Interactable.prototype.restrict,\n         'Interactable#restrict is deprecated. See the new documentation for resticting at http://interactjs.io/docs/restriction');\n    Interactable.prototype.inertia = warnOnce(Interactable.prototype.inertia,\n         'Interactable#inertia is deprecated. See the new documentation for inertia at http://interactjs.io/docs/inertia');\n    Interactable.prototype.autoScroll = warnOnce(Interactable.prototype.autoScroll,\n         'Interactable#autoScroll is deprecated. See the new documentation for autoScroll at http://interactjs.io/docs/#autoscroll');\n    Interactable.prototype.squareResize = warnOnce(Interactable.prototype.squareResize,\n         'Interactable#squareResize is deprecated. See http://interactjs.io/docs/#resize-square');\n\n    Interactable.prototype.accept = warnOnce(Interactable.prototype.accept,\n         'Interactable#accept is deprecated. use Interactable#dropzone({ accept: target }) instead');\n    Interactable.prototype.dropChecker = warnOnce(Interactable.prototype.dropChecker,\n         'Interactable#dropChecker is deprecated. use Interactable#dropzone({ dropChecker: checkerFunction }) instead');\n    Interactable.prototype.context = warnOnce(Interactable.prototype.context,\n         'Interactable#context as a method is deprecated. It will soon be a DOM Node instead');\n\n    /*\\\n     * interact.isSet\n     [ method ]\n     *\n     * Check if an element has been set\n     - element (Element) The Element being searched for\n     = (boolean) Indicates if the element or CSS selector was previously passed to interact\n    \\*/\n    interact.isSet = function(element, options) {\n        return interactables.indexOfElement(element, options && options.context) !== -1;\n    };\n\n    /*\\\n     * interact.on\n     [ method ]\n     *\n     * Adds a global listener for an InteractEvent or adds a DOM event to\n     * `document`\n     *\n     - type       (string | array | object) The types of events to listen for\n     - listener   (function) The function to be called on the given event(s)\n     - useCapture (boolean) #optional useCapture flag for addEventListener\n     = (object) interact\n    \\*/\n    interact.on = function (type, listener, useCapture) {\n        if (isString(type) && type.search(' ') !== -1) {\n            type = type.trim().split(/ +/);\n        }\n\n        if (isArray(type)) {\n            for (var i = 0; i < type.length; i++) {\n                interact.on(type[i], listener, useCapture);\n            }\n\n            return interact;\n        }\n\n        if (isObject(type)) {\n            for (var prop in type) {\n                interact.on(prop, type[prop], listener);\n            }\n\n            return interact;\n        }\n\n        // if it is an InteractEvent type, add listener to globalEvents\n        if (contains(eventTypes, type)) {\n            // if this type of event was never bound\n            if (!globalEvents[type]) {\n                globalEvents[type] = [listener];\n            }\n            else {\n                globalEvents[type].push(listener);\n            }\n        }\n        // If non InteractEvent type, addEventListener to document\n        else {\n            events.add(document, type, listener, useCapture);\n        }\n\n        return interact;\n    };\n\n    /*\\\n     * interact.off\n     [ method ]\n     *\n     * Removes a global InteractEvent listener or DOM event from `document`\n     *\n     - type       (string | array | object) The types of events that were listened for\n     - listener   (function) The listener function to be removed\n     - useCapture (boolean) #optional useCapture flag for removeEventListener\n     = (object) interact\n     \\*/\n    interact.off = function (type, listener, useCapture) {\n        if (isString(type) && type.search(' ') !== -1) {\n            type = type.trim().split(/ +/);\n        }\n\n        if (isArray(type)) {\n            for (var i = 0; i < type.length; i++) {\n                interact.off(type[i], listener, useCapture);\n            }\n\n            return interact;\n        }\n\n        if (isObject(type)) {\n            for (var prop in type) {\n                interact.off(prop, type[prop], listener);\n            }\n\n            return interact;\n        }\n\n        if (!contains(eventTypes, type)) {\n            events.remove(document, type, listener, useCapture);\n        }\n        else {\n            var index;\n\n            if (type in globalEvents\n                && (index = indexOf(globalEvents[type], listener)) !== -1) {\n                globalEvents[type].splice(index, 1);\n            }\n        }\n\n        return interact;\n    };\n\n    /*\\\n     * interact.enableDragging\n     [ method ]\n     *\n     * Deprecated.\n     *\n     * Returns or sets whether dragging is enabled for any Interactables\n     *\n     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n     = (boolean | object) The current setting or interact\n    \\*/\n    interact.enableDragging = warnOnce(function (newValue) {\n        if (newValue !== null && newValue !== undefined) {\n            actionIsEnabled.drag = newValue;\n\n            return interact;\n        }\n        return actionIsEnabled.drag;\n    }, 'interact.enableDragging is deprecated and will soon be removed.');\n\n    /*\\\n     * interact.enableResizing\n     [ method ]\n     *\n     * Deprecated.\n     *\n     * Returns or sets whether resizing is enabled for any Interactables\n     *\n     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n     = (boolean | object) The current setting or interact\n    \\*/\n    interact.enableResizing = warnOnce(function (newValue) {\n        if (newValue !== null && newValue !== undefined) {\n            actionIsEnabled.resize = newValue;\n\n            return interact;\n        }\n        return actionIsEnabled.resize;\n    }, 'interact.enableResizing is deprecated and will soon be removed.');\n\n    /*\\\n     * interact.enableGesturing\n     [ method ]\n     *\n     * Deprecated.\n     *\n     * Returns or sets whether gesturing is enabled for any Interactables\n     *\n     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n     = (boolean | object) The current setting or interact\n    \\*/\n    interact.enableGesturing = warnOnce(function (newValue) {\n        if (newValue !== null && newValue !== undefined) {\n            actionIsEnabled.gesture = newValue;\n\n            return interact;\n        }\n        return actionIsEnabled.gesture;\n    }, 'interact.enableGesturing is deprecated and will soon be removed.');\n\n    interact.eventTypes = eventTypes;\n\n    /*\\\n     * interact.debug\n     [ method ]\n     *\n     * Returns debugging data\n     = (object) An object with properties that outline the current state and expose internal functions and variables\n    \\*/\n    interact.debug = function () {\n        var interaction = interactions[0] || new Interaction();\n\n        return {\n            interactions          : interactions,\n            target                : interaction.target,\n            dragging              : interaction.dragging,\n            resizing              : interaction.resizing,\n            gesturing             : interaction.gesturing,\n            prepared              : interaction.prepared,\n            matches               : interaction.matches,\n            matchElements         : interaction.matchElements,\n\n            prevCoords            : interaction.prevCoords,\n            startCoords           : interaction.startCoords,\n\n            pointerIds            : interaction.pointerIds,\n            pointers              : interaction.pointers,\n            addPointer            : listeners.addPointer,\n            removePointer         : listeners.removePointer,\n            recordPointer        : listeners.recordPointer,\n\n            snap                  : interaction.snapStatus,\n            restrict              : interaction.restrictStatus,\n            inertia               : interaction.inertiaStatus,\n\n            downTime              : interaction.downTimes[0],\n            downEvent             : interaction.downEvent,\n            downPointer           : interaction.downPointer,\n            prevEvent             : interaction.prevEvent,\n\n            Interactable          : Interactable,\n            interactables         : interactables,\n            pointerIsDown         : interaction.pointerIsDown,\n            defaultOptions        : defaultOptions,\n            defaultActionChecker  : defaultActionChecker,\n\n            actionCursors         : actionCursors,\n            dragMove              : listeners.dragMove,\n            resizeMove            : listeners.resizeMove,\n            gestureMove           : listeners.gestureMove,\n            pointerUp             : listeners.pointerUp,\n            pointerDown           : listeners.pointerDown,\n            pointerMove           : listeners.pointerMove,\n            pointerHover          : listeners.pointerHover,\n\n            eventTypes            : eventTypes,\n\n            events                : events,\n            globalEvents          : globalEvents,\n            delegatedEvents       : delegatedEvents,\n\n            prefixedPropREs       : prefixedPropREs\n        };\n    };\n\n    // expose the functions used to calculate multi-touch properties\n    interact.getPointerAverage = pointerAverage;\n    interact.getTouchBBox     = touchBBox;\n    interact.getTouchDistance = touchDistance;\n    interact.getTouchAngle    = touchAngle;\n\n    interact.getElementRect         = getElementRect;\n    interact.getElementClientRect   = getElementClientRect;\n    interact.matchesSelector        = matchesSelector;\n    interact.closest                = closest;\n\n    /*\\\n     * interact.margin\n     [ method ]\n     *\n     * Deprecated. Use `interact(target).resizable({ margin: number });` instead.\n     * Returns or sets the margin for autocheck resizing used in\n     * @Interactable.getAction. That is the distance from the bottom and right\n     * edges of an element clicking in which will start resizing\n     *\n     - newValue (number) #optional\n     = (number | interact) The current margin value or interact\n    \\*/\n    interact.margin = warnOnce(function (newvalue) {\n        if (isNumber(newvalue)) {\n            margin = newvalue;\n\n            return interact;\n        }\n        return margin;\n    },\n    'interact.margin is deprecated. Use interact(target).resizable({ margin: number }); instead.') ;\n\n    /*\\\n     * interact.supportsTouch\n     [ method ]\n     *\n     = (boolean) Whether or not the browser supports touch input\n    \\*/\n    interact.supportsTouch = function () {\n        return supportsTouch;\n    };\n\n    /*\\\n     * interact.supportsPointerEvent\n     [ method ]\n     *\n     = (boolean) Whether or not the browser supports PointerEvents\n    \\*/\n    interact.supportsPointerEvent = function () {\n        return supportsPointerEvent;\n    };\n\n    /*\\\n     * interact.stop\n     [ method ]\n     *\n     * Cancels all interactions (end events are not fired)\n     *\n     - event (Event) An event on which to call preventDefault()\n     = (object) interact\n    \\*/\n    interact.stop = function (event) {\n        for (var i = interactions.length - 1; i >= 0; i--) {\n            interactions[i].stop(event);\n        }\n\n        return interact;\n    };\n\n    /*\\\n     * interact.dynamicDrop\n     [ method ]\n     *\n     * Returns or sets whether the dimensions of dropzone elements are\n     * calculated on every dragmove or only on dragstart for the default\n     * dropChecker\n     *\n     - newValue (boolean) #optional True to check on each move. False to check only before start\n     = (boolean | interact) The current setting or interact\n    \\*/\n    interact.dynamicDrop = function (newValue) {\n        if (isBool(newValue)) {\n            //if (dragging && dynamicDrop !== newValue && !newValue) {\n                //calcRects(dropzones);\n            //}\n\n            dynamicDrop = newValue;\n\n            return interact;\n        }\n        return dynamicDrop;\n    };\n\n    /*\\\n     * interact.pointerMoveTolerance\n     [ method ]\n     * Returns or sets the distance the pointer must be moved before an action\n     * sequence occurs. This also affects tolerance for tap events.\n     *\n     - newValue (number) #optional The movement from the start position must be greater than this value\n     = (number | Interactable) The current setting or interact\n    \\*/\n    interact.pointerMoveTolerance = function (newValue) {\n        if (isNumber(newValue)) {\n            pointerMoveTolerance = newValue;\n\n            return this;\n        }\n\n        return pointerMoveTolerance;\n    };\n\n    /*\\\n     * interact.maxInteractions\n     [ method ]\n     **\n     * Returns or sets the maximum number of concurrent interactions allowed.\n     * By default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables\n     * and elements, you need to enable it in the draggable, resizable and\n     * gesturable `'max'` and `'maxPerElement'` options.\n     **\n     - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n    \\*/\n    interact.maxInteractions = function (newValue) {\n        if (isNumber(newValue)) {\n            maxInteractions = newValue;\n\n            return this;\n        }\n\n        return maxInteractions;\n    };\n\n    interact.createSnapGrid = function (grid) {\n        return function (x, y) {\n            var offsetX = 0,\n                offsetY = 0;\n\n            if (isObject(grid.offset)) {\n                offsetX = grid.offset.x;\n                offsetY = grid.offset.y;\n            }\n\n            var gridx = Math.round((x - offsetX) / grid.x),\n                gridy = Math.round((y - offsetY) / grid.y),\n\n                newX = gridx * grid.x + offsetX,\n                newY = gridy * grid.y + offsetY;\n\n            return {\n                x: newX,\n                y: newY,\n                range: grid.range\n            };\n        };\n    };\n\n    function endAllInteractions (event) {\n        for (var i = 0; i < interactions.length; i++) {\n            interactions[i].pointerEnd(event, event);\n        }\n    }\n\n    function listenToDocument (doc) {\n        if (contains(documents, doc)) { return; }\n\n        var win = doc.defaultView || doc.parentWindow;\n\n        // add delegate event listener\n        for (var eventType in delegatedEvents) {\n            events.add(doc, eventType, delegateListener);\n            events.add(doc, eventType, delegateUseCapture, true);\n        }\n\n        if (supportsPointerEvent) {\n            if (PointerEvent === win.MSPointerEvent) {\n                pEventTypes = {\n                    up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n                    out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' };\n            }\n            else {\n                pEventTypes = {\n                    up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n                    out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' };\n            }\n\n            events.add(doc, pEventTypes.down  , listeners.selectorDown );\n            events.add(doc, pEventTypes.move  , listeners.pointerMove  );\n            events.add(doc, pEventTypes.over  , listeners.pointerOver  );\n            events.add(doc, pEventTypes.out   , listeners.pointerOut   );\n            events.add(doc, pEventTypes.up    , listeners.pointerUp    );\n            events.add(doc, pEventTypes.cancel, listeners.pointerCancel);\n\n            // autoscroll\n            events.add(doc, pEventTypes.move, listeners.autoScrollMove);\n        }\n        else {\n            events.add(doc, 'mousedown', listeners.selectorDown);\n            events.add(doc, 'mousemove', listeners.pointerMove );\n            events.add(doc, 'mouseup'  , listeners.pointerUp   );\n            events.add(doc, 'mouseover', listeners.pointerOver );\n            events.add(doc, 'mouseout' , listeners.pointerOut  );\n\n            events.add(doc, 'touchstart' , listeners.selectorDown );\n            events.add(doc, 'touchmove'  , listeners.pointerMove  );\n            events.add(doc, 'touchend'   , listeners.pointerUp    );\n            events.add(doc, 'touchcancel', listeners.pointerCancel);\n\n            // autoscroll\n            events.add(doc, 'mousemove', listeners.autoScrollMove);\n            events.add(doc, 'touchmove', listeners.autoScrollMove);\n        }\n\n        events.add(win, 'blur', endAllInteractions);\n\n        try {\n            if (win.frameElement) {\n                var parentDoc = win.frameElement.ownerDocument,\n                    parentWindow = parentDoc.defaultView;\n\n                events.add(parentDoc   , 'mouseup'      , listeners.pointerEnd);\n                events.add(parentDoc   , 'touchend'     , listeners.pointerEnd);\n                events.add(parentDoc   , 'touchcancel'  , listeners.pointerEnd);\n                events.add(parentDoc   , 'pointerup'    , listeners.pointerEnd);\n                events.add(parentDoc   , 'MSPointerUp'  , listeners.pointerEnd);\n                events.add(parentWindow, 'blur'         , endAllInteractions );\n            }\n        }\n        catch (error) {\n            interact.windowParentError = error;\n        }\n\n        // prevent native HTML5 drag on interact.js target elements\n        events.add(doc, 'dragstart', function (event) {\n            for (var i = 0; i < interactions.length; i++) {\n                var interaction = interactions[i];\n\n                if (interaction.element\n                    && (interaction.element === event.target\n                        || nodeContains(interaction.element, event.target))) {\n\n                    interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n                    return;\n                }\n            }\n        });\n\n        if (events.useAttachEvent) {\n            // For IE's lack of Event#preventDefault\n            events.add(doc, 'selectstart', function (event) {\n                var interaction = interactions[0];\n\n                if (interaction.currentAction()) {\n                    interaction.checkAndPreventDefault(event);\n                }\n            });\n\n            // For IE's bad dblclick event sequence\n            events.add(doc, 'dblclick', doOnInteractions('ie8Dblclick'));\n        }\n\n        documents.push(doc);\n    }\n\n    listenToDocument(document);\n\n    function indexOf (array, target) {\n        for (var i = 0, len = array.length; i < len; i++) {\n            if (array[i] === target) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    function contains (array, target) {\n        return indexOf(array, target) !== -1;\n    }\n\n    function matchesSelector (element, selector, nodeList) {\n        if (ie8MatchesSelector) {\n            return ie8MatchesSelector(element, selector, nodeList);\n        }\n\n        // remove /deep/ from selectors if shadowDOM polyfill is used\n        if (window !== realWindow) {\n            selector = selector.replace(/\\/deep\\//g, ' ');\n        }\n\n        return element[prefixedMatchesSelector](selector);\n    }\n\n    function matchesUpTo (element, selector, limit) {\n        while (isElement(element)) {\n            if (matchesSelector(element, selector)) {\n                return true;\n            }\n\n            element = parentElement(element);\n\n            if (element === limit) {\n                return matchesSelector(element, selector);\n            }\n        }\n\n        return false;\n    }\n\n    // For IE8's lack of an Element#matchesSelector\n    // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n    if (!(prefixedMatchesSelector in Element.prototype) || !isFunction(Element.prototype[prefixedMatchesSelector])) {\n        ie8MatchesSelector = function (element, selector, elems) {\n            elems = elems || element.parentNode.querySelectorAll(selector);\n\n            for (var i = 0, len = elems.length; i < len; i++) {\n                if (elems[i] === element) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    // requestAnimationFrame polyfill\n    (function() {\n        var lastTime = 0,\n            vendors = ['ms', 'moz', 'webkit', 'o'];\n\n        for(var x = 0; x < vendors.length && !realWindow.requestAnimationFrame; ++x) {\n            reqFrame = realWindow[vendors[x]+'RequestAnimationFrame'];\n            cancelFrame = realWindow[vendors[x]+'CancelAnimationFrame'] || realWindow[vendors[x]+'CancelRequestAnimationFrame'];\n        }\n\n        if (!reqFrame) {\n            reqFrame = function(callback) {\n                var currTime = new Date().getTime(),\n                    timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n                    id = setTimeout(function() { callback(currTime + timeToCall); },\n                  timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n        }\n\n        if (!cancelFrame) {\n            cancelFrame = function(id) {\n                clearTimeout(id);\n            };\n        }\n    }());\n\n    /* global exports: true, module, define */\n\n    // http://documentcloud.github.io/underscore/docs/underscore.html#section-11\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = interact;\n        }\n        exports.interact = interact;\n    }\n    // AMD\n    else if (typeof define === 'function' && define.amd) {\n        define('interact', function() {\n            return interact;\n        });\n    }\n    else {\n        realWindow.interact = interact;\n    }\n\n} (typeof window === 'undefined'? undefined : window));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/interactjs/interact.js\n// module id = 5\n// module chunks = 2","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 6\n// module chunks = 2","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 7\n// module chunks = 2","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 8\n// module chunks = 2","/*!\n * Vue.js v2.1.6\n * (c) 2014-2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val, 10);\n  return (n || n === 0) ? n : val\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  }\n}\n\n/**\n * Camelize a hyphen-delmited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (\n    isObject(a) && isObject(b)\n      ? JSON.stringify(a) === JSON.stringify(b)\n      : false\n  )\n  /* eslint-enable eqeqeq */\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: null,\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isBooleanType(prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isBooleanType (fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === 'Boolean'\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === 'Boolean') {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tidentity: identity,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    var watcher = queue[index];\n    var id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has$1[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  if ( options === void 0 ) options = {};\n\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  this.deep = !!options.deep;\n  this.user = !!options.user;\n  this.lazy = !!options.lazy;\n  this.sync = !!options.sync;\n  this.expression = expOrFn.toString();\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n      if (\n        value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            process.env.NODE_ENV !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  initProps(vm);\n  initMethods(vm);\n  initData(vm);\n  initComputed(vm);\n  initWatch(vm);\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm) {\n  var props = vm.$options.props;\n  if (props) {\n    var propsData = vm.$options.propsData || {};\n    var keys = vm.$options._propKeys = Object.keys(props);\n    var isRoot = !vm.$parent;\n    // root instance props should be converted\n    observerState.shouldConvert = isRoot;\n    var loop = function ( i ) {\n      var key = keys[i];\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (isReservedProp[key]) {\n          warn(\n            (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n            vm\n          );\n        }\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n          if (vm.$parent && !observerState.isSettingProps) {\n            warn(\n              \"Avoid mutating a prop directly since the value will be \" +\n              \"overwritten whenever the parent component re-renders. \" +\n              \"Instead, use a data or computed property based on the prop's \" +\n              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n              vm\n            );\n          }\n        });\n      } else {\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) loop( i );\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data);\n  data.__ob__ && data.__ob__.vmCount++;\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm) {\n  var computed = vm.$options.computed;\n  if (computed) {\n    for (var key in computed) {\n      var userDef = computed[key];\n      if (typeof userDef === 'function') {\n        computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n        computedSharedDefinition.set = noop;\n      } else {\n        computedSharedDefinition.get = userDef.get\n          ? userDef.cache !== false\n            ? makeComputedGetter(userDef.get, vm)\n            : bind$1(userDef.get, vm)\n          : noop;\n        computedSharedDefinition.set = userDef.set\n          ? bind$1(userDef.set, vm)\n          : noop;\n      }\n      Object.defineProperty(vm, key, computedSharedDefinition);\n    }\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm) {\n  var methods = vm.$options.methods;\n  if (methods) {\n    for (var key in methods) {\n      vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n      if (process.env.NODE_ENV !== 'production' && methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm) {\n  var watch = vm.$options.watch;\n  if (watch) {\n    for (var key in watch) {\n      var handler = watch[key];\n      if (Array.isArray(handler)) {\n        for (var i = 0; i < handler.length; i++) {\n          createWatcher(vm, key, handler[i]);\n        }\n      } else {\n        createWatcher(vm, key, handler);\n      }\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.child = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      if (process.env.NODE_ENV !== 'production') {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    if (vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      vm._updateListeners(listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  vm.$emit('hook:' + hook);\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.child || vnode.child._isDestroyed) {\n    var child = vnode.child = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.child = oldVnode.child;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.child._isMounted) {\n    vnode.child._isMounted = true;\n    callHook(vnode.child, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.child._inactive = false;\n    callHook(vnode.child, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.child._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.child.$destroy();\n    } else {\n      vnode.child._inactive = true;\n      callHook(vnode.child, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, fn, event, capture, once;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      once = name.charAt(0) === '~'; // Prefixed last, checked first\n      event = once ? name.slice(1) : name;\n      capture = event.charAt(0) === '!';\n      event = capture ? event.slice(1) : event;\n      if (Array.isArray(cur)) {\n        add(event, (cur.invoker = arrInvoker(cur)), once, capture);\n      } else {\n        if (!cur.invoker) {\n          fn = cur;\n          cur = on[name] = {};\n          cur.fn = fn;\n          cur.invoker = fnInvoker(cur);\n        }\n        add(event, cur.invoker, once, capture);\n      }\n    } else if (cur !== old) {\n      if (Array.isArray(old)) {\n        old.length = cur.length;\n        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n        on[name] = old;\n      } else {\n        old.fn = cur;\n        on[name] = old;\n      }\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      once = name.charAt(0) === '~'; // Prefixed last, checked first\n      event = once ? name.slice(1) : name;\n      capture = event.charAt(0) === '!';\n      event = capture ? event.slice(1) : event;\n      remove$$1(event, oldOn[name].invoker, capture);\n    }\n  }\n}\n\nfunction arrInvoker (arr) {\n  return function (ev) {\n    var arguments$1 = arguments;\n\n    var single = arguments.length === 1;\n    for (var i = 0; i < arr.length; i++) {\n      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n    }\n  }\n}\n\nfunction fnInvoker (o) {\n  return function (ev) {\n    var single = arguments.length === 1;\n    single ? o.fn(ev) : o.fn.apply(null, arguments);\n  }\n}\n\n/*  */\n\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  needNormalization,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    needNormalization = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { needNormalization = true; }\n  return _createElement(context, tag, data, children, needNormalization)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  needNormalization\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (needNormalization) {\n    children = normalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      ns = tag === 'foreignObject' ? 'xhtml' : ns;\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, needNormalization, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n  if (vm.$options.el) {\n    vm.$mount(vm.$options.el);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // convert text to vnode\n  Vue.prototype._v = createTextVNode;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = createEmptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val)) {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      return scopedSlotFn(props || {}) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && process.env.NODE_ENV !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var hash = asProp || config.mustUseProp(tag, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  var add = function (event, fn, once) {\n    once ? vm.$once(event, fn) : vm.$on(event, fn);\n  };\n  var remove$$1 = bind$1(vm.$off, vm);\n  vm._updateListeners = function (listeners, oldListeners) {\n    updateListeners(listeners, oldListeners || {}, add, remove$$1, vm);\n  };\n  if (listeners) {\n    vm._updateListeners(listeners);\n  }\n}\n\nfunction eventsMixin (Vue) {\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    initRender(vm);\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    if (vnode && vnode.componentOptions) {\n      var opts = vnode.componentOptions;\n      // check pattern\n      var name = opts.Ctor.options.name || opts.tag;\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? opts.Ctor.cid + (opts.tag ? (\"::\" + (opts.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.child = this.cache[key].child;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  },\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      var vnode = this$1.cache[key];\n      callHook(vnode.child, 'deactivated');\n      vnode.child.$destroy();\n    }\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.1.6';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.child) {\n    childNode = childNode.child._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML',\n  xhtml: 'http://www.w3.org/1999/xhtml'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.child || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeElement(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeElement (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.child) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.child)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.child) {\n      innerNode = innerNode.child._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.child) {\n      vnode = vnode.child._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.child.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          nodeOps.removeChild(parentElm, ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeElement(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.child = oldVnode.child;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.child)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return _toString(vnode.text) === node.data\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var elm, parent;\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        elm = oldVnode.elm;\n        parent = nodeOps.parentNode(elm);\n        createElm(vnode, insertedVnodeQueue, parent, nodeOps.nextSibling(elm));\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parent !== null) {\n          removeVnodes(parent, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar target;\n\nfunction add$1 (event, handler, once, capture) {\n  if (once) {\n    var oldHandler = handler;\n    handler = function (ev) {\n      remove$2(event, handler, capture);\n      arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n    };\n  }\n  target.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (event, handler, capture) {\n  target.removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target = vnode.elm;\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (!elm.composing && (\n        (document.activeElement !== elm && elm.value !== strCur) ||\n        isValueChanged(vnode, strCur)\n      )) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\nfunction isValueChanged (vnode, newVal) {\n  var value = vnode.elm.value;\n  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.child) {\n      childNode = childNode.child._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\nvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.context === vnode.context &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.child && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.child._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    var key = child.key = child.key == null || child.isStatic\n      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n      : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && oldChild.key !== key) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.isUnknownElement = isUnknownElement;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (\n      process.env.NODE_ENV !== 'production' &&\n      inBrowser && !isEdge && /Chrome\\/\\d+/.test(window.navigator.userAgent)\n    ) {\n      console.log(\n        'Download the Vue Devtools for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr',\n  true\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\n  true\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track',\n  true\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isScriptOrStyle = makeMap('script,style', true);\nvar hasLang = function (attr) { return attr.name === 'lang' && attr.value !== 'html'; };\nvar isSpecialTag = function (tag, isSFC, stack) {\n  if (isScriptOrStyle(tag)) {\n    return true\n  }\n  if (isSFC && stack.length === 1) {\n    // top-level template that has no pre-processor\n    if (tag === 'template' && !stack[0].attrs.some(hasLang)) {\n      return false\n    } else {\n      return true\n    }\n  }\n  return false\n};\n\nvar reCache = {};\n\nvar ltRE = /&lt;/g;\nvar gtRE = /&gt;/g;\nvar nlRE = /&#10;/g;\nvar ampRE = /&amp;/g;\nvar quoteRE = /&quot;/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  if (shouldDecodeNewlines) {\n    value = value.replace(nlRE, '\\n');\n  }\n  return value\n    .replace(ltRE, '<')\n    .replace(gtRE, '>')\n    .replace(ampRE, '&')\n    .replace(quoteRE, '\"')\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a script or style element\n    if (!lastTag || !isSpecialTag(lastTag, options.sfc, stack)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[0], endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd > 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag('</' + stackedTag + '>', stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last && options.chars) {\n      options.chars(html);\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag('', lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag('', tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, attrs: attrs });\n      lastTag = tagName;\n      unarySlash = '';\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tag, tagName, start, end) {\n    var pos;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      var needle = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].tag.toLowerCase() === needle) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (tagName.toLowerCase() === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (tagName.toLowerCase() === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !/[\\w$]/.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue parser]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\nvar bindRE = /^:|^v-bind:/;\nvar onRE = /^@|^v-on:/;\nvar argRE = /:(.*)$/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$1;\nvar platformGetTagNamespace;\nvar platformMustUseProp;\nvar platformIsPreTag;\nvar preTransforms;\nvar transforms;\nvar postTransforms;\nvar delimiters;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$1 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n  parseHTML(template, {\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$1(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">.\"\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production' && !warned) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warned = true;\n            warn$1(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes:\\n' + template\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warned = true;\n            warn$1(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements:\\n' + template\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production' && !warned) {\n          warned = true;\n          warn$1(\n            \"Component template should contain exactly one root element:\" +\n            \"\\n\\n\" + template + \"\\n\\n\" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || 'default';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ') {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      // check pre state\n      if (element.pre) {\n        inVPre = false;\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = false;\n      }\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production' && !warned && text === template) {\n          warned = true;\n          warn$1(\n            'Component template requires a root element, rather than just text:\\n\\n' + template\n          );\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && currentParent.children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          currentParent.children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else {\n          currentParent.children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$1(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$1(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once = getAndRemoveAttr(el, 'v-once');\n  if (once != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$1(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, arg, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        if (argMatch && (arg = argMatch[1])) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$1(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE) {\n      warn$1('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].tag) { return children[i] }\n  }\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: 'if($event.target !== $event.currentTarget)return;',\n  ctrl: 'if(!$event.ctrlKey)return;',\n  shift: 'if(!$event.shiftKey)return;',\n  alt: 'if(!$event.altKey)return;',\n  meta: 'if(!$event.metaKey)return;'\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  } else if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  } else if (!handler.modifiers) {\n    return fnExpRE.test(handler.value) || simplePathRE.test(handler.value)\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\")\n  } else {\n    var code = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        code += modifierCode[key];\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code = genKeyFilter(keys) + code;\n    }\n    var handlerCode = simplePathRE.test(handler.value)\n      ? handler.value + '($event)'\n      : handler.value;\n    return 'function($event){' + code + handlerCode + '}'\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(\" + (keys.map(genFilterCode).join('&&')) + \")return;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$2 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\nvar baseDirectives = {\n  bind: bind$2,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$2;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$2 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$2);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$2('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:{\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"}\")\n}\n\nfunction genScopedSlot (key, el) {\n  return key + \":function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (checkSkip\n        ? canSkipNormalization(children) ? '' : ',true'\n        : ''))\n  }\n}\n\nfunction canSkipNormalization (children) {\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (needsNormalization(el) ||\n        (el.if && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction needsNormalization (el) {\n  return el.for || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  return (\"_t(\" + slotName + (children ? (\",\" + children) : '') + (el.attrs ? ((children ? '' : ',null') + \",{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\") : '') + \")\")\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n/**\n * Compile a template.\n */\nfunction compile$1 (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\n/*  */\n\n// operators like typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"- invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + text));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"- avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + text\n      );\n    } else {\n      errors.push((\"- invalid expression: \" + text));\n    }\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nvar warn$3;\n\nfunction model$1 (\n  el,\n  dir,\n  _warn\n) {\n  warn$3 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$3(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n  }\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else {\n    genDefaultModel(el, value, modifiers);\n  }\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  if (process.env.NODE_ENV !== 'production' &&\n    el.attrsMap.checked != null) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n      \"inline checked attributes will be ignored when using v-model. \" +\n      'Declare initial values in the component\\'s data option instead.'\n    );\n  }\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" +\n      \":_q(\" + value + \",\" + trueValueBinding + \")\"\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  if (process.env.NODE_ENV !== 'production' &&\n    el.attrsMap.checked != null) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n      \"inline checked attributes will be ignored when using v-model. \" +\n      'Declare initial values in the component\\'s data option instead.'\n    );\n  }\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (el.tag === 'input' && el.attrsMap.value) {\n      warn$3(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" value=\\\"\" + (el.attrsMap.value) + \"\\\">:\\n\" +\n        'inline value attributes will be ignored when using v-model. ' +\n        'Declare initial values in the component\\'s data option instead.'\n      );\n    }\n    if (el.tag === 'textarea' && el.children.length) {\n      warn$3(\n        \"<textarea v-model=\\\"\" + value + \"\\\">:\\n\" +\n        'inline content inside <textarea> will be ignored when using v-model. ' +\n        'Declare initial values in the component\\'s data option instead.'\n      );\n    }\n  }\n\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var event = lazy || (isIE && type === 'range') ? 'change' : 'input';\n  var needCompositionGuard = !lazy && type !== 'range';\n  var isNative = el.tag === 'input' || el.tag === 'textarea';\n\n  var valueExpression = isNative\n    ? (\"$event.target.value\" + (trim ? '.trim()' : ''))\n    : trim ? \"(typeof $event === 'string' ? $event.trim() : $event)\" : \"$event\";\n  valueExpression = number || type === 'number'\n    ? (\"_n(\" + valueExpression + \")\")\n    : valueExpression;\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (isNative && needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  // inputs with type=\"file\" are read only and setting the input's\n  // value will throw an error.\n  if (process.env.NODE_ENV !== 'production' &&\n      type === 'file') {\n    warn$3(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n      \"File inputs are read only. Use a v-on:change listener instead.\"\n    );\n  }\n\n  addProp(el, 'value', isNative ? (\"_s(\" + value + \")\") : (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    el.children.some(checkOptionWarning);\n  }\n\n  var number = modifiers && modifiers.number;\n  var assignment = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\" +\n    (el.attrsMap.multiple == null ? '[0]' : '');\n\n  var code = genAssignmentCode(value, assignment);\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction checkOptionWarning (option) {\n  if (option.type === 1 &&\n    option.tag === 'option' &&\n    option.attrsMap.selected != null) {\n    warn$3(\n      \"<select v-model=\\\"\" + (option.parent.attrsMap['v-model']) + \"\\\">:\\n\" +\n      'inline selected attributes on <option> will be ignored when using v-model. ' +\n      'Declare initial values in the component\\'s data option instead.'\n    );\n    return true\n  }\n  return false\n}\n\nfunction genAssignmentCode (value, assignment) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model$1,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar cache = Object.create(null);\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  staticKeys: genStaticKeys(modules$1),\n  directives: directives$1,\n  isReservedTag: isReservedTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  getTagNamespace: getTagNamespace,\n  isPreTag: isPreTag\n};\n\nfunction compile$$1 (\n  template,\n  options\n) {\n  options = options\n    ? extend(extend({}, baseOptions), options)\n    : baseOptions;\n  return compile$1(template, options)\n}\n\nfunction compileToFunctions (\n  template,\n  options,\n  vm\n) {\n  var _warn = (options && options.warn) || warn;\n  // detect possible CSP restriction\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      new Function('return 1');\n    } catch (e) {\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        _warn(\n          'It seems you are using the standalone build of Vue.js in an ' +\n          'environment with Content Security Policy that prohibits unsafe-eval. ' +\n          'The template compiler cannot work in this environment. Consider ' +\n          'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n          'templates into render functions.'\n        );\n      }\n    }\n  }\n  var key = options && options.delimiters\n    ? String(options.delimiters) + template\n    : template;\n  if (cache[key]) {\n    return cache[key]\n  }\n  var res = {};\n  var compiled = compile$$1(template, options);\n  res.render = makeFunction(compiled.render);\n  var l = compiled.staticRenderFns.length;\n  res.staticRenderFns = new Array(l);\n  for (var i = 0; i < l; i++) {\n    res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i]);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (res.render === noop || res.staticRenderFns.some(function (fn) { return fn === noop; })) {\n      _warn(\n        \"failed to compile template:\\n\\n\" + template + \"\\n\\n\" +\n        detectErrors(compiled.ast).join('\\n') +\n        '\\n\\n',\n        vm\n      );\n    }\n  }\n  return (cache[key] = res)\n}\n\nfunction makeFunction (code) {\n  try {\n    return new Function(code)\n  } catch (e) {\n    return noop\n  }\n}\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      var ref = compileToFunctions(template, {\n        warn: warn,\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 9\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/json/stringify.js\n// module id = 28\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 29\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 30\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 31\n// module chunks = 2","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/json/stringify.js\n// module id = 32\n// module chunks = 2","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 33\n// module chunks = 2","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 34\n// module chunks = 2","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 35\n// module chunks = 2","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 36\n// module chunks = 2","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 37\n// module chunks = 2","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 38\n// module chunks = 2","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 39\n// module chunks = 2","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 40\n// module chunks = 2","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 41\n// module chunks = 2","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 42\n// module chunks = 2","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 43\n// module chunks = 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 98\n// module chunks = 2","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 99\n// module chunks = 2"],"sourceRoot":""}